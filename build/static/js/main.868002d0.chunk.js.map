{"version":3,"sources":["../node_modules/typescript/lib sync","serviceWorker.js","helpers/chartjs.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","common/validators.js","components/SearchInput/SearchInput.js","components/StatusBullet/StatusBullet.js","components/RouteWithLayout/RouteWithLayout.js","components/ModalComponent/ModalComponent.js","components/LapPeriode/LapPeriode.jsx","layouts/Main/components/Footer/Footer.js","layouts/Main/components/Sidebar/components/Profile/Profile.js","layouts/Main/components/Sidebar/components/SidebarNav/AppMenuItem.js","layouts/Main/components/Sidebar/components/SidebarNav/SidebarNav.js","layouts/Main/components/Sidebar/Sidebar.js","layouts/Main/components/Sidebar/components/UpgradePlan/UpgradePlan.js","layouts/Main/components/Topbar/Topbar.js","layouts/Main/components/ImportScript/ImportScript.js","layouts/Main/Main.js","layouts/Minimal/Minimal.js","views/Home/Home.js","layouts/MinimalUser/MinimalUser.js","views/Dashboard/Dashboard.js","components/usePagination.js","components/Pagination.js","views/MiaCluster/MiaCluster.js","views/MiaSubmittion/MiaSubmittion.js","views/MiaReviewing/MiaReviewing.js","views/MiaJudging/MiaJudging.js","views/MiaAward/MiaAward.js","views/MiaDashboard/MiaDashboard.js","views/NotFound/NotFound.js","views/SignIn/SignIn.js","views/Signout/Signout.js","views/SignUp/SignUp.js","views/Profile/components/ProfileAddModi/ProfileAddModi.js","views/Dashboard/components/VisitorUser/VisitorUser.js","views/KelurahanList/components/KelurahansTable/KelurahansTable.jsx","views/KelurahanList/components/KelurahanAddModi/KelurahanAddModi.js","views/KelurahanList/KelurahanList.js","views/KecamatanList/components/KecamatanTable/KecamatanTable.jsx","views/KecamatanList/components/KecamatanAddModi/KecamatanAddModi.jsx","views/KecamatanList/KecamatanList.jsx","views/KabupatenList/components/KabupatenTable/KabupatenTable.jsx","views/KabupatenList/components/KabupatenAddModi/KabupatenAddModi.jsx","views/KabupatenList/KabupatenList.jsx","views/VuserList/components/VuserTable/VuserTable.jsx","views/VuserList/components/VuserAddModi/VuserAddModi.jsx","views/VuserList/VuserList.jsx","views/KelompokDataList/components/KelompokDataTable/KelompokDataTable.jsx","views/KelompokDataList/components/KelompokDataAddModi/KelompokDataAddModi.jsx","views/KelompokDataList/KelompokDataList.jsx","views/TargetKkList/components/TargetKkTable/TargetKkTable.jsx","views/TargetKkList/components/TargetKkAddModi/TargetKkAddModi.jsx","views/TargetKkList/TargetKkList.jsx","views/UserAccessSurveyList/components/UserAccessSurveyTable/UserAccessSurveyTable.jsx","views/UserAccessSurveyList/components/UserAccessSurveyModi/UserAccessSurveyModi.jsx","views/UserAccessSurveyList/UserAccessSurveyList.jsx","Routes.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Boolean","window","location","hostname","match","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","height","width","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","white","black","green","red","primary","contrastText","dark","colors","indigo","main","light","secondary","blue","success","info","warning","orange","error","text","blueGrey","link","background","default","paper","icon","divider","grey","h1","color","palette","fontWeight","fontSize","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","textTransform","MuiButton","contained","boxShadow","MuiIconButton","root","MuiPaper","elevation1","MuiTableCell","typography","paddingBottom","paddingTop","MuiTableHead","MuiTypography","gutterBottom","marginBottom","theme","createMuiTheme","overrides","zIndex","appBar","drawer","checked","value","message","makeStyles","borderRadius","alignItems","padding","spacing","display","flexBasis","marginRight","input","flexGrow","useStyles","flexShrink","sm","md","lg","neutral","danger","StatusBullet","props","className","size","rest","classes","clsx","defaultProps","RouteWithLayout","Layout","layout","Component","component","render","matchProps","modal","justifyContent","overflow","border","shadows","buttonSuccess","marginTop","buttonCancel","flexDirection","minHeight","avatar","name","PropTypes","string","isRequired","array","createStyles","menuItem","menuItemIcon","AppMenuItem","cls","title","href","items","level","key","isExpandable","length","React","useState","console","log","MenuItemChildren","role","map","item","MenuItemRoot","data-toggle","class","fontWeightMedium","active","SidebarNav","pages","page","media","textAlign","content","actions","breakpoints","up","backgroundImage","backgroundRepeat","backgroundSize","resizeMode","margin","nav","Sidebar","onClose","signOutButton","marginLeft","ImportScript","resourceUrl","useEffect","script","document","createElement","src","async","body","appendChild","removeChild","shiftContent","paddingLeft","Main","children","rowSelect","useTheme","useMediaQuery","defaultMatches","style","float","type","data-target","alt","pathname","fallback","Minimal","animationIn","animationOut","isVisible","Home","transparent","history","localStorage","getItem","push","DOTS","range","start","end","Array","from","_","idx","Pagination","onPageChange","totalCount","siblingCount","currentPage","pageSize","paginationRange","useMemo","totalPageCount","ceil","leftSiblingIndex","max","rightSiblingIndex","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","usePagination","lastPage","classnames","disabled","onClick","pageNumber","MiaCluster","setChecked","togger","target","loopDatas","state","datas","cb_empId","handleInputChange","resultSearch","alert","handleImpactValue","event","persist","handleChangeSearch","setState","isRoi","isHse","isCost","handleSave","today","Date","loopsave","getFullYear","getMonth","getDate","step","cadData","setItem","JSON","stringify","Swal","fire","position","showConfirmButton","timer","handleChange","prevState","formState","values","touched","errorsVar","validate","schema","errors","isValid","valuesSearch","users","alamat","isfaValid","valuesEdit","dataMia","dataClustering","loading","checkedValue","lbhKecil","lbhBesar","user_name","presence","allowEmpty","maximum","password","handleSearch","bind","dataSearch","cekNull","undefined","impactValue","roi","typeNovelty","cost","hse","hsl","filter","data","valuesSearchhsl","isArray","loopCluster","cluster","parse","slice","pageVar","onChange","selected","hidden","lbhKecils","for","setData","el","empId","fullname","tittle","setCurrentPage","MiaSubmittion","valueFrom","handleClose","pesan","pesanImprove","handleSubmit","date","submissiondate","orgData","onSubmit","placeholder","simpleUpload","uploadUrl","toolbar","editor","ClassicEditor","getData","fontStyle","fonStyle","MiaReviewing","handleSignIn","preventDefault","find","user","team","criteria","score","tru","cluste","dataTable","judgeRange","dataUser","MiaDashboard","image","maxWidth","NotFound","Grid","container","justify","xs","Typography","variant","SignIn","newDept","settings","dots","infinite","speed","slidesToShow","slidesToScroll","users4","username","job","dept","grid","quoteContainer","down","quote","backgroundPosition","quoteInner","quoteText","bio","contentContainer","contentHeader","paddingBototm","paddingRight","logoImage","contentBody","form","socialButtons","socialIcon","sugestion","textField","signInButton","withRouter","clear","firstName","lastName","email","policy","policyCheckbox","signUpButton","setFormState","hasError","field","person","IconButton","goBack","TextField","fullWidth","helperText","label","Checkbox","policyText","Link","RouterLink","to","underline","FormHelperText","Button","difference","differenceIcon","differenceValue","inner","minWidth","nameContainer","importButton","yogi","PreworkSolution","lazy","RegistrationSolution","DashboardSolution","EvaluationSolution","Execution","TrackSolution","Routes","exact","HomeView","MainLayout","path","MiaClusterView","MiaSubmittionView","MiaReviewingView","MiaDashboardView","MiaJudgingView","MiaAwardView","SignInView","MinimalLayout","SignoutView","NotFoundView","browserHistory","createBrowserHistory","Chart","helpers","extend","elements","Rectangle","prototype","chartjs","validators","App","ThemeProvider","globalState","storeRedux","createStore","action","newValue","ReactDOM","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.868002d0.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 487;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// ChartJS extension rounded bar chart\r\n// https://codepen.io/jedtrow/full/ygRYgo\r\nfunction draw() {\r\n  const { ctx } = this._chart;\r\n  const vm = this._view;\r\n  let { borderWidth } = vm;\r\n\r\n  let left;\r\n  let right;\r\n  let top;\r\n  let bottom;\r\n  let signX;\r\n  let signY;\r\n  let borderSkipped;\r\n  let radius;\r\n\r\n  // If radius is less than 0 or is large enough to cause drawing errors a max\r\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\r\n  let { cornerRadius } = this._chart.config.options;\r\n  if (cornerRadius < 0) {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (typeof cornerRadius === 'undefined') {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || 'bottom';\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || 'left';\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    const halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    const borderLeft =\r\n      left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n    const borderRight =\r\n      right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n    const borderBottom =\r\n      bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  const borders = ['bottom', 'left', 'top', 'right'];\r\n  let startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  let corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (let i = 1; i < 4; i += 1) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    const width = corners[2][0] - corners[1][0];\r\n    const height = corners[0][1] - corners[1][1];\r\n    const x = corners[1][0];\r\n    const y = corners[1][1];\r\n\r\n    radius = cornerRadius;\r\n    // Fix radius being too large\r\n    if (radius > Math.abs(height) / 2) {\r\n      radius = Math.floor(Math.abs(height) / 2);\r\n    }\r\n    if (radius > Math.abs(width) / 2) {\r\n      radius = Math.floor(Math.abs(width) / 2);\r\n    }\r\n\r\n    if (height < 0) {\r\n      // Negative values in a standard bar chart\r\n      const xTl = x;\r\n      const xTr = x + width;\r\n      const yTl = y + height;\r\n      const yTr = y + height;\r\n\r\n      const xBl = x;\r\n      const xBr = x + width;\r\n      const yBl = y;\r\n      const yBr = y;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else if (width < 0) {\r\n      // Negative values in a horizontal bar chart\r\n      const xTl = x + width;\r\n      const xTr = x;\r\n      const yTl = y;\r\n      const yTr = y;\r\n\r\n      const xBl = x + width;\r\n      const xBr = x;\r\n      const yBl = y + height;\r\n      const yBr = y + height;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else {\r\n      // Positive Value\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.lineTo(x + width - radius, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      ctx.lineTo(x + width, y + height - radius);\r\n      ctx.quadraticCurveTo(\r\n        x + width,\r\n        y + height,\r\n        x + width - radius,\r\n        y + height\r\n      );\r\n      ctx.lineTo(x + radius, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      ctx.lineTo(x, y + radius);\r\n      ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nexport default {\r\n  draw\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nconst white='#FFFFFF';\r\nconst black='#000000';\r\nconst green='#4caf50';\r\nconst red='#f44336';\r\n\r\nexport default {\r\n  black,\r\n  white,\r\n  green,\r\n  red,\r\n  primary: {\r\n    contrastText: white,\r\n    dark: colors.indigo[900],\r\n    main: colors.green[900],//'#000000',\r\n    light: colors.indigo[100]\r\n  },\r\n  secondary: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue['A400'],\r\n    light: colors.blue['A400']\r\n  },\r\n  success: {\r\n    contrastText: white,\r\n    dark: colors.green[900],\r\n    main: colors.green[600],\r\n    light: colors.green[400]\r\n  },\r\n  info: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue[600],\r\n    light: colors.blue[400]\r\n  },\r\n  warning: {\r\n    contrastText: white,\r\n    dark: colors.orange[900],\r\n    main: colors.orange[600],\r\n    light: colors.orange[400]\r\n  },\r\n  error: {\r\n    contrastText: white,\r\n    dark: colors.red[900],\r\n    main: colors.red[600],\r\n    light: colors.red[400]\r\n  },\r\n  text: {\r\n    primary: colors.blueGrey[900],\r\n    secondary: colors.blueGrey[600],\r\n    link: colors.blue[600]\r\n  },\r\n  background: {\r\n    default: '#F4F6F8',\r\n    paper: white\r\n  },\r\n  icon: colors.blueGrey[600],\r\n  divider: colors.grey[200]\r\n};\r\n","import palette from './palette';\r\n\r\nexport default {\r\n  h1: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '35px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '40px'\r\n  },\r\n  h2: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '29px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '32px'\r\n  },\r\n  h3: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '24px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '28px'\r\n  },\r\n  h4: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '20px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '24px'\r\n  },\r\n  h5: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px'\r\n  },\r\n  h6: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px'\r\n  },\r\n  subtitle1: {\r\n    color: palette.text.primary,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '25px'\r\n  },\r\n  subtitle2: {\r\n    color: palette.text.secondary,\r\n    fontWeight: 400,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px'\r\n  },\r\n  body1: {\r\n    color: palette.text.primary,\r\n    fontSize: '14px',\r\n    // fontFamily:'Poppins',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px'\r\n  },\r\n  body2: {\r\n    color: palette.text.secondary,\r\n    fontSize: '12px',\r\n    letterSpacing: '-0.04px',\r\n    // fontFamily:'Poppins',\r\n    lineHeight: '18px'\r\n  },\r\n  button: {\r\n    color: palette.text.primary,\r\n    fontSize: '14px'\r\n  },\r\n  caption: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px'\r\n  },\r\n  overline: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    fontWeight: 500,\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px',\r\n    textTransform: 'uppercase'\r\n  }\r\n};\r\n","import MuiButton from './MuiButton';\r\nimport MuiIconButton from './MuiIconButton';\r\nimport MuiPaper from './MuiPaper';\r\nimport MuiTableCell from './MuiTableCell';\r\nimport MuiTableHead from './MuiTableHead';\r\nimport MuiTypography from './MuiTypography';\r\n\r\nexport default {\r\n  MuiButton,\r\n  MuiIconButton,\r\n  MuiPaper,\r\n  MuiTableCell,\r\n  MuiTableHead,\r\n  MuiTypography\r\n};\r\n","export default {\r\n  contained: {\r\n    boxShadow:\r\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\r\n    backgroundColor: '#FFFFFF'\r\n  }\r\n};\r\n","import palette from '../palette';\r\n\r\nexport default {\r\n  root: {\r\n    color: palette.icon,\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\r\n    }\r\n  }\r\n};\r\n","export default {\r\n  elevation1: {\r\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\r\n  }\r\n};\r\n","import palette from '../palette';\r\nimport typography from '../typography';\r\n\r\nexport default {\r\n  root: {\r\n    ...typography.body1,\r\n    borderBottom: `1px solid ${palette.divider}`,\r\n    paddingBottom: '4px',\r\n    paddingTop: '4px',\r\n  }\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nexport default {\r\n  root: {\r\n    backgroundColor: colors.grey[50]\r\n  }\r\n};\r\n","export default {\r\n  gutterBottom: {\r\n    marginBottom: 8\r\n  }\r\n};\r\n","import { createMuiTheme } from '@material-ui/core';\r\n\r\nimport palette from './palette';\r\nimport typography from './typography';\r\nimport overrides from './overrides';\r\n\r\nconst theme = createMuiTheme({\r\n  palette,\r\n  typography,\r\n  overrides,\r\n  zIndex: {\r\n    appBar: 1200,\r\n    drawer: 1100\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","const checked = (value, options) => {\r\n  if (value !== true) {\r\n    return options.message || 'must be checked';\r\n  }\r\n};\r\n\r\nexport default {\r\n  checked\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Paper, Input, TextField } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    borderRadius: '4px',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(1),\r\n    display: 'flex',\r\n    flexBasis: 420\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  input: {\r\n    flexGrow: 1,\r\n    fontSize: '14px',\r\n    lineHeight: '16px',\r\n    letterSpacing: '-0.05px'\r\n  }\r\n}));\r\n\r\nconst SearchInput=props => {\r\n  const { className, textfind, onChange, style, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  return (\r\n    <Paper\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      style={style}\r\n    >\r\n\r\n      <SearchIcon className={classes.icon} />\r\n\r\n      <Input\r\n\r\n        className={classes.input}\r\n        disableUnderline\r\n        onChange={onChange}\r\n        value={textfind}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nSearchInput.propTypes={\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default SearchInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    display: 'inline-block',\r\n    borderRadius: '50%',\r\n    flexGrow: 0,\r\n    flexShrink: 0\r\n  },\r\n  sm: {\r\n    height: theme.spacing(1),\r\n    width: theme.spacing(1)\r\n  },\r\n  md: {\r\n    height: theme.spacing(2),\r\n    width: theme.spacing(2)\r\n  },\r\n  lg: {\r\n    height: theme.spacing(3),\r\n    width: theme.spacing(3)\r\n  },\r\n  neutral: {\r\n    backgroundColor: theme.palette.neutral\r\n  },\r\n  primary: {\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.info.main\r\n  },\r\n  warning: {\r\n    backgroundColor: theme.palette.warning.main\r\n  },\r\n  danger: {\r\n    backgroundColor: theme.palette.error.main\r\n  },\r\n  success: {\r\n    backgroundColor: theme.palette.success.main\r\n  }\r\n}));\r\n\r\nconst StatusBullet=props => {\r\n  const { className, size, color, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  return (\r\n    <span\r\n      {...rest}\r\n      className={clsx(\r\n        {\r\n          [classes.root]: true,\r\n          [classes[size]]: size,\r\n          [classes[color]]: color\r\n        },\r\n        className\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nStatusBullet.propTypes={\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    'neutral',\r\n    'primary',\r\n    'info',\r\n    'success',\r\n    'warning',\r\n    'danger'\r\n  ]),\r\n  size: PropTypes.oneOf(['sm', 'md', 'lg'])\r\n};\r\n\r\nStatusBullet.defaultProps={\r\n  size: 'md',\r\n  color: 'default'\r\n};\r\n\r\nexport default StatusBullet;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RouteWithLayout=props => {\r\n  const { layout: Layout, component: Component, ...rest }=props;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={matchProps => (\r\n        <Layout className=\"font-poppins\">\r\n          <Component {...matchProps} />\r\n        </Layout>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nRouteWithLayout.propTypes={\r\n  component: PropTypes.any.isRequired,\r\n  layout: PropTypes.any.isRequired,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default RouteWithLayout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    left: '10%',\r\n    justifyContent: \"center\",\r\n    overflow: 'scroll',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    width: \"80%\",\r\n    height: \"90%\",\r\n    overflow: 'scroll'\r\n  }\r\n}));\r\n\r\n\r\nconst ModalComponent=props => {\r\n  const { datas,\r\n    handleChange, getProv, getDataBackend, setData2, setData,\r\n    setRowSelect, users, groups, roles, className, style, open, setOpen, title, rowSelect,\r\n    ComponenAddModi, ViewMap, handleClose, AnggotaKK, setAnggotaKK,\r\n    auditTrailsfind, ...rest }=props;\r\n  const classes=useStyles();\r\n  //alert(\"open=\"+open);\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      className={classes.modal}\r\n      open={open}\r\n      //onClose={handleClose}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500\r\n      }}\r\n    >\r\n      <Fade in={open}>\r\n        {/* */}\r\n\r\n        <div className={classes.paper}>\r\n          <h2 id=\"transition-modal-title\">&nbsp;</h2>\r\n          <ComponenAddModi getProv={getProv} getDataBackend={getDataBackend}\r\n            setData2={setData2}\r\n            handleChange={handleChange} setData={setData}\r\n            setOpen={setOpen} setAnggotaKK={setAnggotaKK} \r\n            AnggotaKK={AnggotaKK}\r\n            setRowSelect={setRowSelect} datas={datas} users={users} groups={groups}\r\n            roles={roles} rowSelect={rowSelect} title={title} handleClose={handleClose}\r\n            auditTrailsfind={auditTrailsfind}\r\n          ></ComponenAddModi>\r\n\r\n          {/*}          <UserAddModi rowUsersSelect={rowUsersSelect} title={title} handleClose={handleClose}></UserAddModi>\r\n\r\n{*/}        </div>\r\n\r\n        {/**/}\r\n\r\n\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\nModalComponent.propTypes={\r\n  className: PropTypes.string,\r\n  handleClose: PropTypes.func,\r\n  open: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default ModalComponent;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { urlGetSetting, urlShowTargetKk } from '../../kumpulanUrl'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\n// import { urlGetKelompokData, urlGetSetting, urlShowKelompokData, urlShowSetting } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n    root: {},\r\n    buttonSuccess: {\r\n      color: theme.palette.white,\r\n      backgroundColor: theme.palette.green,\r\n      '&:hover': {\r\n        backgroundColor: '#4caf50',\r\n        borderColor: '#66bb6a',\r\n        boxShadow: 'none',\r\n      },\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n    },\r\n    buttonCancel: {\r\n      color: theme.palette.white,\r\n      backgroundColor: theme.palette.red,\r\n      '&:hover': {\r\n        backgroundColor: '#f44336',\r\n        borderColor: '#ef5350',\r\n        boxShadow: 'none',\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\nconst LapPeriode=props => {\r\n  const { className, textfind, onChange, style, rowSelect, setRowSelect, getDataBackend, ...rest }=props;\r\n  const classes=useStyles();\r\n  const schema = {\r\n    // Periode_Sensus: {\r\n    //   presence: { allowEmpty: false, message: 'harus diisi' },\r\n    // },\r\n  };\r\n\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    // rowSelect.Periode_Sensus = localStorage.getItem(\"Periode Sensus\")\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    // alert('ini pro')\r\n    const errors=validate(rowSelect,schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); \r\n\r\n//   const handleChange=event => {\r\n    \r\n//     const errors=validate(rowSelect, schema);\r\n\r\n//     setFormState(formState => ({\r\n//       ...rowSelect,\r\n//       isValid: errors? false:true,\r\n//       errors: errors||{}\r\n//     }));\r\n    \r\n//     setRowSelect({\r\n//       ...rowSelect,\r\n//       [event.target.name]: event.target.value\r\n//     });\r\n//   }\r\n\r\n  const handling =()=>{\r\n    {\r\n      var tmp = [];\r\n      // alert(tmp) \r\n      // alert( localStorage.getItem(\"Periode Sensus\") - 5 )\r\n      var periode_sensus = localStorage.getItem(\"Periode Sensus\");\r\n      for (var option = periode_sensus; option >= periode_sensus - 5; option--)\r\n       {tmp.push({\"option\" : option});}\r\n      console.log('temp =',tmp)\r\n      return tmp.map(option => (\r\n          <option value={option.option}>\r\n            {option.option}\r\n          </option>\r\n                   \r\n           ))}\r\n  }\r\n\r\n  return (\r\n\r\n               <TextField\r\n                fullWidth\r\n                label=\"Periode Sensus\"\r\n                margin=\"dense\"\r\n                name=\"Periode_Sensus\"\r\n                onChange={onChange}\r\n                select\r\n                variant=\"outlined\"\r\n                value={rowSelect.Periode_Sensus}\r\n              >\r\n                {handling()}\r\n              </TextField>\r\n     \r\n  );\r\n};\r\n\r\nLapPeriode.propTypes={\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default LapPeriode;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, Link } from '@material-ui/core';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4),\r\n    backgroundColor: '#fff',\r\n\r\n  }\r\n}));\r\n\r\nconst Footer=props => {\r\n  const { className, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography variant=\"body1\">\r\n        &copy;{' 2021. Transparansi APBN - BackOffice       '}\r\n      </Typography>\r\n      <Typography variant=\"caption\">\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nFooter.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink, Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Avatar, Typography, Hidden } from '@material-ui/core';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    minHeight: 'fit-content'\r\n  },\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(1),\r\n    color: '#fff',\r\n  }\r\n}));\r\n\r\nconst Profile=props => {\r\n  const { className, ...rest }=props;\r\n  const { history }=props;\r\n  const classes=useStyles();\r\n\r\n  /*\r\n    const [user, setUser]=\r\n      useState(\r\n        localStorage.getItem('userInLocalStorage')||null\r\n      );\r\n    )\r\n  if (user) alert(\"userInLocalStorage\"); else alert(\"Error\")\r\n  console.log(\r\n    localStorage.getItem('userInLocalStorage')\r\n  \r\n  );\r\n  */\r\n  //  if (!localStorage.getItem('user_id')) alert(\"dsdsd\")\r\n  //alert(!localStorage.getItem('user_id'))\r\n  if (!localStorage.getItem('user_id')) return <Redirect to='/login' />;\r\n  if (!localStorage.getItem('accessId')) return <Redirect to='/login' />;\r\n\r\n  var user={\r\n    name: localStorage.getItem('firstName'),\r\n    //avatar: localStorage.getItem('avatar')\r\n    //bio: 'Brain Director'\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography\r\n        className={classes.name}\r\n        variant=\"h4\"\r\n\r\n      >\r\n\r\n        {user.name}\r\n      </Typography>\r\n\r\n\r\n      {/*}\r\n      <Avatar\r\n        alt=\"Person\"\r\n        className={classes.avatar}\r\n        component={RouterLink}\r\n        src={user.avatar}\r\n        to=\"/settings\"\r\n      />\r\n        \r\n      <Typography\r\n        className={classes.name}\r\n        variant=\"h4\"\r\n\r\n      >\r\n\r\n        {user.name}\r\n      </Typography>\r\n  <Typography variant=\"body2\">{/*user.bio*/}{/*}</Typography>\r\n    {*/}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes={\r\n  className: PropTypes.string,\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\r\nimport {\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\n//import ListItemLink from '@material-ui/core/ListItemLink'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Collapse from '@material-ui/core/Collapse'\r\n\r\nimport IconExpandLess from '@material-ui/icons/ExpandLess'\r\nimport IconExpandMore from '@material-ui/icons/ExpandMore'\r\n\r\n// React runtime PropTypes\r\n//{ title, href, items=[], key, level }\r\nexport const AppMenuItemPropTypes={\r\n    title: PropTypes.string.isRequired,\r\n    href: PropTypes.string,\r\n    items: PropTypes.array,\r\n    key: PropTypes.string,\r\n}\r\n\r\n// TypeScript compile-time props type, infered from propTypes\r\n// https://dev.to/busypeoples/notes-on-typescript-inferring-react-proptypes-1g88\r\ntype appMenuItemPropTypes=PropTypes.InferProps<typeof AppMenuItemPropTypes>\r\ntype appMenuItemPropsWithoutItems=Omit<appMenuItemPropTypes, 'items'>\r\n\r\n// Improve child items declaration\r\nexport type AppMenuItemProps=appMenuItemPropsWithoutItems&{\r\n    items?: AppMenuItemProps[]\r\n}\r\n\r\nconst AppMenuItem: React.FC<AppMenuItemProps>=props => {\r\n    const { cls,title, href, items=[], key, level }=props\r\n    const classes=useStyles()\r\n    const isExpandable=items&&items.length>0\r\n    const [open, setOpen]=React.useState(false)\r\n    console.log(items)\r\n    const marginLeftVar=level*22;\r\n    const MenuItemChildren=isExpandable? (\r\n        <ul className=\"dropdown-menu\" role=\"menu\">\r\n\r\n            {\r\n                items.map((item, index) => (\r\n                    <AppMenuItem {...item} key={index} level={level+1} />\r\n                ))\r\n            }\r\n        </ul>\r\n\r\n    ):null\r\n\r\n    const MenuItemRoot=isExpandable?\r\n        (\r\n            <li className=\"dropdown\" ><a className=\"dropdown-toggle\" href=\"\" data-toggle=\"dropdown\">\r\n                {title}<span className=\"caret\"></span></a>\r\n                {\r\n                    MenuItemChildren\r\n                }\r\n            </li>\r\n        ):\r\n\r\n        (\r\n            <li><a href={href}>\r\n                <i class={cls}></i>{title}</a>\r\n                \r\n            </li>\r\n\r\n\r\n        )\r\n\r\n\r\n    return (\r\n        <>\r\n            {MenuItemRoot}\r\n            {//MenuItemChildren\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nAppMenuItem.propTypes=AppMenuItemPropTypes\r\n\r\nconst useStyles=makeStyles(theme =>\r\n    createStyles({\r\n        menuItem: { color: '#fff', },\r\n        menuItemIcon: {\r\n            color: '#fff',\r\n        },\r\n    }),\r\n)\r\n\r\nexport default AppMenuItem\r\n","/* eslint-disable react/no-multi-comp */\r\n/* eslint-disable react/display-name */\r\nimport React, { forwardRef } from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { List, colors } from '@material-ui/core';\r\nimport AppMenuItem from './AppMenuItem'\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  button: {\r\n    color: colors.blueGrey[800],\r\n    padding: '10px 8px',\r\n    justifyContent: 'flex-start',\r\n    textTransform: 'none',\r\n    letterSpacing: 0,\r\n    width: '100%',\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  },\r\n  icon: {\r\n    color: theme.palette.icon,\r\n    width: 24,\r\n    height: 24,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    '& $icon': {\r\n      color: theme.palette.primary.main\r\n    }\r\n  }\r\n}));\r\n\r\nconst CustomRouterLink=forwardRef((props, ref) => (\r\n  <div\r\n    ref={ref}\r\n    style={{ flexGrow: 1 }}\r\n  >\r\n    <RouterLink {...props} />\r\n  </div>\r\n));\r\n\r\nconst SidebarNav=props => {\r\n  const { pages, className, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"nav navbar-nav\">\r\n        {pages.map((page, index) => (\r\n\r\n          <AppMenuItem {...page} key={index} level={0} />\r\n\r\n        ))}\r\n      </ul>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nSidebarNav.propTypes={\r\n  className: PropTypes.string,\r\n  //pages: PropTypes.array.isRequired\r\n};\r\n\r\nexport default SidebarNav;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Divider, Drawer, Hidden } from '@material-ui/core';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport SupervisedUserCircle from '@material-ui/icons/SupervisedUserCircle';\r\nimport GroupWork from '@material-ui/icons/GroupWork';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\n\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport IconLibraryBooks from '@material-ui/icons/LibraryBooks';\r\nimport Archive from '@material-ui/icons/Search';\r\nimport IconAccessibility from '@material-ui/icons/Accessibility';\r\nimport IconRoom from '@material-ui/icons/Room';\r\n//\r\n\r\n\r\n//import IconLibraryBooks from '@material-ui/icons/LibraryBooks'\r\n\r\nimport { Profile, SidebarNav, UpgradePlan } from './components';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  drawer: {\r\n    width: 260,\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginTop: 64,\r\n      height: 'calc(100% - 64px)'\r\n    }\r\n  },\r\n  root: {\r\n    //    backgroundColor: theme.palette.primary.main,\r\n    backgroundImage: \"url(/img/header.jpeg)\",\r\n    backgroundRepeat: 'no-repeat',\r\n    //backgroundPosition:\" top left\",\r\n    backgroundSize: \"cover\",\r\n    resizeMode: \"cover\",\r\n    top: \"left\",\r\n    color: theme.palette.primary.contrastText,\r\n    display: 'fix',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    padding: 0,\r\n  },\r\n  divider: {\r\n    resizeMode: \"cover\",\r\n\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  nav: {\r\n\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Sidebar=props => {\r\n  const { /*open, variant,*/ onClose, className, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n\r\n\r\n  const pages=[ \r\n    {\r\n      title: 'HOME',\r\n      href: '/',\r\n      cls:'active'\r\n    },\r\n\r\n    {\r\n\r\n      title: 'M I A',\r\n      href: '/#',\r\n\r\n      items: [\r\n\r\n        {\r\n          title: 'Submission',\r\n          href: '/mia/submission',\r\n          cls:'fa fa-share'\r\n        },\r\n        {\r\n          title: 'Clustering',\r\n          href: '/mia/clustering',\r\n          cls:'fa fa-spinner'\r\n        },\r\n        {\r\n          title: 'Reviewing',\r\n          href: '/mia/reviewing',\r\n          cls:'fa fa-eye'\r\n        },\r\n        \r\n        {\r\n          title: 'Judging',\r\n          href: '/mia/judging',\r\n          cls:'fa fa-hourglass-half'\r\n\r\n        },\r\n        {\r\n          title: 'Award',\r\n          href: '/mia/award',\r\n          cls:'fa fa-spinner'\r\n        },\r\n        {\r\n          title: 'Dashboard',\r\n          href: '/mia/dashboard',\r\n          cls:'fa fa-pie-chart'\r\n        }\r\n      ]\r\n    },\r\n\r\n    {\r\n      title: 'TECHNOLOGY SELECTION',\r\n      href:'/#',\r\n      items : [\r\n        {\r\n          title: 'Prework',\r\n          href: '/prework',\r\n          cls:'fa fa-map-o'\r\n        },\r\n        {\r\n          title: 'Registration',\r\n          href: '/registration',\r\n          cls:'fa fa-registered'\r\n        },\r\n        {\r\n          title:'Qualification',\r\n          href:'/qualification',\r\n          cls:'fa fa-object-group'\r\n        \r\n        },\r\n        {\r\n          title:'Execution',\r\n          href:'/execution',\r\n          cls:'fa fa-thumbs-o-up'\r\n        },\r\n        {\r\n          title:'Tracking & Monitoring',\r\n          href:'/tracking',\r\n          cls:'fa fa-pie-chart'\r\n        },        \r\n        {\r\n          title:'Dashboard',\r\n          href:'/dashboardTechnology',\r\n          cls:'fa fa-pie-chart'\r\n        }\r\n      ]\r\n    },\r\n\r\n    {\r\n      title: 'COLLABORATION CENTER',\r\n      href:'/collaborationCenter',\r\n      cls:''\r\n      \r\n    },\r\n    {\r\n      title: 'KNOWLEDGE CENTER',\r\n      href: '/knownlefgeCenter',\r\n      cls:''\r\n\r\n    }\r\n    ,\r\n/*    {\r\n      title: 'Setting Aplikasi',\r\n      href: '/setting'\r\n\r\n    },\r\n    {\r\n      title: 'Kelompok Data',\r\n      href: '/kelompok-data'\r\n\r\n    },\r\n    {\r\n      title: 'Target KK',\r\n      href: '/target-kk'\r\n\r\n    },*/\r\n  ];\r\n  return (\r\n\r\n    /*<!-- ======= Header======= -->*/\r\n    \r\n    <SidebarNav\r\n      className={classes.nav}\r\n      pages={pages}\r\n    />\r\n    \r\n    \r\n\r\n\r\n    /*<!-- End Header -->*/\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\nSidebar.propTypes={\r\n  className: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  //open: PropTypes.bool.isRequired,\r\n  //variant: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, Button, colors } from '@material-ui/core';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: colors.grey[50]\r\n  },\r\n  media: {\r\n    paddingTop: theme.spacing(2),\r\n    height: 80,\r\n    textAlign: 'center',\r\n    '& > img': {\r\n      height: '100%',\r\n      width: 'auto'\r\n    }\r\n  },\r\n  content: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1, 2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  }\r\n}));\r\n\r\nconst UpgradePlan=props => {\r\n  const { className, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <div className={classes.media}>\r\n        <img\r\n          alt=\"Upgrade to PRO\"\r\n          src=\"/images/undraw_resume_folder_2_arse.svg\"\r\n        />\r\n      </div>\r\n\r\n      <div className={classes.content}>\r\n        <Typography\r\n          align=\"center\"\r\n          gutterBottom\r\n          variant=\"h6\"\r\n        >\r\n          Upgrade to PRO\r\n        </Typography>\r\n        <Typography\r\n          align=\"center\"\r\n          variant=\"body2\"\r\n        >\r\n          Upgrade to Devias Kit PRO and get even more components\r\n        </Typography>\r\n      </div>\r\n\r\n      <div className={classes.actions}>\r\n        <Button\r\n          color=\"primary\"\r\n          component=\"a\"\r\n          href=\"https://devias.io/products/devias-kit-pro\"\r\n          variant=\"contained\"\r\n        >\r\n          Upgrade\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUpgradePlan.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UpgradePlan;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { AppBar, Toolbar, Badge, Hidden, IconButton, Typography } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport InputIcon from '@material-ui/icons/Input';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    boxShadow: 'none'\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1\r\n  },\r\n  signOutButton: {\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(0),\r\n    color: '#fff',\r\n  }\r\n}));\r\n\r\nconst isClient=typeof window==='object';\r\n\r\nfunction getSize() {\r\n  return {\r\n    width: isClient? window.innerWidth:undefined,\r\n    height: isClient? window.innerHeight:undefined\r\n  };\r\n\r\n}\r\nconst Topbar=props => {\r\n  const { className, onSidebarOpen, ...rest }=props;\r\n  const [windowSize, setWindowSize]=useState(getSize);\r\n\r\n  const classes=useStyles();\r\n  function handleResize() {\r\n    setWindowSize(getSize());\r\n  }\r\n\r\n  const [notifications]=useState([]);\r\n  window.addEventListener('resize', handleResize);\r\n  const history=useHistory();\r\n  const handleExit=(event) => {\r\n\r\n    //alert(\"sasasa\")\r\n    history.push(\"/logout\");\r\n    //return <Redirect to='/logout' />\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <section id=\"topbar\" className=\"d-none d-lg-block\">\r\n      <div className=\"container clearfix\">\r\n\r\n        <div className=\"logo float-left\">\r\n          <h1 className=\"text-light\"><a href=\"index.html\"><span>Mamba1</span></a></h1>\r\n          {/*}<!-- Uncomment below if you prefer to use an image logo -->\r\n        <!-- <a href=\"index.html\"><img src=\"assets/img/logo.png\" alt=\"\" className=\"img-fluid\"></a>-->{*/}\r\n        </div>\r\n\r\n        <div className=\"social-links float-right\">\r\n          <a href=\"#\" className=\"twitter\"><i className=\"icofont-twitter\"></i></a>\r\n          <a href=\"#\" className=\"facebook\"><i className=\"icofont-facebook\"></i></a>\r\n          <a href=\"#\" className=\"instagram\"><i className=\"icofont-instagram\"></i></a>\r\n          <a href=\"#\" className=\"skype\"><i className=\"icofont-skype\"></i></a>\r\n          <a href=\"#\" className=\"linkedin\"><i className=\"icofont-linkedin\"></i></a>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n\r\n  );\r\n};\r\n\r\nTopbar.propTypes={\r\n  className: PropTypes.string,\r\n  onSidebarOpen: PropTypes.func\r\n};\r\n\r\nexport default Topbar;\r\n","import { useEffect } from 'react';\r\nconst ImportScript=resourceUrl => {\r\n    useEffect(() => {\r\n        const script=document.createElement('script');\r\n        script.src=resourceUrl;\r\n        script.async=false;\r\n        document.body.appendChild(script);\r\n        //      alert(\"dsds\")\r\n        return () => {\r\n            document.body.removeChild(script);\r\n        }\r\n    }, [resourceUrl]);\r\n};\r\nexport default ImportScript;","import React, { useState, useEffect,Suspense } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport { Avatar, useMediaQuery } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { urlProv,urlKab,urlKec,urlKel,urlRw,urlRt,urlGetVuser } from 'kumpulanUrl';\r\nimport { Sidebar, Topbar, Footer, ImportScript } from './components';\r\nimport  '../../../src/assets/vendor/bootstrap/css/bootstrap.min.css';\r\n\r\n/*\r\nimport '../../../src/assets/vendor/bootstrap/css/bootstrap.min.css';\r\nimport '../../../src/assets/vendor/dist/font-awesome-4.1.0/css/font-awesome.css';\r\nimport '../../../src/assets/vendor/dist/css/AdminLTE.min.css';\r\nimport '../../../src/assets/vendor/dist/css/skins/_all-skins.min.css';\r\nimport '../../../src/assets/vendor/dist/css/custom.css';\r\nimport { select } from 'underscore';\r\n*/import AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\n/**/\r\nconst useStyles=makeStyles(theme => ({\r\n\r\n\r\n  root: {\r\n    //paddingTop: 100,\r\n    height: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      //paddingTop: 64\r\n    }\r\n  },\r\n  shiftContent: {\r\n    paddingLeft: 240\r\n  }/*,\r\n  content: {\r\n    height: '100%'\r\n  }*/\r\n}));\r\nconst loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\nconst Main=props => {\r\n  const { children,rowSelect }=props;\r\n\r\n  const classes=useStyles();\r\n  const theme=useTheme();\r\n  const isDesktop=useMediaQuery(theme.breakpoints.up('lg'), {\r\n    defaultMatches: true\r\n  });\r\n\r\n\r\n  const [openSidebar, setOpenSidebar]=useState(false);\r\n\r\n  const handleSidebarOpen=() => {\r\n    setOpenSidebar(true);\r\n  };\r\n\r\n  const handleSidebarcClose=() => {\r\n    setOpenSidebar(false);\r\n  };\r\n  /**/\r\n  const shouldOpenSidebar=isDesktop? true:openSidebar;\r\n  return (\r\n    <>\r\n<div className=\"wrapper\" >\r\n\r\n<header className=\"main-header\" style={{marginTop:0}}>\r\n        <nav className=\"navbar navbar-static-top\">\r\n          <div className=\"container\">\r\n\r\n          <div className=\"navbar-header\">\r\n              <a href=\"#\" className=\"navbar-brand\"><img src=\"/assets/img/logo-5-sm.png\" style={{width:'32px', float: 'left', 'padding-right': '5px'}} className=\"img-responsive\"/> \r\n              <span style={{color:'#2280c1'}}><b>Medco</b> Center of Excellence</span></a>\r\n              <button type=\"button\" className=\"navbar-toggle collapsed\" \r\n              data-toggle=\"collapse\" data-target=\"#navbar-collapse\">\r\n                <i class=\"fa fa-bars\"></i>\r\n              </button>\r\n            </div>\r\n\r\n\r\n\r\n             {\r\n              /*\r\n              <!-- Collect the nav links, forms, and other content for toggling -->\r\n               */\r\n             } \r\n            \r\n            <div className=\"row\">\r\n\t\t\t\t        <div class=\"collapse navbar-collapse pull-left\" id=\"navbar-collapse\">\r\n                <Sidebar />\r\n            </div>\r\n          </div> \r\n            {/*\r\n            <!-- /.navbar-collapse -->\r\n            <!-- Navbar Right Menu -->\r\n            */\r\n            }\r\n            \r\n              <div className=\"navbar-custom-menu\">\r\n                <ul className=\"nav navbar-nav\">\r\n                  {/*\r\n                    <!-- Messages: style can be found in dropdown.less-->\r\n                  \r\n\r\n                    <!-- Notifications Menu -->  \r\n                  */\r\n                  }\r\n                  \r\n                  \r\n                  \r\n                  <li class=\"dropdown user user-menu\">\r\n                    {/*<!-- Menu Toggle Button --> */}\r\n                    \r\n                    <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\r\n                      {/*<!-- The user image in the navbar--> */}\r\n                      <img src=\"assets/img/user2-160x160.jpg\" class=\"user-image\" alt=\"User Image\"/>\r\n                      {\r\n                        /*\r\n                        <!-- hidden-xs hides the username on small devices so only the image appears. -->\r\n                        */  \r\n                      }\r\n                      \r\n                      <span class=\"hidden-xs\">Bayu</span>\r\n                    </a>\r\n                    <ul class=\"dropdown-menu\">\r\n                      {\r\n                        /*\r\n                       {\r\n                      \r\n                        <!-- The user image in the menu -->\r\n                      \r\n                      \r\n                      <!-- Menu Footer-->>\r\n                          \r\n                      \r\n                        */  \r\n                      }\r\n                      \r\n                      <li class=\"user-footer\">\r\n                        <div class=\"pull-left\">\r\n                          <a href=\"#\" class=\"btn btn-default btn-flat\">Profile</a>\r\n                        </div>\r\n                        <div class=\"pull-right\">\r\n                          <a href=\"index.html\" class=\"btn btn-default btn-flat\">Sign out</a>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              {/*<!-- /.navbar-custom-menu -->*/}\r\n          </div>\r\n          {/*<!-- /.container-fluid --> */}\r\n        </nav>\r\n      </header>\r\n      <div class=\"content-wrapper\">\r\n        <div class=\"container\">\r\n          <main id=\"main\">\r\n          {console.log(children.props.location.pathname,\"children\")}\r\n          <Suspense fallback={loading()}>\r\n           {children}\r\n           </Suspense>\r\n\r\n          </main>\r\n        </div>\r\n        </div>              \r\n        <footer class=\"main-footer\">\r\n        <div class=\"container\">\r\n          \r\n          Copyright &copy; 2022 Medco.\r\n        </div>{/*<!-- /.container -->*/}\r\n      </footer>\r\n\r\n</div>{/*<!-- ./wrapper -->*/}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      {/* <!-- ======= Hero Section ======= -->*/}\r\n      {/*\r\n      <Sidebar />\r\n      <main id=\"main\">\r\n        {children}\r\n\r\n      </main>\r\n      */}\r\n      {/*<!-- End #main -->\r\n\r\n    <!--======= Footer======= -->*/}\r\n      {/*<!-- End Footer -->*/}\r\n      {/*ImportScript(\"/assets/plugins/jQuery/jQuery-2.1.4.min.js\")}\r\n      {ImportScript(\"/assets/bootstrap/js/bootstrap.min.js\")}\r\n\r\n      {ImportScript(\"/assets/plugins/slimScroll/jquery.slimscroll.min.js\")}\r\n      {ImportScript(\"/assets/plugins/fastclick/fastclick.min.js\")}\r\n      {ImportScript(\"/assets/jquery-sticky/jquery.sticky.js\")}\r\n      {ImportScript(\"/assets/dist/js/app.min.js\")}\r\n      {ImportScript(\"/assets/dist/js/demo.js\")}\r\n      {\r\n        ImportScript(\"/assets/dist/js/changebodyMain.js\")*/\r\n      }\r\n      {\r\n        ImportScript(\"/assets/js/changebodyMain.js\")\r\n      }\r\n\r\n      {/*<!-- Vendor JS Files -->*/}\r\n\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nMain.propTypes={\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { ImportScript } from '../Main/components';\r\n/*import '../../../src/assets/vendor/bootstrap/css/bootstrap.min.css';\r\nimport '../../../src/assets/vendor/dist/font-awesome-4.1.0/css/font-awesome.css';\r\nimport '../../../src/assets/vendor/dist/css/AdminLTE.min.css';\r\nimport '../../../src/assets/vendor/plugins/iCheck/square/blue.css';\r\nimport '../../../src/assets/vendor/dist/css/custom.css';\r\n*/// import \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport '../../../src/plugins/iCheck/square/blue.css';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport Slider from \"react-slick\";\r\nimport { MinimalUser } from 'layouts';\r\n//import { bg_login } from 'assets/img_master_backup';\r\n// import \"animate.css\"\r\nimport {Animated} from \"react-animated-css\";\r\n\r\nconst useStyles=makeStyles(() => ({\r\n  root: {\r\n    //    paddingTop: 64,\r\n    //    height: '100%'\r\n  },\r\n  content: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst Minimal=props => {\r\n  const { children }=props;\r\n\r\n  const classes=useStyles();\r\n    const settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1\r\n    };\r\n  return (\r\n    <Animated    animationIn=\"fadeInUp\" animationOut=\"fadeOut\" isVisible={true}>\r\n\r\n<div className=\"login-box\"   >\r\n      <div className=\"login-logo\"\r\n      >\r\n        <img src=\"/assets/img/logo-5.png\" style={{marginLeft:'40%'}}/>\r\n        \r\n               <a href=\"index.html\"><b>Medco</b> Center of Excellence</a>\r\n      </div>\r\n      \r\n      {/* <!-- /.login-logo -->*/}\r\n\r\n      <main >\r\n          {children}\r\n        </main>\r\n\r\n      { ImportScript(\"/assets/js/changebodyMin.js\")\r\n      }\r\n\r\n      {ImportScript(\"/plugins/iCheck/icheck.min.js\")}\r\n\r\n      {\r\n        ImportScript(\"/assets/js/inputChecked.js\")\r\n      }\r\n      \r\n    </div>\r\n\r\n    </Animated>\r\n\r\n\r\n  );\r\n};\r\n\r\nMinimal.propTypes={\r\n  children: PropTypes.node,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Minimal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    //padding: theme.spacing(4),\r\n    //        backgroundColor: '#ffF8ffF8',\r\n    transparent: true,\r\n    backgroundColor: '#fff',\r\n    width: '100%',\r\n    //height: '600px'\r\n  }\r\n}));\r\n\r\nconst Home=props => {\r\n  const { history }=props;\r\n/** */\r\n  if (!localStorage.getItem(\"username\")) {\r\n    history.push('/logout');\r\n\r\n  }/**/\r\n\r\n  return (\r\n    <>\r\n    {/*<!-- Content Header (Page header) -->*/ }\r\n    \r\n    <section className=\"content-header\">\r\n      <h1>&nbsp;\r\n      </h1>\r\n      <ol className=\"breadcrumb\">\r\n        <li className=\"active\"><i class=\"fa fa-home\"></i>  Home</li>\r\n      </ol>\r\n    </section>\r\n    {/* <!-- Main content --> */}\r\n    \r\n    <section class=\"content\">\r\n      \r\n      <div class=\"box box-default\">\r\n        <div class=\"box-header with-border\">\r\n          <h3 class=\"box-title\">About Center of Excellence</h3>\r\n        </div>\r\n        <div class=\"box-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <p>The printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.</p>\r\n              <p> It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\r\n            </div>\r\n            <div class=\"col-md-6\"><img src=\"assets/img/medco-logo.png\" class=\"img-responsive\"/></div>\r\n          </div>\r\n          \r\n        </div>{/*<!-- /.box-body -->*/}\r\n      </div>{/*<!-- /.box -->*/}\r\n    </section>{/*<!-- /.content -->*/}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { ImportScript } from '../Main/components';\r\n///import '../../../src/assets/vendor/bootstrap/css/bootstrap.min.css';\r\n//import '../../../src/assets/vendor/dist/font-awesome-4.1.0/css/font-awesome.css';\r\n//import '../../../src/assets/vendor/dist/css/AdminLTE.min.css';\r\n//import '../../../src/assets/vendor/plugins/iCheck/square/blue.css';\r\n//import '../../../src/assets/vendor/dist/css/custom.css';\r\n///import { bg_login } from 'assets/img_master_backup';\r\n\r\nconst useStyles=makeStyles(() => ({\r\n  root: {\r\n    //    paddingTop: 64,\r\n    //    height: '100%'\r\n  },\r\n  content: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst MinimalUser=props => {\r\n  const { children }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  return (\r\n\r\n    \r\n    <div className=\"login-box\">\r\n      <div className=\"login-logo\"> \r\n        <img src=\"/assets/dist/img/bkkbn-logo-sm.png\" width=\"253\" height=\"62\" />\r\n        <h3>System Informasi Sensus</h3>\r\n        <h3>Ruang Petugas Sensus</h3>\r\n      </div>\r\n      {/*<!-- /.login-logo -->*/}\r\n      <div className=\"login-box-body\">\r\n        <p className=\"login-box-msg\">Silahkan Login terlebih dahulu</p>\r\n        <main className={classes.content}>{children}</main>\r\n        {/*  */}\r\n\r\n\r\n      </div>{/*<!-- /.login-box-body -->*/}\r\n\r\n      {/*<!-- jQuery 2.1.4 --> */}\r\n      {ImportScript(\"/assets//plugins/jQuery/jQuery-2.1.4.min.js\")}\r\n      {/*<!-- Bootstrap 3.3.4 -->*/}\r\n      {ImportScript(\"/assets/bootstrap/js/bootstrap.min.js\")}\r\n      {       /*    <!-- iCheck -->*/}\r\n      {ImportScript(\"/assets/plugins/iCheck/icheck.min.js\")}\r\n\r\n      {\r\n        ImportScript(\"/assets/dist/js/changebodyMinimal.js\")\r\n      }\r\n      \r\n    </div>\r\n    \r\n\r\n\r\n  );\r\n};\r\n\r\nMinimalUser.propTypes={\r\n  children: PropTypes.node,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default MinimalUser;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    //padding: theme.spacing(4),\r\n    //        backgroundColor: '#ffF8ffF8',\r\n    transparent: true,\r\n    backgroundColor: '#fff',\r\n    width: '100%',\r\n    //height: '600px'\r\n  }\r\n}));\r\n\r\nconst Dashboard=props => {\r\n  const { history }=props;\r\n/*\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/logout');\r\n\r\n  }*/\r\n\r\n  return (\r\n    <>\r\n      {/*}<!-- End Contact Us Section -->{*/}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { useMemo } from 'react';\r\n\r\nexport const DOTS = '...';\r\n\r\nconst range = (start, end) => {\r\n  let length = end - start + 1;\r\n  return Array.from({ length }, (_, idx) => idx + start);\r\n};\r\n\r\nexport const usePagination = ({\r\n  totalCount,\r\n  pageSize,\r\n  siblingCount = 1,\r\n  currentPage\r\n}) => {\r\n  const paginationRange = useMemo(() => {\r\n    const totalPageCount = Math.ceil(totalCount / pageSize);\r\n\r\n    // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\r\n    const totalPageNumbers = siblingCount + 5;\r\n\r\n    /*\r\n      If the number of pages is less than the page numbers we want to show in our\r\n      paginationComponent, we return the range [1..totalPageCount]\r\n    */\r\n    if (totalPageNumbers >= totalPageCount) {\r\n      return range(1, totalPageCount);\r\n    }\r\n\r\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\r\n    const rightSiblingIndex = Math.min(\r\n      currentPage + siblingCount,\r\n      totalPageCount\r\n    );\r\n\r\n    /*\r\n      We do not want to show dots if there is only one position left \r\n      after/before the left/right page count as that would lead to a change if our Pagination\r\n      component size which we do not want\r\n    */\r\n    const shouldShowLeftDots = leftSiblingIndex > 2;\r\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n\r\n    const firstPageIndex = 1;\r\n    const lastPageIndex = totalPageCount;\r\n\r\n    if (!shouldShowLeftDots && shouldShowRightDots) {\r\n      let leftItemCount = 3 + 2 * siblingCount;\r\n      let leftRange = range(1, leftItemCount);\r\n\r\n      return [...leftRange, DOTS, totalPageCount];\r\n    }\r\n\r\n    if (shouldShowLeftDots && !shouldShowRightDots) {\r\n      let rightItemCount = 3 + 2 * siblingCount;\r\n      let rightRange = range(\r\n        totalPageCount - rightItemCount + 1,\r\n        totalPageCount\r\n      );\r\n      return [firstPageIndex, DOTS, ...rightRange];\r\n    }\r\n\r\n    if (shouldShowLeftDots && shouldShowRightDots) {\r\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n    }\r\n  }, [totalCount, pageSize, siblingCount, currentPage]);\r\n\r\n  return paginationRange;\r\n};","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { usePagination, DOTS } from './usePagination';\r\nimport './pagination.scss';\r\nconst Pagination = props => {\r\n  const {\r\n    onPageChange,\r\n    totalCount,\r\n    siblingCount = 1,\r\n    currentPage,\r\n    pageSize,\r\n    className\r\n  } = props;\r\n    \r\n  const paginationRange = usePagination({\r\n    \r\n    totalCount,\r\n    pageSize,\r\n    siblingCount,\r\n    currentPage\r\n  });\r\n/* */\r\n  if (!paginationRange||currentPage === 0 || paginationRange.length < 2) {\r\n    return null;\r\n  }\r\n/**/\r\n  const onNext = () => {\r\n    onPageChange(currentPage + 1);\r\n  };\r\n\r\n  const onPrevious = () => {\r\n    onPageChange(currentPage - 1);\r\n  };\r\n\r\n  let lastPage = paginationRange[paginationRange.length - 1];\r\n  return (\r\n    <ul\r\n      className={classnames('pagination-container', { [className]: className })}\r\n    >\r\n      <li\r\n        className={classnames('pagination-item', {\r\n          disabled: currentPage === 1\r\n        })}\r\n        onClick={onPrevious}\r\n      >\r\n        <div className=\"arrow left\" />\r\n      </li>\r\n      {paginationRange.map(pageNumber => {\r\n        if (pageNumber === DOTS) {\r\n          return <li className=\"pagination-item dots\">&#8230;</li>;\r\n        }\r\n\r\n        return (\r\n          <li\r\n            className={classnames('pagination-item',()=> {\r\n              selected: pageNumber === currentPage\r\n            })}\r\n            onClick={() => onPageChange(pageNumber)}\r\n          >\r\n            {pageNumber}\r\n          </li>\r\n        );\r\n      })}\r\n      <li\r\n        className={classnames('pagination-item', {\r\n          disabled: currentPage === lastPage\r\n        })}\r\n        onClick={onNext}\r\n      >\r\n        <div className=\"arrow right\" />\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { UserSignIn } from 'views';\r\nimport validate from 'validate.js';\r\nimport '../../assets/css_swal/cssSwal.css';\r\nimport Slider from 'react-slick/lib/slider';\r\n// import { bg_login } from '../../assets/img_master_backup/index'\r\nimport Swal from 'sweetalert2';\r\nimport dataClustering from '../../common/datajson/clustering.json';\r\nimport Pagination from '../../../src/components/Pagination';\r\nimport { connect} from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\n\r\n//import UsersByDevice from 'views/Dashboard/components/UsersByDevice';\r\nimport axios from 'axios';\r\nimport { slidesOnRight } from 'react-slick/lib/utils/innerSliderUtils';\r\nimport data from '@iconify/icons-mdi/counter';\r\n\r\nclass MiaCluster extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: '',\r\n      alamat: '',\r\n      formState:{\r\n        isfaValid: false,\r\n        values: {},\r\n        valuesSearch: {},\r\n        valuesEdit :[],\r\n        \r\n        touched: {},\r\n        errors: {}\r\n      },\r\n      currentPage:1,\r\n      pageSize:15,\r\n      datas:[],\r\n      dataMia:dataClustering,\r\n\r\n      resultSearch:[],\r\n      cadData:[],\r\n      loading:0,\r\n      isCost:false,\r\n      isRoi:false,\r\n      //cluster:'A',\r\n      checkedValue:false,\r\n      \r\n      isHse:false,\r\n      lbhKecil:'<',\r\n      lbhBesar:'>',\r\n\r\n      schema : {\r\n        user_name: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          //email: true,\r\n          length: {\r\n            maximum: 64\r\n          }\r\n        },\r\n        password: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          length: {\r\n            maximum: 128\r\n          }\r\n        }\r\n      }\r\n  \r\n    };\r\n    this.handleSearch=this.handleSearch.bind(this)  \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleInputChange=this.handleInputChange.bind(this)\r\n  }\r\n  setChecked=(e)=>\r\n  {\r\n    //alert(this.state.datas.length);\r\n    let togger=e.target.checked\r\n    for (let loopDatas  = 0; loopDatas < this.state.datas.length; loopDatas++) {\r\n      cb_empId[loopDatas].checked=togger\r\n    }\r\n  \r\n    /*\r\n    for (let loopDatas  = 0; loopDatas < this.state.datas.length; loopDatas++) {\r\n      //console.log(cb_empId);\r\n      \r\n      if(this.state.pageSize!==loopDatas)\r\n      {\r\n        alert(loopDatas)\r\n\r\n        cb_empId[loopDatas].checked=togger\r\n  \r\n      }\r\n      // more statements\r\n    }*/\r\n    \r\n       \r\n    //this.state.checkedValue=true//e.target.checked\r\n  }\r\n  handleInputChange = (e, index) => {\r\n    //setDisable(false);\r\n    const { name, value } = e.target;\r\n    this.state.resultSearch = [...this.state.datas];\r\n    //alert(e.target.checked)//=true\r\n    alert(\":sasasa\")\r\n    if(name!==\"cb_empId\")\r\n    {\r\n      alert(cb_empId[index].checked)\r\n      if(cb_empId[index].checked===false)\r\n      {\r\n        e.target.value=''\r\n      }else\r\n      {\r\n        this.state.resultSearch[index][name] = value;\r\n  \r\n      }\r\n        \r\n    }\r\n    \r\n    //alert(value);\r\n    //alert(list[index][name])\r\n    //if(this.state.datas[0]['cb_empId'])alert(this.state.datas[0]['cb_empId'] )\r\n    //setRows(list);\r\n    /* */\r\n    //console.log(\"this.state.datas1\",this.state.datas);\r\n    //console.log(\"list\",list);\r\n    /*this.setState\r\n    (prevState => ({\r\n      datas:list\r\n      \r\n\r\n      \r\n     \r\n       \r\n    }),()=>{\r\n      console.log(\"this.state.datas2\",this.state.datas);\r\n\r\n    }\r\n    /*,()=>{\r\n      console.log(this.state.formState.valuesSearch,\"this.state.formState.valuesSearch\")\r\n      const errorsVar = validate(this.state.formState.valuesSearch, this.state.schema);\r\n      this.setState\r\n      (prevState => ({\r\n        formState:\r\n        {\r\n          ...prevState.formState, \r\n          errors:\r\n          {\r\n            ...prevState.formState.errors,\r\n            'errors': errorsVar \r\n          }, \r\n          isValid:\r\n          {\r\n            ...prevState.formState.isValid,\r\n            'isValid': errorsVar ? false : true, \r\n          }\r\n          \r\n          \r\n        }\r\n      }))\r\n\r\n      //alert(\"hhhh\");\r\n    });*/\r\n\r\n  };\r\n  //onClick={handleSave}\r\n  handleSearch(event)\r\n  {\r\n    \r\n    //alert(this.state.formState.valuesSearch.impactValue)\r\n      //this.handleChangeSearch typeNovelt isRoi Cost ,hse level impactValue\r\n      let dataSearch=[]\r\n      //alert(\"SSASASA\")\r\n      //alert(impactValue)\r\n\r\n/*\r\n      typeNovelty\r\n      impactValue\r\n      roi\r\n      cost\r\n      hse\r\n      appBoundry\r\n\r\n*/\r\nlet cekNull=true;\r\n\r\n//let impactValue=this.state.formState.valuesSearch.impactValue\r\n//e   \r\n  if(this.state.formState.valuesSearch.impactValue === undefined || \r\n  this.state.formState.valuesSearch.impactValue === null)\r\n    {\r\n      Swal.fire({\r\n        position: 'center',\r\n        icon: 'error',\r\n        title: 'Pilih Filter Pencarian  ',\r\n        showConfirmButton: false,\r\n        timer: 1200\r\n      })\r\n    }else{\r\n      cekNull=false;\r\n    }\r\n//alert(cekNull)\r\n     \r\n//let cekNull=(impactValue?true:false )\r\n      let impactValue=this.state.formState.valuesSearch.impactValue\r\n      let roi=this.state.formState.valuesSearch.roi\r\n      let typeNovelty=this.state.formState.valuesSearch.typeNovelty\r\n      let cost =this.state.formState.valuesSearch.cost;\r\n      let hse=this.state.formState.valuesSearch.hse\r\n      let hsl=this.state.formState.valuesSearch.hsl\r\n      let level=this.state.formState.valuesSearch.level\r\n      //alert(cekNull)\r\n      if(cekNull===false && impactValue===\"ROI\")\r\n      {\r\n  //      alert(hsl)\r\n        cekNull=typeNovelty && roi && hsl && level ?false : true;\r\n           \r\n      }else if(cekNull===false && impactValue===\"Cost Saving\")\r\n      {\r\n        cekNull=typeNovelty && cost && hsl && level ?false: true\r\n      }else if(cekNull===false && impactValue===\"HSE\")\r\n      {\r\n        cekNull=typeNovelty && hse && hsl && level ?false: true\r\n      } \r\n      impactValue=this.state.formState.valuesSearch.impactValue\r\n      if(cekNull===true) \r\n       {\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'error',\r\n          title: 'Pilih Filter Pencarian  ',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n       }else{\r\n        if(this.state.formState.valuesSearch.impactValue===\"ROI\")\r\n        { \r\n          //console.log(\"this.state.cadData\",this.state.cadData)\r\n          dataSearch=this.state.cadData.filter((data => data.typeNovelty === \r\n            this.state.formState.valuesSearch.typeNovelty\r\n            && data.roi===this.state.formState.valuesSearch.roi \r\n            && data.level===this.state.formState.valuesSearch.level\r\n            && data.hsl===this.state.formState.valuesSearch.hsl));\r\n            \r\n        }else if(impactValue===\"Cost Saving\")\r\n        {\r\n          dataSearch=this.state.cadData.filter((data => data.typeNovelty === this.state.formState.valuesSearch.typeNovelty\r\n            && data.cost===this.state.formState.valuesSearch.cost \r\n            && data.level==this.state.formState.valuesSearch.level\r\n            && data.hsl===this.state.formState.valuesSearchhsl));\r\n        }else if(impactValue===\"HSE\")\r\n        {\r\n          dataSearch=this.state.cadData.filter((data => data.typeNovelty === this.state.formState.valuesSearch.typeNovelty\r\n            && data.hse===this.state.formState.valuesSearch.hse\r\n            && data.level===this.state.formState.valuesSearch.level\r\n            && data.hsl===this.state.formState.valuesSearch.hsl))\r\n        }\r\n        console.log(dataSearch,\"dataSearch33333\")\r\n        dataSearch=!Array.isArray(dataSearch)?(dataSearch?[dataSearch]:dataSearch):dataSearch;\r\n        //this.state.cluster='B'\r\n        if(Array.isArray(dataSearch))\r\n        {\r\n          for(let loopCluster=0;loopCluster<=dataSearch.length-1;loopCluster++)\r\n          {\r\n            dataSearch[loopCluster]['cluster']=this.state.formState.valuesSearch.cluster;\r\n          }\r\n        }\r\n        //this.state.datas=dataSearch;\r\n        //alert(\"DSDS\")\r\n        console.log(dataSearch,\"dataSearch33333\")\r\n        //this.state.cadData=[... dataSearch]\r\n        /* */\r\n        this.setState({datas: dataSearch})\r\n        /**/\r\n       /* this.setState\r\n    (prevState => ({\r\n      datas:\r\n      {\r\n        ...prevState.datas, \r\n        datas:dataSearch\r\n        \r\n  \r\n     }\r\n     */\r\n    \r\n    //console.log(\"dataSearch baru\",dataSearch)\r\n     \r\n       \r\n        }/**/\r\n        //localStorage.setItem(\"data\",JSON.stringify(dataSearch))\r\n        //alert(this.state.formState.valuesSearch.impactValue)\r\n  \r\n       }//\r\n       \r\n\r\n/*\r\n      (this.state.formState.valuesSearch.impactValue &&  \r\n      this.state.formState.valuesSearch.impactValue===\"ROI\"\r\n      ?this.state.formState.valuesSearch.roi && $this.state.formState.valuesSearch.level)\r\n*/\r\n       //}\r\n  \r\n  componentWillMount() {\r\n\r\n     //const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n    /*if(!this.state.datas)\r\n    {*/\r\n      if(localStorage.getItem('data'))\r\n      {\r\n        //alert(\"dsds\")\r\n        //alert(localStorage.getItem('data'))\r\n        \r\n        this.state.dataMia= JSON.parse(localStorage.getItem('data')) \r\n        console.log(\"dataMia\",JSON.parse(localStorage.getItem('data')))\r\n  \r\n      }else{\r\n        localStorage.setItem('data',  JSON.stringify(this.state.dataMia) );\r\n      }\r\n      this.state.datas=this.state.dataMia.filter((data => data.step == \r\n        \"Submission\"))\r\n      this.state.cadData=[... this.state.datas]\r\n\r\n\r\n  }\r\n  setData()  {\r\n    //alert(\"data=\"+this.state.datas.length)\r\n    const firstPageIndex = (this.state.currentPage - 1) * this.state.pageSize;\r\n    const lastPageIndex = firstPageIndex + this.state.pageSize;\r\n    \r\n   //console.log(\"this.state.datas hasil search=\",this.state.datas)\r\n    if(this.state.datas.length!==undefined) \r\n    {\r\n      \r\n      //alert(\"DDDD\")\r\n      return this.state.datas.slice(firstPageIndex, lastPageIndex);\r\n    }else \r\n    {console.log(\"this.state.datas\",this.state.datas)\r\n      return this.state.datas\r\n    }\r\n  }\r\n  setCurrentPage(pageVar)\r\n  {\r\n    this.setState({currentPage: pageVar});\r\n  }\r\n  handleImpactValue= event => {\r\n    event.persist();\r\n    let name=event.target.name;\r\n    let value=event.target.value;\r\n    this.handleChangeSearch(event);\r\n    if(value===\"ROI\")\r\n    {\r\n      this.setState({isRoi: true});\r\n      this.setState({isHse: false});\r\n      this.setState({isCost: false});\r\n   \r\n    \r\n    }else if(value===\"Cost Saving\")\r\n    {\r\n    this.setState({isRoi: false});\r\n    this.setState({isHse: false});\r\n    this.setState({isCost: true});\r\n \r\n    }else if(value===\"HSE\")\r\n    {\r\n    this.setState({isRoi: false});\r\n    this.setState({isHse: true});\r\n    this.setState({isCost: false});\r\n \r\n    }\r\n  }\r\n  handleSave = () => {\r\n//    setEdit(!isEdit);\r\n    //setRows(rows);\r\n    let today = new Date();\r\n  let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n  for (let loopsave=0;loopsave<=this.state.resultSearch.length-1;loopsave++)\r\n  {\r\n    this.state.resultSearch[loopsave].step=\"Clustering\";\r\n\r\n    //this.state.resultSearch[loopsave].submissiondate=date\r\n  }\r\n  \r\n  //this.state.resultSearch.step=\"Cluster\";\r\n  \r\n    this.setState({datas: this.state.resultSearch});\r\n    this.setState({cadData:this.state.datas});\r\n    localStorage.setItem('data', JSON.stringify(this.state.cadData)); \r\n\r\n    const { history }=this.props;\r\n    //alert(\"dds\") \r\n      history.push(\"/mia/reviewing\");\r\n      Swal.fire({\r\n        position: 'center',\r\n        icon: 'Success',\r\n        title: 'Data have been Clustering proceess   ',\r\n        showConfirmButton: false,\r\n        timer: 1000\r\n      })\r\n\r\n    \r\n    //this.state.resultSearch\r\n    //console.log(\"saved : \", rows);\r\n    //setDisable(true);\r\n    //setOpen(true);\r\n};\r\n/*\r\n  handleInputChange = (e, index) => {\r\n    setDisable(false);\r\n    const { name, value } = e.target;\r\n    const list = [...rows];\r\n    list[index][name] = value;\r\n    setRows(list);\r\n};\r\n*/\r\n  handleChange = event => {\r\n    event.persist();\r\n\r\n    let value=event.target.value;\r\n        let name=event.target.name;\r\n //       alert(name+\" \"+value)\r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        values:\r\n        {\r\n          ...prevState.formState.values,\r\n          [name]: value \r\n        },\r\n        touched:\r\n        {\r\n          ...prevState.formState.touched,\r\n          [event.target.name]: true\r\n        },\r\n        \r\n\r\n  \r\n     }\r\n\r\n      \r\n     \r\n       \r\n    }),()=>{\r\n      const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n      this.setState\r\n      (prevState => ({\r\n        formState:\r\n        {\r\n          ...prevState.formState, \r\n          errors:\r\n          {\r\n            ...prevState.formState.errors,\r\n            'errors': errorsVar \r\n          }, \r\n          isValid:\r\n          {\r\n            ...prevState.formState.isValid,\r\n            'isValid': errorsVar ? false : true, \r\n          }\r\n          \r\n          \r\n        }\r\n      }))\r\n\r\n      //alert(\"hhhh\");\r\n    });\r\n\r\n    \r\n\r\n  };\r\n  \r\n\r\n\r\n  handleChangeSearch = event => {\r\n    //alert(\"DSDSDS\")\r\n    //event.persist();\r\n\r\n\r\n        //alert(name+\" \"+value)valuesEdit\r\n\r\n\r\n    let value=event.target.value;\r\n        let name=event.target.name;\r\n        //alert(name)\r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        valuesSearch:\r\n        {\r\n          ...prevState.formState.valuesSearch,\r\n          [name]: value \r\n        }/*,\r\n        touched:\r\n        {\r\n          ...prevState.formState.touched,\r\n          [event.target.name]: true\r\n        },*/\r\n\r\n  \r\n     }\r\n\r\n      \r\n     \r\n       \r\n    })\r\n    /*,()=>{\r\n      console.log(this.state.formState.valuesSearch,\"this.state.formState.valuesSearch\")\r\n      const errorsVar = validate(this.state.formState.valuesSearch, this.state.schema);\r\n      this.setState\r\n      (prevState => ({\r\n        formState:\r\n        {\r\n          ...prevState.formState, \r\n          errors:\r\n          {\r\n            ...prevState.formState.errors,\r\n            'errors': errorsVar \r\n          }, \r\n          isValid:\r\n          {\r\n            ...prevState.formState.isValid,\r\n            'isValid': errorsVar ? false : true, \r\n          }\r\n          \r\n          \r\n        }\r\n      }))\r\n\r\n      //alert(\"hhhh\");\r\n    }*/);\r\n\r\n    \r\n\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n \r\n    render() {\r\n\r\n  \r\n      return (\r\n        <>\r\n            \r\n        <section class=\"content-header\">\r\n          <h1>&nbsp; </h1>\r\n          <ol class=\"breadcrumb\">\r\n            <li><a href=\"home.html\"><i class=\"fa fa-home\"></i> Home</a></li>\r\n            <li><a href=\"#\">MIA</a></li>\r\n            <li class=\"active\"> Clustering</li>\r\n          </ol>\r\n        </section>\r\n\r\n        {/*<!-- Main content -->*/}\r\n        <section class=\"content\">\r\n       \r\n          <div class=\"box box-default\">\r\n            <div class=\"box-header with-border\">\r\n              <h3 class=\"box-title\"><i class=\"fa fa-spinner\"></i> CLUSTERING</h3>\r\n            </div>\r\n            \r\n            <form  >\r\n            <div class=\"clearfix\">&nbsp;</div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\" style={{padding: '2px 0', backgroundColor: '#f0f0f0'}}>\r\n                <div class=\"col-md-1\">Filter:</div>\r\n                <div class=\"col-md-1\"><span class=\"form-group\">\r\n                    <select name=\"typeNovelty\"  class=\"form-control\" \r\n                    style={{height:'24px', padding:0}}\r\n                    onChange={this.handleChangeSearch}>\r\n                      <option selected>Novelty</option>\r\n                      <option>New</option>\r\n                      <option>Improve Existing</option>\r\n                    </select>\r\n                  </span>\r\n                </div>\r\n                \r\n\r\n                <div class=\"col-md-2\"><span class=\"form-group\">\r\n                    <select name=\"impactValue\" \r\n                    onChange={this.handleImpactValue}\r\n                    class=\"form-control\" style={{height:'24px', padding:0}}>\r\n                      <option selected>Impact Value</option>\r\n                      <option>ROI</option>\r\n                      <option>Cost Saving</option>\r\n                      <option>HSE</option>\r\n                    </select>\r\n                  </span>\r\n                </div>\r\n                \r\n                <div class=\"col-md-2\" hidden={!this.state.isRoi}><span class=\"form-group\" >\r\n                    <select name=\"roi\" onChange={this.handleChangeSearch } class=\"form-control\" style={{height:'24px', padding:0}}>\r\n                      <option selected>ROI</option>\r\n                      <option value=\"Very High\">Very High | {this.state.lbhBesar}20% </option>\r\n                      <option value=\"High\">High | 15-20% </option>\r\n                      <option value=\"Medium\">Medium | 10-15%</option>\r\n                      <option value=\"Moderate\">Moderate | {this.state.lbhKecil}10%</option>\r\n                     \r\n                    </select>\r\n                  </span>\r\n                </div>\r\n \r\n                \r\n                <div class=\"col-md-2\" hidden={!this.state.isCost}><span class=\"form-group\" >\r\n                    <select name=\"cost\" \r\n                    onChange={this.handleChangeSearch}\r\n                    class=\"form-control\" style={{height:'24px', padding:0}}>\r\n                      <option selected>Cost Saving</option>\r\n                      <option value=\"Extremely High Impact\">Extremely High Impact |  {this.state.lbhBesar} 1 MM USD </option>\r\n                      <option value=\"Very High Impact\">Very High Impact | 500 - 1 MM USD </option>\r\n                      <option value=\"Moderate High Impact\">Moderate High Impact | 100 - 500 K USD </option>\r\n                      <option value=\"Moderate\">Moderate Impact | 50 K - 100 K USD</option>\r\n                      <option value=\"Low Impact\">Low Impact | | {this.state.lbhKecils} 50 K USD</option>\r\n                     \r\n                    </select>\r\n                  </span>\r\n                  \r\n                </div>\r\n                \r\n                <div class=\"col-md-2\" hidden={!this.state.isHse}><span class=\"form-group\">\r\n                    <select name=\"hse\" \r\n                     onChange={this.handleChangeSearch}\r\n                    class=\"form-control\" style={{height:'24px', padding:0}}>\r\n                      <option selected>HSE</option>\r\n                      <option value=\"Remove Hazard\">Remove Hazard </option>\r\n                      <option value=\"Minimize Hazard \"> Minimize Hazard  </option>\r\n                      <option value=\"Contain Hazard\">Contain Hazard</option>\r\n                      <option value=\"Protect Hazard\">Protect Hazard</option>\r\n                     \r\n                    </select>\r\n                  </span>\r\n                </div>\r\n                \r\n                \r\n\r\n                <div class=\"col-md-3\"><span class=\"form-group\">\r\n                    <select name=\"hsl\" onChange={this.handleChangeSearch} class=\"form-control\" style={{height:'24px', padding:0}}>\r\n                      <option selected>Application Boundary</option>s\r\n                      <option value=\"Facility\">Facility</option>\r\n                      <option value=\"System\">System</option>\r\n                      <option value=\"Sub System\">Sub System</option>\r\n                      <option value=\"Equipment\">Equipment</option>\r\n                      <option value=\"Sub Equipment\">Sub Equipment</option>\r\n                      <option value=\"Component\">Component</option>\r\n                      <option value=\"Part\">Part</option>\r\n                      <option value=\"Other\">Other</option>\r\n                    </select>\r\n                  </span>\r\n                </div>\r\n                <div class=\"col-md-2\"><span class=\"form-group\">\r\n                    <select name=\"level\" onChange={this.handleChangeSearch} class=\"form-control\" style={{height:'24px', padding:0}}>\r\n                      <option selected>Change Level</option>\r\n                      <option>Low</option>\r\n                      <option>Medium</option>\r\n                      <option>High/Radical</option>\r\n                    </select>\r\n                  </span>\r\n                </div>\r\n                \r\n                <div class=\"col-md-1\"><span class=\"form-group\">\r\n                    <select name=\"cluster\"\r\n                     onChange={this.handleChangeSearch}\r\n                    class=\"form-control\" style={{height:'24px', padding:0}}>\r\n                      <option selected>Cluster</option>\r\n                      <option>A</option>\r\n                      <option>B</option>\r\n                      <option>C</option>\r\n                    </select>\r\n                  </span>\r\n                </div>\r\n                <div class=\"col-md-1\"><span class=\"form-group\">\r\n                    <button type=\"button\" class=\"btn btn-success btn-xs\" \r\n                    onClick={this.handleSearch}>GO </button></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            </form>\r\n            <div class=\"box-body table-responsive no-padding\">\r\n\r\n              <table class=\"table table-striped\">\r\n                <tr>\r\n                  <th width=\"21\" style={{width: '10px'}}>\r\n                    <input type=\"checkbox\" name=\"checkbox\" onChange= {(e) => this.setChecked(e)}  id=\"checkbox\"/>\r\n                    <label for=\"checkbox\"> </label></th>\r\n                  <th width=\"30\" style={{width: '10px'}}>ID</th>\r\n                  <th width=\"137\">Full Name</th>\r\n                  <th width=\"446\">Title</th>\r\n                  <th width=\"49\">Cluster</th>\r\n                  <th width=\"80\">Gate 1</th>\r\n                  <th width=\"69\" style={{width: '40px'}}>Assign Reviewer</th>\r\n                  <th width=\"72\" style={{width: '40px'}}>Assign Criteria</th>\r\n                </tr>\r\n                {/*console.log(\"this.state.datas1\",this.state.datas)*/}\r\n                { \r\n                  this.state.datas!==undefined?\r\n                this.setData().map((el,i) =>\r\n                {\r\n                  return(\r\n\r\n                    <tr>\r\n                    <td><span style={{width: '10px'}}>\r\n                      <input type=\"checkbox\"  name=\"cb_empId\"    \r\n                      onChange={(e) => this.handleInputChange(e, i)}  id=\"cb_empId\"/>\r\n                     \r\n\r\n                    </span></td>\r\n                    <td>{el.empId}</td>\r\n                    <td>{el.fullname}</td>\r\n                    <td>{el.tittle}</td>\r\n                    <td>{el.cluster}&nbsp;</td>\r\n                    <td><span class=\"form-group\">\r\n                        <select name=\"gate1\"  onChange={(e) => this.handleInputChange(e, i)} class=\"form-control\" style={{height:'24px', fontSize: 'small',padding:0}}>\r\n                          <option value='' selected>Gate 1</option>\r\n                          <option value='Passed'>Passed</option>\r\n                          <option value='Retained'>Retained</option>\r\n                        </select>\r\n                      </span></td>\r\n                    <td><span class=\"form-group\">\r\n                        <select name=\"team\" class=\"form-control\"  onChange={(e) => this.handleInputChange(e, i)} style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                          <option selected>Team</option>\r\n                          <option>Team 1</option>\r\n                          <option>Team 2</option>\r\n                        </select>\r\n                      </span><span class=\"form-group\">\r\n                        <select name=\"head\" class=\"form-control\"  onChange={(e) => this.handleInputChange(e, i)} style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                          <option selected>Head</option>\r\n                          <option>Didik</option>\r\n                          <option>Alief</option>\r\n                          <option>Gugun</option>\r\n                          <option>Faisal</option>\r\n                        </select>\r\n                      </span><span class=\"form-group\">\r\n                        <select name=\"member\" class=\"form-control\" onChange={(e) => this.handleInputChange(e, i)} style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                          <option selected>Member</option>\r\n                          <option>Didik</option>\r\n                          <option>Alief</option>\r\n                          <option>Gugun</option>\r\n                          <option>Faisal</option>\r\n                        </select>\r\n                      </span></td>\r\n                    <td><span class=\"form-group\">\r\n                        <select name=\"criteria\" class=\"form-conritrol\"  onChange={(e) => this.handleInputChange(e, i)} style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                          <option selected>Criteria</option>\r\n                          <option>A</option>\r\n                          <option>B</option>\r\n                          <option>C</option>\r\n                        </select>\r\n                      </span></td>\r\n                  </tr>\r\n  \r\n\r\n\r\n\r\n\r\n                    \r\n                  )\r\n\r\n                }):null\r\n                }\r\n                \r\n              </table>\r\n            </div>\r\n            {/*<!-- /.box-body -->*/}\r\n            \r\n           { (this.state.datas!==undefined)?(\r\n            <div class=\"box-footer clearfix\">\r\n              <button onClick={this.handleSave} class=\"btn btn-primary\"><i class=\"fa fa-hourglass-start\"></i> Process</button>\r\n              <Pagination\r\n        className=\"pagination pagination-sm no-margin pull-right\"\r\n        currentPage={this.state.currentPage}\r\n        totalCount={this.state.datas.length}\r\n        pageSize={this.state.pageSize}\r\n        onPageChange={page => this.setCurrentPage(page)}\r\n      />\r\n              \r\n            </div>\r\n            ):null}\r\n\r\n          </div>{/*<!-- /.box -->*/}\r\n        </section>\r\n\r\n\r\n\r\n        </>\r\n \r\n        ) \r\n    }\r\n};\r\n\r\n\r\nexport default MiaCluster","\r\nimport React from 'react';\r\n// import { Link as RouterLink, withRouter } from 'react-router-dom';\r\n//import writeFileP from 'write-file-p');\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { UserSignIn } from 'views';\r\nimport validate from 'validate.js';\r\nimport '../../assets/css_swal/cssSwal.css';\r\nimport Slider from 'react-slick/lib/slider';\r\n// import { bg_login } from '../../assets/img_master_backup/index'\r\nimport dataClustering from '../../common/datajson/clustering.json';\r\nimport {CKEditor} from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport Swal from 'sweetalert2';\r\nimport { makeStyles, ThemeProvider } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport { connect} from 'react-redux';\r\n//import UsersByDevice from 'views/Dashboard/components/UsersByDevice';\r\nimport axios from 'axios';\r\n\r\nclass MiaSubmittion extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: '',\r\n      alamat: '',\r\n      formState:{\r\n        isValid: false,\r\n        values: {},\r\n        touched: {},\r\n        errors: {},\r\n      },\r\n      lbhKecil:'<',\r\n      lbhBesar:'>',\r\n      datas:dataClustering,\r\n      pesan:true,\r\n      pesanImprove:true,\r\n      orgData:[],\r\n      schema : {\r\n        user_name: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          //email: true,\r\n          length: {\r\n            maximum: 64\r\n          }\r\n        },\r\n        password: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          length: {\r\n            maximum: 128\r\n          }\r\n        }\r\n      }\r\n  \r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    //this.inputHandlerCKE=this.inputHandlerCKE.bind(this)\r\n    //this.logEvent=this.logEvent.bind(this);\r\n  }\r\n valueFrom=(value,name)=>{\r\n \r\n  this.setState\r\n  (prevState => ({\r\n    formState:\r\n    {\r\n      ...prevState.formState, \r\n      values:\r\n      {\r\n        ...prevState.formState.values,\r\n        [name]: value \r\n      },\r\n      touched:\r\n      {\r\n        ...prevState.formState.touched,\r\n        [name]: true\r\n      },\r\n      \r\n\r\n\r\n   }\r\n\r\n    \r\n   \r\n     \r\n  }),()=>{\r\n    const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n    console.log(\"formState\",this.state.formState)\r\n\r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        errors:\r\n        {\r\n          ...prevState.formState.errors,\r\n          'errors': errorsVar \r\n        }, \r\n        isValid:\r\n        {\r\n          ...prevState.formState.isValid,\r\n          'isValid': errorsVar ? false : true, \r\n        }\r\n        \r\n        \r\n      }\r\n    }))\r\n\r\n    //alert(\"hhhh\");\r\n  });\r\n\r\n  \r\n }\r\n handleClose=()=>{\r\n  const { history }=this.props;\r\n \r\n  history.push(\"/mia/clustering\");\r\n \r\n}\r\n  \r\nhandleChange = event => {\r\n    event.persist();\r\n    let name=event.target.name\r\n    \r\n    let value=event.target.value\r\n    if(name===\"typeNovelty\" && value===\"New\") \r\n    {this.state.pesan=!this.state.pesan;this.state.pesanImprove=true}\r\n    if(name===\"typeNovelty\" && value===\"Improve Existing\") \r\n    {\r\n      this.state.pesanImprove=!this.state.pesanImprove\r\n      this.state.pesan=true\r\n    }\r\n\r\n \r\n    this.valueFrom(value,name)\r\n    \r\n\r\n  };\r\n  handleSubmit = event => {\r\n  if(localStorage.getItem('data'))\r\n  {\r\n    //alert(\"Dsdsdss\")\r\n    this.state.datas=JSON.parse( localStorage.getItem('data') ) // parse to object if necessary\r\n    \r\n  }else{\r\n    this.state.datas=dataClustering\r\n  }\r\n  let today = new Date();\r\n  let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n  this.state.formState.values.submissiondate=date;\r\n  this.state.formState.values.step=\"Submission\";\r\n  this.state.formState.values.id=dataClustering.length+1//this.state.datas.length+1\r\n  this.state.datas.push(  this.state.formState.values)\r\n  dataClustering.push( this.state.formState.values)\r\n  localStorage.setItem('data', JSON.stringify(this.state.datas) /* JSON.stringify(dataClustering)*/ );\r\n\r\n  \r\n\r\n //  let fileContent = 'I can write';\r\n///  fs.writeFileSync('../../common/datajson/clustering.json', JSON.stringify(this.state.datas));\r\n   \r\n\r\n   //const writeFileP = require(\"write-file-p\");\r\n \r\n   /*\r\n   const saveFile= (saveLocation,data,encoding='utf8')=> {\r\n     let dataString = JSON.stringify(data,null,2)\r\n  }*/\r\n  const { history }=this.props;\r\n//alert(\"dds\") \r\n  history.push(\"/mia/clustering\");\r\n  Swal.fire({\r\n    position: 'center',\r\n    icon: 'Success',\r\n    title: 'Data have been submited  ',\r\n    showConfirmButton: false,\r\n    timer: 1000\r\n  })\r\n\r\n    //Write a text file\r\n   //writeFileP('../../common/datajson/clustering.json', JSON.stringify(this.state.datas), (err, data) => {\r\n       //console.log(err || data);\r\n   //});\r\n   \r\n\r\n   //writeJsonFile.writeJsonFile('../../common/datajson/clustering.json', JSON.stringify(this.state.datas), (err) => {\r\n    //if (err) console.log('Error writing file:', err);\r\n\r\n   /*\r\n   this.setState\r\n    (prevState => ({\r\n      datas:\r\n      {\r\n        ...prevState.datas, \r\n        datas:this.state.value\r\n        \r\n      }\r\n    }))\r\n  \r\n    */\r\n\r\n  }\r\n  \r\n\r\n    render() {\r\n\r\n  \r\n      return (\r\n        <>\r\n            \r\n          <section class=\"content-header\">\r\n          <h1>&nbsp;\r\n\r\n          </h1>\r\n          <ol class=\"breadcrumb\">\r\n            <li><a href=\"home.html\"><i class=\"fa fa-home\"></i> Home</a></li>\r\n            <li><a href=\"#\">MIA</a></li>\r\n            <li class=\"active\"> Submission</li>\r\n          </ol>\r\n        </section>\r\n\r\n        {/*<!-- Main content -->*/}\r\n        <section class=\"content\">\r\n\r\n          <div class=\"box box-default\">\r\n            <div class=\"box-header with-border\">\r\n              <h3 class=\"box-title\"><i class=\"fa fa-share\"></i> SUBMISSION</h3>\r\n            </div>\r\n            <div class=\"box-body\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                  <form class=\"form-horizontal\" onSubmit={this.handleSubmit}>\r\n                    <div class=\"box-header with-border\">\r\n                      <h4 class=\"box-title\">Fill Your Personal Data</h4>\r\n                    </div>\r\n                    <div class=\"box-body\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"col-sm-2 control-label\">Full Name</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <input type=\"text\" name=\"fullname\" class=\"form-control\" id=\"inputName\" \r\n                          placeholder=\"Full Name\" onChange={this.handleChange}/>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label  class=\"col-sm-2 control-label\">Employee ID</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <input type=\"text\" class=\"form-control\" name=\"empId\" id=\"empId\" placeholder=\"Employee ID\"\r\n                          onChange={this.handleChange}/>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label /*for=\"inputFunction\"*/ class=\"col-sm-2 control-label\">Function</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <input type=\"text\" class=\"form-control\" id=\"inputFunction\" name=\"function\"  onChange={this.handleChange} \r\n                          placeholder=\"Function\"  />\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label for=\"inputDiscipline\" class=\"col-sm-2 control-label\">Discipline</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <input type=\"text\" class=\"form-control\" id=\"inputEmployee\" name=\"discipline\"\r\n                          onChange={this.handleChange} placeholder=\"Discipline\"/>\r\n                        </div>\r\n                      </div>\r\n                      {/*} \r\n                      \r\n                      <!-- <div class=\"form-group\">\r\n                          <div class=\"col-sm-offset-2 col-sm-10\">\r\n                            <div class=\"checkbox\">\r\n                              <label>\r\n                                <input type=\"checkbox\"> Remember me\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div> -->      {*/}\r\n\r\n                    </div>{/*<!-- /.box-body -->*/}\r\n\r\n                    <div class=\"box-header with-bordesr\">\r\n                      <h4 class=\"box-title\">Enter Your Abstraction</h4>\r\n                    </div>\r\n                    <div class=\"box-body\">\r\n                      <div class=\"form-group\">\r\n \r\n                        <label for=\"inputTitle\" class=\"col-sm-2 control-label\">Title</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <input type=\"text\" onChange={this.handleChange} class=\"form-control\" \r\n                          id=\"inputTitle\" \r\n                          placeholder=\"Title\" name=\"tittle\"/>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label for=\"inputDescription\" class=\"col-sm-2 control-label\">Description</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <input type=\"text\" class=\"form-control\" id=\"inputDescription\" \r\n                          placeholder=\"Description\" name='desc'\r\n                          onChange={this.handleChange}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label for=\"inputFunction\" class=\"col-sm-2 control-label\">Abstract</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <div class=\"pull-right box-tools\">\r\n                            {/*}\r\n                            <!-- <button class=\"btn btn-default btn-sm\" data-widget=\"collapse\" data-toggle=\"tooltip\" title=\"Collapse\"><i class=\"fa fa-minus\"></i></button>\r\n                                <button class=\"btn btn-default btn-sm\" data-widget=\"remove\" data-toggle=\"tooltip\" title=\"Remove\"><i class=\"fa fa-times\"></i></button> -->\r\n                            {*/}\r\n                          </div>\r\n                          <div class=\"box-body pad\" style={{\r\n                            \r\n                              \"& .ck-editor__main > .ck-editor__editable\": {\r\n                                minHeight: \"100px\"\r\n                              }\r\n                          \r\n                          }}>\r\n                              \r\n                  <CKEditor\r\n                  height=\"100%\"\r\n                  name=\"abstraction\"\r\n                  id=\"abstraction\"\r\n\r\n                  config={{\r\n                    simpleUpload: {\r\n                      uploadUrl: 'https://myserver.herokuapp.com/image-upload'\r\n                    },\r\n                    toolbar: ['heading', '|', 'bold', 'italic', 'blockQuote', 'link', 'numberedList', 'bulletedList', 'imageUpload', 'insertTable',\r\n                      'tableColumn', 'tableRow', 'mergeTableCells', 'mediaEmbed', '|', 'undo', 'redo']\r\n                  }}\r\n                  editor={ClassicEditor}\r\n                  onChange={ ( event, editor ) => {\r\n                    const data = editor.getData();\r\n                    this.valueFrom(data,\"abstraction\")\r\n                  } }\r\n\r\n               \r\n                             />\r\n              \r\n\r\n\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label for=\"inputDiscipline\" class=\"col-sm-2 control-label\">&nbsp;</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <input type=\"file\" id=\"exampleInputFile\"/>\r\n                          <p class=\"help-block\">Example block-level help text here.</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>{/*<!-- /.box-body -->*/}\r\n\r\n                    <div class=\"box-header with-border\">\r\n                      <h4 class=\"box-title\">Novelty</h4>\r\n                    </div>\r\n                    <div class=\"box-body\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"inputType\" class=\"col-sm-2 control-label\">Type</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"typeNovelty\" \r\n                              id=\"typeNovelty\" value=\"New\" onChange={this.handleChange} />\r\n                              New <br /> \r\n                              <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>\r\n                                Relative no evidence or never be found anywhere in Medco Organization ideas, process, system, part, equipment or devices at any kind or form of modification, installation or usage partly or entirely whether small or big magnitude in Medco Organization</span></label>\r\n                          </div>\r\n                          <input type=\"text\" class=\"form-control\" id=\"inputTitle\" placeholder=\"Reason\" disabled={this.state.pesan}/> <br />\r\n                          <input type=\"file\" id=\"exampleInputFile\" disabled={this.state.pesan}/>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"typeNovelty\" id=\"optionsRadios2\" \r\n                              value=\"Improve Existing\" onChange={this.handleChange}/>\r\n                              Improve Existing <br /> \r\n                              <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>\r\n                                Ideas, process, system, part, equipment or devices at any kind or form of modification, installation or usage partly or entirely whether small or big magnitude but there is at least one evidence that it has connection, interference or interface to the existing entity (could be systems, process, etc in Medco Organization\r\n                                </span></label>\r\n                          </div>\r\n                          <input type=\"text\" class=\"form-control\" id=\"inputTitle\" placeholder=\"Reason\" disabled={this.state.pesanImprove}/> <br />\r\n                          <input type=\"file\" id=\"exampleInputFile\" disabled={this.state.pesanImprove}/>\r\n\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"box-header with-border\">\r\n                      <h4 class=\"box-title\">Impact Value</h4>\r\n                    </div>\r\n                    <div class=\"box-body\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"inputType\" class=\"col-sm-2 control-label\">ROI</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"roi\" id=\"roi1\" \r\n                              value=\"Very High\" onChange={this.handleChange} />\r\n                              Very High | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>{this.state.lbhBesar}20%</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"roi\" id=\"roi2\" value=\"High\"\r\n                              onChange={this.handleChange} />\r\n                              High | <span style={{fontStyle: 'italic', fontSize: 'small', \r\n                              color: 'brown'}}>15-20%</span>\r\n                            </label>\r\n                          </div>\r\n\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                            <input type=\"radio\" name=\"roi\" id=\"roi3\" value=\"Medium\"\r\n                               />\r\n                              Medium | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>10-15%</span>\r\n                            </label>\r\n                          </div>\r\n\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"roi\" id=\"roi4\" value=\"Moderate\"\r\n                              onChange={this.handleChange} />\r\n                              \r\n                              Moderate | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}\r\n                              >{this.state.lbhKecil}10%</span>\r\n                            </label>\r\n                          </div>\r\n                          <input type=\"file\" id=\"exampleInputFile\" />\r\n\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"box-body\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"inputType\" class=\"col-sm-2 control-label\">Cost Saving</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"cost\" id=\"cost1\" \r\n                              value=\"Extremely High Impact\"  onChange={this.handleChange} />\r\n                              \r\n                              Extremely High Impact | <span style={{fontStyle: 'italic', fontSize: 'small', fontSize: 'small', \r\n                              color: 'brown'}}>{this.state.lbhBesar} 1 MM USD</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"cost\" id=\"cost2\" \r\n                              value=\"Very High Impact\"  onChange={this.handleChange}/>\r\n                              Very High Impact | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>500 - 1 MM USD</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"cost\" id=\"cos3\" value=\"Moderate High Impact\"   onChange={this.handleChange}/>\r\n                              Moderate High Impact | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>100 - 500 K USD</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"cost\" id=\"cos4\" value=\"Moderate\"  onChange={this.handleChange}/>\r\n                              Moderate Impact | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>50 K - 100 K USD</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"cost\" id=\"cos5\" value=\"Low Impact\"  onChange={this.handleChange}/>\r\n                              Low Impact | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>{this.state.lbhKecil} 50 K USD</span>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <input type=\"file\" id=\"exampleInputFile\" />\r\n                      </div>\r\n                      \r\n\r\n                    </div>\r\n                    <div class=\"box-body\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"inputType\" class=\"col-sm-2 control-label\">HSE</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"HSE\" id=\"HSE1\" value=\"Remove Hazard\"  onChange={this.handleChange}/>\r\n                              Remove Hazard \r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"HSE\" id=\"oHSE2\" value=\"Minimize Hazard\"  onChange={this.handleChange}/>\r\n                              Minimize Hazard \r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"HSE\" id=\"HSE3\" value=\"Contain Hazard\"  onChange={this.handleChange}/>\r\n                              Contain Hazard \r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"HSE\" id=\"HSE4\" value=\"Protect Hazard\"  onChange={this.handleChange}/>\r\n                              Protect Hazard\r\n                            </label>\r\n                          </div>\r\n                          <input type=\"file\" id=\"exampleInputFile\" />\r\n                        </div>\r\n                        \r\n                      </div>\r\n                      \r\n                    </div>\r\n\r\n                    <div class=\"box-header with-border\">\r\n                      <h4 class=\"box-title\">Application Boundary</h4>\r\n                    </div>\r\n                    <div class=\"box-body\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"inputType\" class=\"col-sm-2 control-label\">Asset Hierarchy Level</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <div class=\"radio\">\r\n                            \r\n                            <label>\r\n                              <input type=\"radio\" name=\"hsl\" id=\"hsl1\" value=\"Facility\" onChange={this.handleChange}/>\r\n                              Facility | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}\r\n                              >Train A</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"hsl\" id=\"hsl2\" value=\"System\" onChange={this.handleChange}/>\r\n                              System | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>Compressor Train A</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"hsl\" id=\"hsl3\" value=\"Sub System\" onChange={this.handleChange}/>\r\n                              Sub System | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>Compressor</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"hsl\" id=\"hsl4\" value=\"Equipment\" onChange={this.handleChange}/>\r\n                              Equipment | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>Turbo Compressor Package Train A</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"hsl\" id=\"hsl5\" value=\"Sub Equipment\" onChange={this.handleChange}/>\r\n                              Sub Equipment | <span style={{fonStyle: 'italic', fontSize: 'small',  color: 'brown'}}>Train A LP Compressor</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"hsl\" id=\"hsl6\" value=\"Component\" onChange={this.handleChange}/>\r\n                              Component | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>Flow Glass - From NDE Journal Bearing C-2720 TO Gas Turbinelube Oil Train A</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"hsl\" id=\"hsl7\" value=\"Part\" onChange={this.handleChange}/>\r\n                              Part | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>Proximity Probe - NDE Bearing Vibration (X) LP Compressor Train A</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"hsl5\" id=\"hsl58\" value=\"Other\" onChange={this.handleChange}/>\r\n                              Other | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>Logistic</span>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"box-header with-border\">\r\n                      <h4 class=\"box-title\">Change Level</h4>\r\n                    </div>\r\n                    <div class=\"box-body\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"inputType\" class=\"col-sm-2 control-label\">Level</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"level\" id=\"level1\" value=\"Low\" onChange={this.handleChange}/>\r\n                              Low | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>Applied Change to Existing Procewss or Introduce New Change - less than or at least 2 Steps/Processes</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"level\" id=\"level2\" value=\"Medium\" onChange={this.handleChange}/>\r\n                              Medium | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>Applied Change to Existing Procewss or Introduce New Change - less than or at least 5 Steps/Processes</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"level\" id=\"level3\" value=\"High/Radical\" onChange={this.handleChange}/>\r\n                              High/Radical | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>Applied Change to Existing Procewss or Introduce New Change - more than  Steps/Process</span>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"box-footer\">\r\n                    <button type=\"submit\" \r\n                  className=\"btn btn-primary btn-block btn-flat\"\r\n                  /*disabled={!this.state.formState.isValid}*/\r\n                  ><i class=\"fa fa-share\"></i> Submit</button>     \r\n\t\t\t\t\t\t<a href=\"\" type=\"button\" class=\"btn btn-success btn-sm\" ><button ><i class=\"fa fa-save\"></i> Save</button></a>\r\n<a href=\"\" type=\"button\" class=\"btn btn-warning btn-sm\"><button type=\"submit\" \r\n                                  disabled={!this.state.formState.isValid}><i class=\"fa fa-edit\"></i> Edit</button></a>\r\n\t\t\t\t\t\t<a href=\"\" type=\"button\" class=\"btn btn-danger btn-sm\" type=\"button\">\r\n              <button onClick={this.handleClose}><i class=\"fa fa-close\"></i> Cancel</button></a> \r\n\t\t\t\t\t  \r\n\t\t\t\t\t\t  <a href=\"\" type=\"button\" class=\"btn btn-default btn-sm\"><button type=\"submit\"><i class=\"fa fa-download\"></i> Download</button></a>\r\n                    </div>{/*<!-- /.box-footer -->*/}\r\n                  </form>{/*<!-- /.box-body --><!-- /.box -->*/}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>{/*<!-- /.content -->*/}\r\n\r\n\r\n\r\n        </>\r\n \r\n        ) \r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) =>\r\n{\r\n    return{\r\n      dataOrg: state.orgData\r\n    \r\n    }\r\n}\r\nconst mapDispactToProps=(dispatch)=>\r\n{\r\n    return{\r\n        dispatchOrg:(Orgs)=>\r\n        {dispatch({type:'UBAH_DATA',newValue:Orgs})\r\n        }\r\n    }\r\n}\r\n\r\nexport default MiaSubmittion","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { UserSignIn } from 'views';\r\nimport validate from 'validate.js';\r\nimport '../../assets/css_swal/cssSwal.css';\r\nimport Slider from 'react-slick/lib/slider';\r\n// import { bg_login } from '../../assets/img_master_backup/index'\r\nimport Swal from 'sweetalert2';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport dataUser from '../../common/datajson/user.json';\r\nimport dataClustering from '../../common/datajson/clustering.json';\r\nimport Pagination from '../../../src/components/Pagination';\r\n\r\n//import UsersByDevice from 'views/Dashboard/components/UsersByDevice';\r\nimport axios from 'axios';\r\n\r\nclass MiaReviewing extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: '',\r\n      alamat: '',\r\n      formState:{\r\n        isfaValid: false,\r\n        values: {},\r\n        valuesSearch: {},\r\n        valuesEdit :[],\r\n        \r\n        touched: {},\r\n        errors: {}\r\n      },\r\n      currentPage:1,\r\n      pageSize:15,\r\n      datas:[],\r\n      dataMia:dataClustering,\r\n\r\n      resultSearch:[],\r\n      cadData:[],\r\n      loading:0,\r\n      //cluster:'A',\r\n      checkedValue:false,\r\n      \r\n      schema : {\r\n        user_name: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          //email: true,\r\n          length: {\r\n            maximum: 64\r\n          }\r\n        },\r\n        password: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          length: {\r\n            maximum: 128\r\n          }\r\n        }\r\n      }\r\n  \r\n    };\r\n    this.handleSearch=this.handleSearch.bind(this)  \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSignIn = this.handleSignIn.bind(this);\r\n\r\n  }\r\n  setChecked=(e)=>\r\n  {\r\n    //alert(this.state.datas.length);\r\n    let togger=e.target.checked\r\n    alert(this.state.datas.length)\r\n    for (let loopDatas  = 0; loopDatas < this.state.datas.length; loopDatas++) {\r\n      \r\n      if(this.state.datas.length===1)cb_empId.checked=togger;else cb_empId[loopDatas].checked=togger\r\n      //alert(loopDatas)\r\n    }\r\n    \r\n  \r\n    /*\r\n    for (let loopDatas  = 0; loopDatas < this.state.datas.length; loopDatas++) {\r\n      //console.log(cb_empId);\r\n      \r\n      if(this.state.pageSize!==loopDatas)\r\n      {\r\n        alert(loopDatas)\r\n\r\n        cb_empId[loopDatas].checked=togger\r\n  \r\n      }\r\n      // more statements\r\n    }*/\r\n    \r\n       \r\n    //this.state.checkedValue=true//e.target.checked\r\n  }\r\n  valueFrom=(value,name)=>{\r\n \r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        values:\r\n        {\r\n          ...prevState.formState.values,\r\n          [name]: value \r\n        },\r\n        touched:\r\n        {\r\n          ...prevState.formState.touched,\r\n          [name]: true\r\n        },\r\n        \r\n  \r\n  \r\n     }\r\n  \r\n      \r\n     \r\n       \r\n    }),()=>{\r\n      const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n      console.log(\"formState\",this.state.formState)\r\n  \r\n      this.setState\r\n      (prevState => ({\r\n        formState:\r\n        {\r\n          ...prevState.formState, \r\n          errors:\r\n          {\r\n            ...prevState.formState.errors,\r\n            'errors': errorsVar \r\n          }, \r\n          isValid:\r\n          {\r\n            ...prevState.formState.isValid,\r\n            'isValid': errorsVar ? false : true, \r\n          }\r\n          \r\n          \r\n        }\r\n      }))\r\n  \r\n      //alert(\"hhhh\");\r\n    });\r\n  \r\n    \r\n   }\r\n   handleClose=()=>{\r\n    const { history }=this.props;\r\n   \r\n    history.push(\"/mia/clustering\");\r\n   \r\n  }\r\n    \r\n  handleChange = event => {\r\n      event.persist();\r\n      let name=event.target.name\r\n      \r\n      let value=event.target.value\r\n      if(name===\"typeNovelty\" && value===\"New\") this.state.pesan=!this.state.pesan\r\n   \r\n      this.valueFrom(value,name)\r\n      \r\n  \r\n    };\r\n    handleSubmit = event => {\r\n    if(localStorage.getItem('data'))\r\n    {\r\n      //alert(\"Dsdsdss\")\r\n      this.state.datas=JSON.parse( localStorage.getItem('data') ) // parse to object if necessary\r\n      \r\n    }else{\r\n      this.state.datas=dataClustering\r\n    }\r\n    let today = new Date();\r\n    let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n    this.state.formState.values.submissiondate=date;\r\n    this.state.formState.values.step=\"Submission\";\r\n    this.state.formState.values.id=dataClustering.length+1//this.state.datas.length+1\r\n    this.state.datas.push(  this.state.formState.values)\r\n    dataClustering.push( this.state.formState.values)\r\n    localStorage.setItem('data', JSON.stringify(this.state.datas) /* JSON.stringify(dataClustering)*/ );\r\n  \r\n    \r\n  \r\n   //  let fileContent = 'I can write';\r\n  ///  fs.writeFileSync('../../common/datajson/clustering.json', JSON.stringify(this.state.datas));\r\n     \r\n  \r\n     //const writeFileP = require(\"write-file-p\");\r\n   \r\n     /*\r\n     const saveFile= (saveLocation,data,encoding='utf8')=> {\r\n       let dataString = JSON.stringify(data,null,2)\r\n    }*/\r\n    const { history }=this.props;\r\n  //alert(\"dds\") \r\n    history.push(\"/mia/clustering\");\r\n    Swal.fire({\r\n      position: 'center',\r\n      icon: 'Success',\r\n      title: 'Data have been submited  ',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    })\r\n  \r\n      //Write a text file\r\n     //writeFileP('../../common/datajson/clustering.json', JSON.stringify(this.state.datas), (err, data) => {\r\n         //console.log(err || data);\r\n     //});\r\n     \r\n  \r\n     //writeJsonFile.writeJsonFile('../../common/datajson/clustering.json', JSON.stringify(this.state.datas), (err) => {\r\n      //if (err) console.log('Error writing file:', err);\r\n  \r\n     /*\r\n     this.setState\r\n      (prevState => ({\r\n        datas:\r\n        {\r\n          ...prevState.datas, \r\n          datas:this.state.value\r\n          \r\n        }\r\n      }))\r\n    \r\n      */\r\n  \r\n    }\r\n    handleInputChange = (e, index) => {\r\n      //setDisable(false);\r\n      const { name, value } = e.target;\r\n      this.state.resultSearch = [...this.state.datas];\r\n      //alert(e.target.checked)//=true\r\n      if(name!==\"cb_empId\")\r\n      {\r\n        if(cb_empId[index].checked===false)\r\n        {\r\n          e.target.value=''\r\n        }else\r\n        {\r\n          this.state.resultSearch[index][name] = value;\r\n    \r\n        }\r\n          \r\n      }\r\n      \r\n      //alert(value);\r\n      //alert(list[index][name])\r\n      //if(this.state.datas[0]['cb_empId'])alert(this.state.datas[0]['cb_empId'] )\r\n      //setRows(list);\r\n      /* */\r\n      //console.log(\"this.state.datas1\",this.state.datas);\r\n      //console.log(\"list\",list);\r\n      /*this.setState\r\n      (prevState => ({\r\n        datas:list\r\n        \r\n  \r\n        \r\n       \r\n         \r\n      }),()=>{\r\n        console.log(\"this.state.datas2\",this.state.datas);\r\n  \r\n      }\r\n      /*,()=>{\r\n        console.log(this.state.formState.valuesSearch,\"this.state.formState.valuesSearch\")\r\n        const errorsVar = validate(this.state.formState.valuesSearch, this.state.schema);\r\n        this.setState\r\n        (prevState => ({\r\n          formState:\r\n          {\r\n            ...prevState.formState, \r\n            errors:\r\n            {\r\n              ...prevState.formState.errors,\r\n              'errors': errorsVar \r\n            }, \r\n            isValid:\r\n            {\r\n              ...prevState.formState.isValid,\r\n              'isValid': errorsVar ? false : true, \r\n            }\r\n            \r\n            \r\n          }\r\n        }))\r\n  \r\n        //alert(\"hhhh\");\r\n      });*/\r\n  \r\n    };\r\n    handleSearch(event)\r\n    {\r\n      \r\n      //alert(this.state.formState.valuesSearch.impactValue)\r\n        //this.handleChangeSearch typeNovelt isRoi Cost ,hse level impactValue\r\n        let dataSearch=[]\r\n   let cekNull=true;\r\n  \r\n  //let impactValue=this.state.formState.valuesSearch.impactValue\r\n  //e   \r\n\r\n  //alert(cekNull)\r\n       \r\n  //let cekNull=(impactValue?true:false )\r\n  /*team\r\n  criteria\r\n  cluster*/\r\n        let team=this.state.formState.valuesSearch.team\r\n        let criteria=this.state.formState.valuesSearch.criteria\r\n        let cluster =this.state.formState.valuesSearch.cluster;\r\n        alert(this.state.formState.valuesSearch.team)\r\n        cekNull=team && criteria && cluster ?false: true\r\n        if(cekNull===true) \r\n         {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: 'Pilih Filter Pencarian  ',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n         }else{\r\n            dataSearch=this.state.cadData.filter((data => data.team === \r\n            this.state.formState.valuesSearch.team\r\n            && data.criteria===this.state.formState.valuesSearch.criteria\r\n            && data.cluster===this.state.formState.valuesSearch.cluster));\r\n\r\n          console.log(dataSearch,\"dataSearch33333\")\r\n          dataSearch=!Array.isArray(dataSearch)?(dataSearch?[dataSearch]:dataSearch):dataSearch;\r\n          //this.state.cluster='B'\r\n          if(Array.isArray(dataSearch))\r\n          {\r\n            for(let loopCluster=0;loopCluster<=dataSearch.length-1;loopCluster++)\r\n            {\r\n              dataSearch[loopCluster]['cluster']=this.state.formState.valuesSearch.cluster;\r\n            }\r\n          }\r\n          //this.state.datas=dataSearch;\r\n          //alert(\"DSDS\")\r\n          console.log(dataSearch,\"dataSearch33333\")\r\n          //this.state.cadData=[... dataSearch]\r\n          /* */\r\n          this.setState({datas: dataSearch})\r\n          /**/\r\n         /* this.setState\r\n      (prevState => ({\r\n        datas:\r\n        {\r\n          ...prevState.datas, \r\n          datas:dataSearch\r\n          \r\n    \r\n       }\r\n       */\r\n      \r\n      //console.log(\"dataSearch baru\",dataSearch)\r\n       \r\n         \r\n          }/**/\r\n          //localStorage.setItem(\"data\",JSON.stringify(dataSearch))\r\n          //alert(this.state.formState.valuesSearch.impactValue)\r\n    \r\n         }//\r\n         handleSave = () => {\r\n          //    setEdit(!isEdit);\r\n              //setRows(rows);\r\n              let today = new Date();\r\n            let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n            for (let loopsave=0;loopsave<=this.state.resultSearch.length-1;loopsave++)\r\n            {\r\n              this.state.resultSearch[loopsave].step=\"Reviewing\";\r\n          \r\n              //this.state.resultSearch[loopsave].submissiondate=date\r\n            }\r\n            \r\n            //this.state.resultSearch.step=\"Cluster\";\r\n            \r\n              //this.setState({datas: this.state.resultSearch});\r\n              //this.setState({cadData:this.state.datas});\r\n                            //this.setState({datas: this.state.resultSearch});\r\n              //this.setState({cadData:this.state.datas});\r\n              this.setState\r\n              (prevState => ({\r\n                cadData:\r\n                this.state.resultSearch\r\n\r\n            \r\n                \r\n               \r\n                 \r\n              }),()=>{\r\n                alert(\"sasa\")\r\n                this.setState({datas:this.state.resultSearch})\r\n                localStorage.setItem('data', JSON.stringify(this.state.cadData));\r\n                const { history }=this.props;\r\n                //alert(\"dds\") \r\n                  history.push(\"/mia/judging\");\r\n                  Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'Success',\r\n                    title: 'Data have been Reviewig proceess   ',\r\n                    showConfirmButton: false,\r\n                    timer: 1000\r\n                  })\r\n  \r\n              });\r\n            \r\n               \r\n          \r\n          \r\n              \r\n              //this.state.resultSearch\r\n              //console.log(\"saved : \", rows);\r\n              //setDisable(true);\r\n              //setOpen(true);\r\n          };\r\n          handleChangeSearch = event => {\r\n            let value=event.target.value;\r\n                let name=event.target.name;\r\n                //alert(name)\r\n            this.setState\r\n            (prevState => ({\r\n              formState:\r\n              {\r\n                ...prevState.formState, \r\n                valuesSearch:\r\n                {\r\n                  ...prevState.formState.valuesSearch,\r\n                  [name]: value \r\n                }/*,\r\n                touched:\r\n                {\r\n                  ...prevState.formState.touched,\r\n                  [event.target.name]: true\r\n                },*/\r\n        \r\n          \r\n             }\r\n        \r\n               \r\n            })\r\n            /*,()=>{\r\n              console.log(this.state.formState.valuesSearch,\"this.state.formState.valuesSearch\")\r\n              const errorsVar = validate(this.state.formState.valuesSearch, this.state.schema);\r\n              this.setState\r\n              (prevState => ({\r\n                formState:\r\n                {\r\n                  ...prevState.formState, \r\n                  errors:\r\n                  {\r\n                    ...prevState.formState.errors,\r\n                    'errors': errorsVar \r\n                  }, \r\n                  isValid:\r\n                  {\r\n                    ...prevState.formState.isValid,\r\n                    'isValid': errorsVar ? false : true, \r\n                  }\r\n                  \r\n                  \r\n                }\r\n              }))\r\n        \r\n              //alert(\"hhhh\");\r\n            }*/);\r\n        \r\n            \r\n        \r\n          };\r\n        \r\n             \r\n    setData()  {\r\n      //alert(\"data=\"+this.state.datas.length)\r\n      const firstPageIndex = (this.state.currentPage - 1) * this.state.pageSize;\r\n      const lastPageIndex = firstPageIndex + this.state.pageSize;\r\n      \r\n     //console.log(\"this.state.datas hasil search=\",this.state.datas)\r\n      if(this.state.datas.length!==undefined) \r\n      {\r\n        \r\n        //alert(\"DDDD\")\r\n        return this.state.datas.slice(firstPageIndex, lastPageIndex);\r\n      }else \r\n      {console.log(\"this.state.datas\",this.state.datas)\r\n        return this.state.datas\r\n      }\r\n    }\r\n    setCurrentPage(pageVar)\r\n    {\r\n      this.setState({currentPage: pageVar});\r\n    }\r\n    \r\n    \r\n  componentWillMount() {\r\n    if(localStorage.getItem('data'))\r\n    {\r\n      //alert(\"dsds\")\r\n      //alert(localStorage.getItem('data'))\r\n      \r\n      this.state.dataMia= JSON.parse(localStorage.getItem('data')) \r\n      console.log(\"dataMia\",JSON.parse(localStorage.getItem('data')))\r\n\r\n    }else{\r\n      localStorage.setItem('data',  JSON.stringify(this.state.dataMia) );\r\n    }\r\n    this.state.datas=this.state.dataMia.filter((data => data.step == \r\n      \"Clustering\"))\r\n    this.state.cadData=[... this.state.datas]\r\n\r\n  }\r\n \r\n  \r\n  \r\n  handleSignIn = event => {\r\n    //event.preventDefault();\r\n    //\r\n    event.preventDefault();\r\n    let users4 = this.state.formState.users.find(user => user.user === this.state.formState.values.user_name\r\n      && user.password === this.state.formState.values.password);\r\n   //console.log(\"users4\",users4)\r\n   if(!users4) \r\n   {\r\n    const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n\r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        values:\r\n        {\r\n          ...prevState.formState.values,\r\n          user_name: '',\r\n          password: '' \r\n        },\r\n        errors:\r\n        {\r\n          ...prevState.formState.errors,\r\n          'errors': {} \r\n        }, \r\n        isValid:\r\n        {\r\n          ...prevState.formState.isValid,\r\n          'isValid':  false, \r\n        }\r\n  \r\n      }\r\n    }))\r\n   Swal.fire({\r\n      position: 'center',\r\n      icon: 'error',\r\n      title: 'Login Tidak Sesuai  ',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    })\r\n\r\n   }\r\n    else \r\n   {\r\n    //localStorage.setItem('Alat Kontrasepsi', JSON.stringify(data.alatKB));\r\n    //swindow.location = '/beranda';\r\n\r\n   } \r\n    \r\n  };\r\n\r\n    render() {\r\n\r\n  \r\n      return (\r\n        <>\r\n\r\n{/*<!-- Content Header (Page header) -->*/}\r\n        <section class=\"content-header\">\r\n          <h1>&nbsp;</h1>\r\n          <ol class=\"breadcrumb\">\r\n            <li><a href=\"home.html\"><i class=\"fa fa-home\"></i> Home</a></li>\r\n            <li><a href=\"#\">MIA</a></li>\r\n            <li class=\"active\"> Reviewing</li>\r\n          </ol>\r\n        </section>\r\n\r\n        {/*<!-- Main content -->*/}\r\n        <section class=\"content\">\r\n          <div class=\"box box-default\">\r\n            <div class=\"box-header with-border\">\r\n              <h3 class=\"box-title\"><i class=\"fa fa-eye\"></i> REVIEWING</h3>\r\n            </div>\r\n            <div class=\"clearfix\">&nbsp;</div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\" style={{padding: '2px 0', backgroundColor: '#f0f0f0'}}>\r\n                <div class=\"col-md-1\">Filter:</div>\r\n\t\t\t\t  <div class=\"col-md-1\">\r\n                  <span class=\"form-group\">\r\n                    <select name=\"team\" id=\"team\" class=\"form-control\" onChange={this.handleChangeSearch} \r\n                    style={{height:'24px', padding:0}}>\r\n                      <option selected>Team</option>\r\n                      <option>Team 1</option>\r\n                      <option>Team 2</option>\r\n                    </select>\r\n                  </span>\r\n                </div>\r\n\t\t\t\t  <div class=\"col-md-1\">\r\n          \r\n                  <span class=\"form-group\">\r\n                    <select name=\"criteria\" id=\"criteria\" class=\"form-control\" onChange={this.handleChangeSearch} \r\n                    style={{height:'24px', padding:'0'}}>\r\n                      <option selected>Criteria</option>\r\n                      <option>A</option>\r\n                      <option>B</option>\r\n                      <option>C</option>\r\n                    </select>\r\n                  </span>\r\n                </div>\r\n                <div class=\"col-md-1\">\r\n                  <span class=\"form-group\">\r\n                    <select name=\"cluster\" id=\"cluster\" class=\"form-control\"  onChange={this.handleChangeSearch} \r\n                    style={{height:'24px', padding:'0'}}>\r\n                      <option selected>Cluster</option>\r\n                      <option>A</option>\r\n                      <option>B</option>\r\n                      <option>C</option>\r\n                    </select>\r\n                  </span>\r\n                </div>\r\n                <div class=\"col-md-1\"><span class=\"form-group\">\r\n                    <button type=\"submit\" onClick={this.handleSearch} class=\"btn btn-success btn-block btn-xs\">GO </button>\r\n                    </span>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"box-body table-responsive no-padding\">\r\n              <table class=\"table with-border\">\r\n                <tr>\r\n                  <th width=\"30\" style={{width: '10px'}}>\r\n                    <input type=\"checkbox\" name=\"checkbox\" onChange= {(e) => this.setChecked(e)}  id=\"checkbox\"/>\r\n                  <label for=\"checkbox\"> </label></th>\r\n                  <th width=\"30\" style={{width: '10px'}}>ID</th>\r\n                  <th width=\"119\">Full Name</th>\r\n                  <th width=\"399\">Title</th>\r\n                  <th width=\"141\">Assigned Cluster</th>\r\n                  <th width=\"73\">Cluster</th>\r\n                  <th width=\"86\">Score</th>\r\n                  <th width=\"86\">Gate 2</th>\r\n                </tr>\r\n                {/*console.log(\"this.state.datas1\",this.state.datas)*/}\r\n                { \r\n                  this.state.datas!==undefined?\r\n                this.setData().map((el,i) =>\r\n                {\r\n                  return(\r\n                <tr>\r\n                  <td><span style={{width: '10px'}}>\r\n                    <input type=\"checkbox\" name=\"cb_empId\" onChange={(e) => this.handleInputChange(e, i)}  id=\"cb_empId\"/>\r\n                  </span></td>\r\n                  <td>{el.empId}</td>\r\n                  <td>{el.fullname}</td>\r\n                  <td>{el.tittle}</td>\r\n                  <td>{el.team}, Criteria {el.criteria}</td>\r\n                  <td>Cluster {el.cluster}</td>\r\n                  <td>{el.score}</td>\r\n                  <td><span class=\"form-group\">\r\n                      <select name=\"gate2\" onChange={(e) => this.handleInputChange(e, i)} class=\"form-control\" \r\n                      style={{height:'24px', padding:'0'}}>\r\n                        <option selected>Gate 2</option>\r\n                        <option>Passed</option>\r\n                        <option>Retained</option>\r\n                      </select>\r\n                    </span></td>\r\n                </tr>\r\n              )\r\n\r\n            }):null\r\n            }\r\n            \r\n              </table>\r\n            </div>{/*<!-- /.box-body -->*/}\r\n            { (this.state.datas!==undefined)?(\r\n            <div class=\"box-footer clearfix\">\r\n              <button type=\"submit\" onClick={this.handleSave} class=\"btn btn-success btn-xs\"><i class=\"fa fa-thumbs-up\"></i> Process</button>\r\n              <Pagination\r\n        className=\"pagination pagination-sm no-margin pull-right\"\r\n        currentPage={this.state.currentPage}\r\n        totalCount={this.state.datas.length}\r\n        pageSize={this.state.pageSize}\r\n        onPageChange={page => this.setCurrentPage(page)}\r\n      />\r\n              \r\n            </div>\r\n            ):null}\r\n\r\n\r\n          </div>{/*<!-- /.box -->*/}\r\n        </section>{/*<!-- /.content -->*/}\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n \r\n        ) \r\n    }\r\n};\r\n\r\n\r\nexport default MiaReviewing","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { UserSignIn } from 'views';\r\nimport validate from 'validate.js';\r\nimport '../../assets/css_swal/cssSwal.css';\r\nimport Slider from 'react-slick/lib/slider';\r\n// import { bg_login } from '../../assets/img_master_backup/index'\r\nimport dataClustering from '../../common/datajson/clustering.json';\r\nimport Pagination from '../../../src/components/Pagination';\r\n  \r\nimport Swal from 'sweetalert2';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport dataUser from '../../common/datajson/user.json';\r\n\r\n//import UsersByDevice from 'views/Dashboard/components/UsersByDevice';\r\nimport axios from 'axios';\r\n\r\nclass MiaReviewing extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: '',\r\n      alamat: '',\r\n      formState:{\r\n        isfaValid: false,\r\n        values: {},\r\n        valuesSearch: {},\r\n        valuesEdit :[],\r\n        \r\n        touched: {},\r\n        errors: {}\r\n      },\r\n      currentPage:1,\r\n      pageSize:15,\r\n      datas:[],\r\n      dataMia:dataClustering,\r\n\r\n      resultSearch:[],\r\n      cadData:[],\r\n      loading:0,\r\n      //cluster:'A',\r\n      checkedValue:false,\r\n      \r\n      schema : {\r\n        user_name: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          //email: true,\r\n          length: {\r\n            maximum: 64\r\n          }\r\n        },\r\n        password: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          length: {\r\n            maximum: 128\r\n          }\r\n        }\r\n      }\r\n  \r\n    };\r\n    \r\n//    this.handleChange = this.handleChange.bind(this);\r\n//    this.handleSignIn = this.handleSignIn.bind(this);\r\n\r\n  }\r\n  \r\n  componentWillMount() {\r\n    if(localStorage.getItem('data'))\r\n    {\r\n      //alert(\"dsds\")\r\n      //alert(localStorage.getItem('data'))\r\n      \r\n      this.state.dataMia= JSON.parse(localStorage.getItem('data')) \r\n      console.log(\"dataMia\",JSON.parse(localStorage.getItem('data')))\r\n\r\n    }else{\r\n      localStorage.setItem('data',  JSON.stringify(this.state.dataMia) );\r\n    }\r\n    \r\n    this.state.datas=this.state.dataMia.filter((data => data.step == \r\n      \"Reviewing\"))\r\n      this.state.cadData=[... this.state.datas]\r\n      console.log(\"this.state.dataMia\",this.state.dataMia)\r\n\r\n \r\n\r\n  }\r\n \r\n  \r\n  setChecked=(e)=>\r\n  {\r\n    //alert(this.state.datas.length);\r\n    let togger=e.target.checked\r\n    alert(this.state.datas.length)\r\n    for (let loopDatas  = 0; loopDatas < this.state.datas.length; loopDatas++) {\r\n      cb_empId[loopDatas].checked=togger\r\n    }\r\n  \r\n    /*\r\n    for (let loopDatas  = 0; loopDatas < this.state.datas.length; loopDatas++) {\r\n      //console.log(cb_empId);\r\n      \r\n      if(this.state.pageSize!==loopDatas)\r\n      {\r\n        alert(loopDatas)\r\n\r\n        cb_empId[loopDatas].checked=togger\r\n  \r\n      }\r\n      // more statements\r\n    }*/\r\n    \r\n       \r\n    //this.state.checkedValue=true//e.target.checked\r\n  }\r\n  setChecked=(e)=>\r\n  {\r\n    //alert(this.state.datas.length);\r\n    let togger=e.target.checked\r\n    for (let loopDatas  = 0; loopDatas < this.state.datas.length; loopDatas++) {\r\n      cb_empId[loopDatas].checked=togger\r\n    }\r\n  \r\n    /*\r\n    for (let loopDatas  = 0; loopDatas < this.state.datas.length; loopDatas++) {\r\n      //console.log(cb_empId);\r\n      \r\n      if(this.state.pageSize!==loopDatas)\r\n      {\r\n        alert(loopDatas)\r\n\r\n        cb_empId[loopDatas].checked=togger\r\n  \r\n      }\r\n      // more statements\r\n    }*/\r\n    \r\n       \r\n    //this.state.checkedValue=true//e.target.checked\r\n  }\r\n  handleInputChange = (e, index) => {\r\n    //setDisable(false);\r\n    const { name, value } = e.target;\r\n    this.state.resultSearch = [...this.state.datas];\r\n    //alert(e.target.checked)//=true\r\n    alert(\":sasasa\")\r\n    if(name!==\"cb_empId\")\r\n    {\r\n      alert(cb_empId[index].checked)\r\n      if(cb_empId[index].checked===false)\r\n      {\r\n        e.target.value=''\r\n      }else\r\n      {\r\n        this.state.resultSearch[index][name] = value;\r\n  \r\n      }\r\n        \r\n    }\r\n    \r\n    \r\n  };\r\n  valueFrom=(value,name)=>{\r\n \r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        values:\r\n        {\r\n          ...prevState.formState.values,\r\n          [name]: value \r\n        },\r\n        touched:\r\n        {\r\n          ...prevState.formState.touched,\r\n          [name]: true\r\n        },\r\n        \r\n  \r\n  \r\n     }\r\n  \r\n      \r\n     \r\n       \r\n    }),()=>{\r\n      const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n      console.log(\"formState\",this.state.formState)\r\n  \r\n      this.setState\r\n      (prevState => ({\r\n        formState:\r\n        {\r\n          ...prevState.formState, \r\n          errors:\r\n          {\r\n            ...prevState.formState.errors,\r\n            'errors': errorsVar \r\n          }, \r\n          isValid:\r\n          {\r\n            ...prevState.formState.isValid,\r\n            'isValid': errorsVar ? false : true, \r\n          }\r\n          \r\n          \r\n        }\r\n      }))\r\n  \r\n      //alert(\"hhhh\");\r\n    });\r\n  \r\n    \r\n   }\r\n   handleClose=()=>{\r\n    const { history }=this.props;\r\n   \r\n    history.push(\"/mia/clustering\");\r\n   \r\n  }\r\n    \r\n  handleChange = event => {\r\n      event.persist();\r\n      let name=event.target.name\r\n      \r\n      let value=event.target.value\r\n      if(name===\"typeNovelty\" && value===\"New\") this.state.pesan=!this.state.pesan\r\n   \r\n      this.valueFrom(value,name)\r\n      \r\n  \r\n    };\r\n    handleSubmit = event => {\r\n    if(localStorage.getItem('data'))\r\n    {\r\n      //alert(\"Dsdsdss\")\r\n      this.state.datas=JSON.parse( localStorage.getItem('data') ) // parse to object if necessary\r\n      \r\n    }else{\r\n      this.state.datas=dataClustering\r\n    }\r\n    let today = new Date();\r\n    let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n    this.state.formState.values.submissiondate=date;\r\n    this.state.formState.values.step=\"Submission\";\r\n    this.state.formState.values.id=dataClustering.length+1//this.state.datas.length+1\r\n    this.state.datas.push(  this.state.formState.values)\r\n    dataClustering.push( this.state.formState.values)\r\n    localStorage.setItem('data', JSON.stringify(this.state.datas) /* JSON.stringify(dataClustering)*/ );\r\n  \r\n    \r\n  \r\n   //  let fileContent = 'I can write';\r\n  ///  fs.writeFileSync('../../common/datajson/clustering.json', JSON.stringify(this.state.datas));\r\n     \r\n  \r\n     //const writeFileP = require(\"write-file-p\");\r\n   \r\n     /*\r\n     const saveFile= (saveLocation,data,encoding='utf8')=> {\r\n       let dataString = JSON.stringify(data,null,2)\r\n    }*/\r\n    const { history }=this.props;\r\n  //alert(\"dds\") \r\n    history.push(\"/mia/clustering\");\r\n    Swal.fire({\r\n      position: 'center',\r\n      icon: 'Success',\r\n      title: 'Data have been submited  ',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    })\r\n  \r\n      //Write a text file\r\n     //writeFileP('../../common/datajson/clustering.json', JSON.stringify(this.state.datas), (err, data) => {\r\n         //console.log(err || data);\r\n     //});\r\n     \r\n  \r\n     //writeJsonFile.writeJsonFile('../../common/datajson/clustering.json', JSON.stringify(this.state.datas), (err) => {\r\n      //if (err) console.log('Error writing file:', err);\r\n  \r\n     /*\r\n     this.setState\r\n      (prevState => ({\r\n        datas:\r\n        {\r\n          ...prevState.datas, \r\n          datas:this.state.value\r\n          \r\n        }\r\n      }))\r\n    \r\n      */\r\n  \r\n    }\r\n    handleSearch(event)\r\n    {\r\n      \r\n      //alert(this.state.formState.valuesSearch.impactValue)\r\n        //this.handleChangeSearch typeNovelt isRoi Cost ,hse level impactValue\r\n        let dataSearch=[]\r\n   let cekNull=true;\r\n  \r\n  //let impactValue=this.state.formState.valuesSearch.impactValue\r\n  //e   \r\n\r\n  //alert(cekNull)\r\n       \r\n  //let cekNull=(impactValue?true:false )\r\n        let team=this.state.formState.valuesSearch.team\r\n        let criteria=this.state.formState.valuesSearch.criteria\r\n        let cluster =this.state.formState.valuesSearch.cluster;\r\n        //alert(cekNull)\r\n        cekNull=team && criteria && cluster ?false: tru\r\n        if(cekNull===true) \r\n         {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: 'Pilih Filter Pencarian  ',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n         }else{\r\n            dataSearch=this.state.cadData.filter((data => data.team === \r\n            this.state.formState.valuesSearch.team\r\n            && data.roi===this.state.formState.valuesSearch.roi \r\n            && data.criteria===this.state.formState.valuesSearch.criteria\r\n            && data.cluste===this.state.formState.valuesSearch.cluste));\r\n\r\n          console.log(dataSearch,\"dataSearch33333\")\r\n          dataSearch=!Array.isArray(dataSearch)?(dataSearch?[dataSearch]:dataSearch):dataSearch;\r\n          //this.state.cluster='B'\r\n          if(Array.isArray(dataSearch))\r\n          {\r\n            for(let loopCluster=0;loopCluster<=dataSearch.length-1;loopCluster++)\r\n            {\r\n              dataSearch[loopCluster]['cluster']=this.state.formState.valuesSearch.cluster;\r\n            }\r\n          }\r\n          //this.state.datas=dataSearch;\r\n          //alert(\"DSDS\")\r\n          console.log(dataSearch,\"dataSearch33333\")\r\n          //this.state.cadData=[... dataSearch]\r\n          /* */\r\n          this.setState({datas: dataSearch})\r\n          /**/\r\n         /* this.setState\r\n      (prevState => ({\r\n        datas:\r\n        {\r\n          ...prevState.datas, \r\n          datas:dataSearch\r\n          \r\n    \r\n       }\r\n       */\r\n      \r\n      //console.log(\"dataSearch baru\",dataSearch)\r\n       \r\n         \r\n          }/**/\r\n          //localStorage.setItem(\"data\",JSON.stringify(dataSearch))\r\n          //alert(this.state.formState.valuesSearch.impactValue)\r\n    \r\n         }//\r\n         handleSave = () => {\r\n          //    setEdit(!isEdit);\r\n              //setRows(rows);\r\n              let today = new Date();\r\n            let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n            for (let loopsave=0;loopsave<=this.state.resultSearch.length-1;loopsave++)\r\n            {\r\n              this.state.resultSearch[loopsave].step=\"Judging\";\r\n          \r\n              //this.state.resultSearch[loopsave].submissiondate=date\r\n            }\r\n            \r\n            //this.state.resultSearch.step=\"Cluster\";\r\n            \r\n              this.setState({datas: this.state.resultSearch});\r\n              this.setState({cadData:this.state.datas});\r\n              localStorage.setItem('data', JSON.stringify(this.state.cadData)); \r\n          \r\n              const { history }=this.props;\r\n              //alert(\"dds\") \r\n                history.push(\"/mia/award\");\r\n                Swal.fire({\r\n                  position: 'center',\r\n                  icon: 'Success',\r\n                  title: 'Data have been Reviewig proceess   ',\r\n                  showConfirmButton: false,\r\n                  timer: 1000\r\n                })\r\n          \r\n              \r\n              //this.state.resultSearch\r\n              //console.log(\"saved : \", rows);\r\n              //setDisable(true);\r\n              //setOpen(true);\r\n          };\r\n             \r\n    setData(dataTable)  {\r\n      //alert(\"data=\"+this.state.datas.length)\r\n      const firstPageIndex = (this.state.currentPage - 1) * this.state.pageSize;\r\n      const lastPageIndex = firstPageIndex + this.state.pageSize;\r\n      \r\n     //console.log(\"this.state.datas hasil search=\",this.state.datas)\r\n     if(dataTable.length!==undefined) \r\n      {\r\n        \r\n        //alert(\"DDDD\")\r\n        return dataTable.slice(firstPageIndex, lastPageIndex);\r\n      }else \r\n      {console.log(\"this.state.datas\",dataTable)\r\n        return dataTable\r\n      }\r\n    }\r\n    setCurrentPage(pageVar)\r\n    {\r\n      this.setState({currentPage: pageVar});\r\n    }\r\n    \r\n \r\n    render() {\r\n\r\n  \r\n      return (\r\n        <>\r\n{/*<!-- Content Header (Page header) -->*/}\r\n        <section class=\"content-header\">\r\n          <h1>&nbsp;</h1>\r\n          <ol class=\"breadcrumb\">\r\n            <li><a href=\"home.html\"><i class=\"fa fa-home\"></i> Home</a></li>\r\n            <li><a href=\"#\">MIA</a></li>\r\n            <li class=\"active\"> Judging</li>\r\n          </ol>\r\n        </section>\r\n\r\n{/*        <!-- Main content -->*/}\r\n        <section class=\"content\">\r\n          <div class=\"box box-default\">\r\n            <div class=\"box-header with-border\">\r\n              <h3 class=\"box-title\"><i class=\"fa fa-hourglass-half\"></i> JUDGING</h3>\r\n            </div>\r\n            <div class=\"clearfix\">&nbsp;</div>\r\n\r\n            <div class=\"box-body table-responsive no-padding\">\r\n              <table class=\"table with-border\">\r\n                <tr>\r\n                  <th width=\"30\" style={{width: '10px'}}>\r\n                  <input type=\"checkbox\" name=\"checkbox\" onChange= {(e) => this.setChecked(e)} id=\"checkbox\"/>\r\n                    <label for=\"checkbox\"> </label></th>\r\n                  <th width=\"30\" style={{width: '10px'}}>ID</th>\r\n                  <th width=\"118\">Full Name</th>\r\n                  <th width=\"320\">Title</th>\r\n                  <th width=\"108\">Reviewed Cluster</th>\r\n                  <th width=\"86\">Assign Council</th>\r\n                  <th width=\"71\">Assign Criteria</th>\r\n                  <th width=\"84\">Judge Rank</th>\r\n                  <th width=\"84\">Gate 3</th>\r\n                </tr>\r\n              \r\n                { \r\n                  this.state.datas!==undefined?\r\n                this.setData(this.state.datas).map((el,i) =>\r\n                {\r\n                  return(\r\n\r\n                <tr>\r\n                  <td><span style={{width: '10px'}}>\r\n                    <input type=\"checkbox\" name=\"cb_empId\" onChange={(e) => this.handleInputChange(e, i)}  id=\"cb_empId\"/>\r\n                  </span></td>\r\n                  <td>{el.empId}</td>\r\n                  <td>{el.fullname}</td>\r\n                  <td>{el.tittle}</td>\r\n                  <td>{el.team}, Criteria {el.criteria}</td>\r\n                  <td><span class=\"form-group\">\r\n                    <select name=\"ChaimanCouncil\" onChange={(e) => this.handleInputChange(e, i)} class=\"form-control\" style={{height:'24px', fontSize: 'small',\r\n                     padding:0}}>\r\n                      <option selected>Chairman</option>\r\n                      <option>Didik</option>\r\n                      <option>Alief</option>\r\n                      <option>Gugun</option>\r\n                      <option>Faisal</option>\r\n                    </select>\r\n                  </span><span class=\"form-group\">\r\n                  <select name=\"MemberCouncil\" class=\"form-control\" \r\n                  style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                    <option selected>Member</option>\r\n                    <option>Didik</option>\r\n                    <option>Alief</option>\r\n                    <option>Gugun</option>\r\n                    <option>Faisal</option>\r\n                  </select>\r\n                  </span></td>\r\n                  <td><span class=\"form-group\">\r\n                    <select name=\"criteria2\" onChange={(e) => this.handleInputChange(e, i)} class=\"form-control\" \r\n                    style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                      <option selected>Criteria</option>\r\n                      <option>A</option>\r\n                      <option>B</option>\r\n                      <option>C</option>\r\n                    </select>\r\n                  </span></td>\r\n                  <td>{el.judgeRange}</td>\r\n                  <td><span class=\"form-group\">\r\n                      <select name=\"gate3\" onChange={(e) => this.handleInputChange(e, i)} class=\"form-control\" style={{height:'24px', \r\n                      padding:0}}>\r\n                        <option selected>Gate 3</option>\r\n                        <option>Passed</option>\r\n                        <option>Retained</option>\r\n                      </select>\r\n                    </span></td>\r\n                </tr>\r\n                )\r\n\r\n              }):null\r\n              }\r\n              </table>\r\n            </div>{/*<!-- /.box-body -->*/}\r\n            { (this.state.datas!==undefined)?(\r\n            <div class=\"box-footer clearfix\">\r\n              <button type=\"submit\" onClick={this.handleSave} class=\"btn btn-success btn-xs\"><i class=\"fa fa-thumbs-up\"></i> Process</button>\r\n              <Pagination\r\n        className=\"pagination pagination-sm no-margin pull-right\"\r\n        currentPage={this.state.currentPage}\r\n        totalCount={this.state.datas.length}\r\n        pageSize={this.state.pageSize}\r\n        onPageChange={page => this.setCurrentPage(page)}\r\n      />\r\n              \r\n            </div>\r\n            ):null}\r\n\r\n          </div>{/*<!-- /.box -->*/}\r\n        </section>{/*<!-- /.content -->*/}\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n \r\n        ) \r\n    }\r\n};\r\n\r\n\r\nexport default MiaReviewing","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { UserSignIn } from 'views';\r\nimport validate from 'validate.js';\r\nimport '../../assets/css_swal/cssSwal.css';\r\nimport Slider from 'react-slick/lib/slider';\r\n// import { bg_login } from '../../assets/img_master_backup/index'\r\nimport Swal from 'sweetalert2';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport dataClustering from '../../common/datajson/clustering.json';\r\nimport Pagination from '../../../src/components/Pagination';\r\n\r\nimport dataUser from '../../common/datajson/user.json';\r\n\r\n//import UsersByDevice from 'views/Dashboard/components/UsersByDevice';\r\nimport axios from 'axios';\r\n\r\nclass MiaReviewing extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: '',\r\n      alamat: '',\r\n      formState:{\r\n        isValid: false,\r\n        values: {},\r\n        touched: {},\r\n        errors: {},\r\n        users:dataUser\r\n      },\r\n      currentPage:1,\r\n      pageSize:15,\r\n\r\n      schema : {\r\n        user_name: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          //email: true,\r\n          length: {\r\n            maximum: 64\r\n          }\r\n        },\r\n        password: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          length: {\r\n            maximum: 128\r\n          }\r\n        }\r\n      }\r\n  \r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSignIn = this.handleSignIn.bind(this);\r\n\r\n  }\r\n  \r\n  componentWillMount() {\r\n    if(localStorage.getItem('data'))\r\n    {\r\n      //alert(\"dsds\")\r\n      //alert(localStorage.getItem('data'))\r\n      \r\n      this.state.dataMia= JSON.parse(localStorage.getItem('data')) \r\n      console.log(\"dataMia\",JSON.parse(localStorage.getItem('data')))\r\n\r\n    }else{\r\n      localStorage.setItem('data',  JSON.stringify(this.state.dataMia) );\r\n    }\r\n    \r\n    this.state.datas=this.state.dataMia.filter((data => data.step == \r\n      \"Judging\"))\r\n      \r\n      console.log(\"this.state.datas\",this.state.datas)\r\n\r\n\r\n      this.state.cadData=[... this.state.datas]\r\n      console.log(\"this.state.dataMia\",this.state.dataMia)\r\n\r\n\r\n  }\r\n \r\n  \r\n  handleChange = event => {\r\n    event.persist();\r\n\r\n    let value=event.target.value;\r\n        let name=event.target.name;\r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        values:\r\n        {\r\n          ...prevState.formState.values,\r\n          [name]: value \r\n        },\r\n        touched:\r\n        {\r\n          ...prevState.formState.touched,\r\n          [event.target.name]: true\r\n        },\r\n        \r\n\r\n  \r\n     }\r\n\r\n      \r\n     \r\n       \r\n    }),()=>{\r\n      const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n      this.setState\r\n      (prevState => ({\r\n        formState:\r\n        {\r\n          ...prevState.formState, \r\n          errors:\r\n          {\r\n            ...prevState.formState.errors,\r\n            'errors': errorsVar \r\n          }, \r\n          isValid:\r\n          {\r\n            ...prevState.formState.isValid,\r\n            'isValid': errorsVar ? false : true, \r\n          }\r\n          \r\n          \r\n        }\r\n      }))\r\n\r\n      //alert(\"hhhh\");\r\n    });\r\n\r\n    \r\n\r\n  };\r\n  setData(dataTable)  {\r\n    const firstPageIndex = (this.state.currentPage - 1) * this.state.pageSize;\r\n    const lastPageIndex = firstPageIndex + this.state.pageSize;\r\n    \r\n   if(dataTable.length!==undefined) \r\n    {\r\n      \r\n      return dataTable.slice(firstPageIndex, lastPageIndex);\r\n    }else \r\n    {\r\n      return dataTable\r\n    }\r\n  }\r\n\r\n  handleSignIn = event => {\r\n    //event.preventDefault();\r\n    //\r\n    event.preventDefault();\r\n    let users4 = this.state.formState.users.find(user => user.user === this.state.formState.values.user_name\r\n      && user.password === this.state.formState.values.password);\r\n   //console.log(\"users4\",users4)\r\n   if(!users4) \r\n   {\r\n    const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n\r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        values:\r\n        {\r\n          ...prevState.formState.values,\r\n          user_name: '',\r\n          password: '' \r\n        },\r\n        errors:\r\n        {\r\n          ...prevState.formState.errors,\r\n          'errors': {} \r\n        }, \r\n        isValid:\r\n        {\r\n          ...prevState.formState.isValid,\r\n          'isValid':  false, \r\n        }\r\n  \r\n      }\r\n    }))\r\n   Swal.fire({\r\n      position: 'center',\r\n      icon: 'error',\r\n      title: 'Login Tidak Sesuai  ',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    })\r\n\r\n   }\r\n    else \r\n   {\r\n    //localStorage.setItem('Alat Kontrasepsi', JSON.stringify(data.alatKB));\r\n    //swindow.location = '/beranda';\r\n\r\n   } \r\n    \r\n  };\r\n\r\n    render() {\r\n\r\n  \r\n      return (\r\n        <>\r\n\r\n{/*<!-- Content Header (Page header) -->*/}\r\n<section class=\"content-header\">\r\n          <h1>&nbsp;</h1>\r\n          <ol class=\"breadcrumb\">\r\n            <li><a href=\"home.html\"><i class=\"fa fa-home\"></i> Home</a></li>\r\n            <li><a href=\"#\">MIA</a></li>\r\n            <li class=\"active\"><i class=\"fa fa-graduation-cap\"></i> Award</li>\r\n          </ol>\r\n        </section>\r\n\r\n        {/*<!-- Main content -->*/}\r\n        <section class=\"content\">\r\n          <div class=\"box box-default\">\r\n            <div class=\"box-header with-border\">\r\n              <h3 class=\"box-title\"><i class=\"fa fa-graduation-cap\"></i> Award</h3>\r\n            </div>\r\n            <div class=\"clearfix\">&nbsp;</div>\r\n\r\n            <div class=\"box-body table-responsive no-padding\">\r\n              <table class=\"table with-border\">\r\n                <tr>\r\n                  <th width=\"30\" style={{width: '10px'}}>ID</th>\r\n                  <th width=\"323\">Title</th>\r\n                  <th width=\"127\">Submitter</th>\r\n                  <th width=\"293\">A Glance of Innovation</th>\r\n                  <th width=\"72\">Award Winner</th>\r\n                  <th width=\"67\">Awarding</th>\r\n                </tr>\r\n                { \r\n                  this.state.datas!==undefined?\r\n                this.setData(this.state.datas).map((el,i) =>\r\n                {\r\n                  return(\r\n\r\n                <tr>\r\n                  <td>{el.empId}</td>\r\n                  <td>{el.tittle}</td>\r\n                  <td>{el.fullname}</td>\r\n                  <td>&nbsp;</td>\r\n                  <td>&nbsp;</td>\r\n                  <td>&nbsp;</td>\r\n                </tr>\r\n                                )\r\n\r\n                              }):null\r\n                              }\r\n                \r\n              </table>\r\n            </div>{/*<!-- /.box-body -->*/}\r\n            <div class=\"box-footer clearfix\">\r\n              <ul class=\"pagination pagination-sm no-margin pull-right\">\r\n                <li><a href=\"#\">&laquo;</a></li>\r\n                <li><a href=\"#\">1</a></li>\r\n                <li><a href=\"#\">2</a></li>\r\n                <li><a href=\"#\">3</a></li>\r\n                <li><a href=\"#\">&raquo;</a></li>\r\n              </ul>\r\n            </div>\r\n\r\n          </div>{/*<!-- /.box -->*/}\r\n        </section>{/*<!-- /.content -->*/}\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n \r\n        ) \r\n    }\r\n};\r\n\r\n\r\nexport default MiaReviewing","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { UserSignIn } from 'views';\r\nimport validate from 'validate.js';\r\nimport '../../assets/css_swal/cssSwal.css';\r\nimport Slider from 'react-slick/lib/slider';\r\n// import { bg_login } from '../../assets/img_master_backup/index'\r\nimport Swal from 'sweetalert2';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport dataUser from '../../common/datajson/user.json';\r\n\r\n//import UsersByDevice from 'views/Dashboard/components/UsersByDevice';\r\nimport axios from 'axios';\r\n\r\nclass MiaDashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: '',\r\n      alamat: '',\r\n      formState:{\r\n        isValid: false,\r\n        values: {},\r\n        touched: {},\r\n        errors: {},\r\n        users:dataUser\r\n      },\r\n      schema : {\r\n        user_name: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          //email: true,\r\n          length: {\r\n            maximum: 64\r\n          }\r\n        },\r\n        password: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          length: {\r\n            maximum: 128\r\n          }\r\n        }\r\n      }\r\n  \r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSignIn = this.handleSignIn.bind(this);\r\n\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n\r\n\r\n    this.state.formState.errors=errorsVar    ;\r\n\r\n  }\r\n \r\n  \r\n  handleChange = event => {\r\n    event.persist();\r\n\r\n    let value=event.target.value;\r\n        let name=event.target.name;\r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        values:\r\n        {\r\n          ...prevState.formState.values,\r\n          [name]: value \r\n        },\r\n        touched:\r\n        {\r\n          ...prevState.formState.touched,\r\n          [event.target.name]: true\r\n        },\r\n        \r\n\r\n  \r\n     }\r\n\r\n      \r\n     \r\n       \r\n    }),()=>{\r\n      const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n      this.setState\r\n      (prevState => ({\r\n        formState:\r\n        {\r\n          ...prevState.formState, \r\n          errors:\r\n          {\r\n            ...prevState.formState.errors,\r\n            'errors': errorsVar \r\n          }, \r\n          isValid:\r\n          {\r\n            ...prevState.formState.isValid,\r\n            'isValid': errorsVar ? false : true, \r\n          }\r\n          \r\n          \r\n        }\r\n      }))\r\n\r\n      //alert(\"hhhh\");\r\n    });\r\n\r\n    \r\n\r\n  };\r\n  \r\n  handleSignIn = event => {\r\n    //event.preventDefault();\r\n    //\r\n    event.preventDefault();\r\n    let users4 = this.state.formState.users.find(user => user.user === this.state.formState.values.user_name\r\n      && user.password === this.state.formState.values.password);\r\n   //console.log(\"users4\",users4)\r\n   if(!users4) \r\n   {\r\n    const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n\r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        values:\r\n        {\r\n          ...prevState.formState.values,\r\n          user_name: '',\r\n          password: '' \r\n        },\r\n        errors:\r\n        {\r\n          ...prevState.formState.errors,\r\n          'errors': {} \r\n        }, \r\n        isValid:\r\n        {\r\n          ...prevState.formState.isValid,\r\n          'isValid':  false, \r\n        }\r\n  \r\n      }\r\n    }))\r\n   Swal.fire({\r\n      position: 'center',\r\n      icon: 'error',\r\n      title: 'Login Tidak Sesuai  ',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    })\r\n\r\n   }\r\n    else \r\n   {\r\n    //localStorage.setItem('Alat Kontrasepsi', JSON.stringify(data.alatKB));\r\n    //swindow.location = '/beranda';\r\n\r\n   } \r\n    \r\n  };\r\n\r\n    render() {\r\n\r\n  \r\n      return (\r\n        <>\r\n\r\n\r\n        <section class=\"content-header\">\r\n          <h1>&nbsp;</h1>\r\n          <ol class=\"breadcrumb\">\r\n            <li><a href=\"home.html\"><i class=\"fa fa-home\"></i> Home</a></li>\r\n            <li><a href=\"#\">MIA</a></li>\r\n            <li class=\"active\">Dashboard</li>\r\n          </ol>\r\n        </section>\r\n\r\n              {/*<!-- Main content -->*/}\r\n        <section class=\"content\">\r\n          <div class=\"box box-default\">\r\n            <div class=\"box-header with-border\">\r\n              <h3 class=\"box-title\"><i class=\"fa fa-pie-chart\"></i> Dashboard</h3>\r\n            </div>\r\n            <div class=\"clearfix\">\r\n              &nbsp;\r\n            </div>\r\n\r\n            <div class=\"box-body\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-3 col-xs-6\">\r\n                    {/*<!-- small box -->*/}\r\n                    <div class=\"small-box bg-aqua\">\r\n                      <div class=\"inner\">\r\n                        <h3>50</h3>\r\n                        <p>Submitters</p>\r\n                      </div>\r\n                      <div class=\"icon\">\r\n                        <i class=\"ion ion-person\"></i>\r\n                      </div>\r\n                      <a href=\"#\" class=\"small-box-footer\">More info <i class=\"fa fa-arrow-circle-right\"></i></a>\r\n                    </div>\r\n                  </div>{/*<!-- ./col -->*/}\r\n                  <div class=\"col-lg-3 col-xs-6\">\r\n                    {/*<!-- small box -->*/}\r\n                    <div class=\"small-box bg-green\">\r\n                      <div class=\"inner\">\r\n                        <h3>43<sup style={{fontSize: '20px'}}>%</sup></h3>\r\n                        <p>Reviewed</p>\r\n                      </div>\r\n                      <div class=\"icon\">\r\n                        <i class=\"ion ion-pie-graph\"></i>\r\n                      </div>\r\n                      <a href=\"#\" class=\"small-box-footer\">More info <i class=\"fa fa-arrow-circle-right\"></i></a>\r\n                    </div>\r\n                  </div>{/*<!-- ./col -->*/}\r\n                  <div class=\"col-lg-3 col-xs-6\">\r\n                    {/*<!-- small box -->*/}\r\n                    <div class=\"small-box bg-yellow\">\r\n                      <div class=\"inner\">\r\n                        <h3>40</h3>\r\n                        <p>Jugded</p>\r\n                      </div>\r\n                      <div class=\"icon\">\r\n                        <i class=\"ion ion-document-text-online\"></i>\r\n                      </div>\r\n                      <a href=\"#\" class=\"small-box-footer\">More info <i class=\"fa fa-arrow-circle-right\"></i></a>\r\n                    </div>\r\n                  </div>{/*<!-- ./col -->*/}\r\n                  <div class=\"col-lg-3 col-xs-6\">{/*<!-- small box -->*/}\r\n                    <div class=\"small-box bg-red\">\r\n                      <div class=\"inner\">\r\n                        <h3>8</h3>\r\n                        <p>Award</p>\r\n                      </div>\r\n                      <div class=\"icon\">\r\n                        <i class=\"ion ion-person-add\"></i>\r\n                      </div>\r\n                      <a href=\"#\" class=\"small-box-footer\">More info <i class=\"fa fa-arrow-circle-right\"></i></a>\r\n                    </div>\r\n                  </div>{/*<!-- ./col -->*/}\r\n                </div>\r\n              </div> {/*<!-- ./box -->*/}\r\n          </div>{/*<!-- ./col -->*/}\r\n          \r\n          \r\n        </section>\r\n\r\n\r\n        </>\r\n \r\n        ) \r\n    }\r\n};\r\n\r\n\r\nexport default MiaDashboard","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(1)\r\n  },\r\n  content: {\r\n    paddingTop: 0,\r\n    textAlign: 'center'\r\n  },\r\n  image: {\r\n    marginTop: 0,\r\n    display: 'inline-block',\r\n    maxWidth: '100%',\r\n    width: 560\r\n  }\r\n}));\r\n\r\nconst NotFound = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"login-box-body\">\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        spacing={0}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={12}\r\n          xs={12}\r\n        >\r\n          <div className={classes.content}>\r\n            <Typography variant=\"h8\">\r\n              404: The page you are looking for isn’t here\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              You either tried some shady route or you came here by mistake.\r\n              Whichever it is, try using the navigation\r\n            </Typography>\r\n            <img\r\n              alt=\"Under development\"\r\n              className={classes.image}\r\n              src=\"/images/undraw_page_not_found_su7k.svg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { UserSignIn } from 'views';\r\nimport validate from 'validate.js';\r\n//import mockDataUser from '../UserList/datauser';\r\n//import md5 from 'md5'\r\n//import swal from '@sweetalert/with-react';\r\nimport '../../assets/css_swal/cssSwal.css';\r\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport Slider from 'react-slick/lib/slider';\r\n// import { bg_login } from '../../assets/img_master_backup/index'\r\nimport Swal from 'sweetalert2';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport { Facebook as FacebookIcon, Google as GoogleIcon } from 'icons';\r\nimport { urlPostLogin } from '../../kumpulanUrl'\r\nimport dataUser from '../../common/datajson/user.json';\r\n\r\n//import UsersByDevice from 'views/Dashboard/components/UsersByDevice';\r\nimport axios from 'axios';\r\n\r\nclass SignIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: '',\r\n      alamat: '',\r\n      formState:{\r\n        isValid: false,\r\n        values: {},\r\n        touched: {},\r\n        errors: {},\r\n        users:dataUser\r\n      },\r\n      schema : {\r\n        user_name: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          //email: true,\r\n          length: {\r\n            maximum: 64\r\n          }\r\n        },\r\n        password: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          length: {\r\n            maximum: 128\r\n          }\r\n        }\r\n      }\r\n  \r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSignIn = this.handleSignIn.bind(this);\r\n\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n\r\n\r\n    this.state.formState.errors=errorsVar\r\n    /*this.setState(prevState => ({\r\n      formState:\r\n      {\r\n          ...prevState.formState, [errors]: errorsVar\r\n      }\r\n    }))*/\r\n\r\n\r\n   \r\n    ;\r\n\r\n    //let errorVar =validate(this.state.formState.values, schema);\r\n    /*this.setState(\r\n    formState.errors=errorVar\r\n    )*/\r\n  }\r\n \r\n  \r\n\r\n\r\n//const SignIn = props => {\r\n //const history  = this.props.history();\r\n  ////const [users, setUsers] = useState([]/*mockDataUser*/);\r\n  //const classes = useStyles();\r\n\r\n/*  \r\n  useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n  }, [formState.values]);\r\n*/\r\n/*\r\n  const handleBack = () => {\r\n    history.goBack();\r\n  };\r\n*/\r\n  handleChange = event => {\r\n    event.persist();\r\n\r\n    let value=event.target.value;\r\n        let name=event.target.name;\r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        values:\r\n        {\r\n          ...prevState.formState.values,\r\n          [name]: value \r\n        },\r\n        touched:\r\n        {\r\n          ...prevState.formState.touched,\r\n          [event.target.name]: true\r\n        },\r\n        \r\n\r\n  \r\n     }\r\n\r\n      \r\n     \r\n       \r\n    }),()=>{\r\n      const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n      this.setState\r\n      (prevState => ({\r\n        formState:\r\n        {\r\n          ...prevState.formState, \r\n          errors:\r\n          {\r\n            ...prevState.formState.errors,\r\n            'errors': errorsVar \r\n          }, \r\n          isValid:\r\n          {\r\n            ...prevState.formState.isValid,\r\n            'isValid': errorsVar ? false : true, \r\n          }\r\n          \r\n          \r\n        }\r\n      }))\r\n\r\n      //alert(\"hhhh\");\r\n    });\r\n\r\n    this.setState(prevState => ({\r\n      newDept:\r\n      {\r\n          ...prevState.newDept, [name]: value\r\n      }\r\n  }))\r\n\r\n  };\r\n  settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n  }\r\n\r\n  handleSignIn = event => {\r\n    //event.preventDefault();\r\n    //\r\n    event.preventDefault();\r\n    let users4 = this.state.formState.users.find(user => user.user === this.state.formState.values.user_name\r\n      && user.password === this.state.formState.values.password);\r\n   //console.log(\"users4\",users4)\r\n   if(!users4) \r\n   {\r\n    const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n\r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        values:\r\n        {\r\n          ...prevState.formState.values,\r\n          user_name: '',\r\n          password: '' \r\n        },\r\n        errors:\r\n        {\r\n          ...prevState.formState.errors,\r\n          'errors': {} \r\n        }, \r\n        isValid:\r\n        {\r\n          ...prevState.formState.isValid,\r\n          'isValid':  false, \r\n        }\r\n  \r\n      }\r\n    }))\r\n   Swal.fire({\r\n      position: 'center',\r\n      icon: 'error',\r\n      title: 'Login Tidak Sesuai  ',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    })\r\n\r\n   }\r\n    else \r\n   {\r\n    //localStorage.setItem('Alat Kontrasepsi', JSON.stringify(data.alatKB));\r\n    //swindow.location = '/beranda';\r\n    const history  = this.props.history;\r\n\r\n    localStorage.setItem('token', users4.user + users4.password);\r\n    localStorage.setItem('level', users4.level);\r\n    localStorage.setItem('username', users4.username);\r\n    localStorage.setItem('job', users4.job);\r\n    localStorage.setItem('dept', users4.dept);\r\n    localStorage.setItem('name', users4.name);\r\n    this.props.history.push('/home');\r\n\r\n\r\n    history.push('/home');\r\n\r\n   } \r\n    \r\n  };\r\n\r\n    render() {\r\n\r\n  \r\n      return (\r\n        <>\r\n        <div className=\"login-box-body\">\r\n        <p className=\"login-box-msg\">Sign in to start your session</p>\r\n        <form\r\n    //    className={classes.form}\r\n        onSubmit={this.handleSignIn}\r\n      >\r\n\r\n             <div className=\"form-group has-feedback\">\r\n                <input name=\"user_name\" type=\"text\" className=\"form-control\" placeholder=\"Username\"\r\n                onChange={ this.handleChange}\r\n                value={this.state.formState.values.user_name}\r\n                />\r\n                <span className=\"glyphicon glyphicon-envelope form-control-feedback\"></span>\r\n              </div>\r\n              <div className=\"form-group has-feedback\">\r\n                <input name=\"password\" type=\"password\" className=\"form-control\" \r\n                value={this.state.formState.values.password}\r\n                placeholder=\"Password\"\r\n                onChange={ this.handleChange}/>\r\n                <span className=\"glyphicon glyphicon-lock form-control-feedback\"></span>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-xs-8\">\r\n                  <div className=\"checkbox icheck\">\r\n                    <label>\r\n                      <input type=\"checkbox\"/> Remember Me\r\n                    </label>\r\n                  </div>\r\n                </div>{\r\n                  /*<!-- /.col -->*/\r\n                  }\r\n                <div className=\"col-xs-4\">\r\n                  <button type=\"submit\" \r\n                  className=\"btn btn-primary btn-block btn-flat\"\r\n                  disabled={!this.state.formState.isValid}\r\n                  >Sign In</button>\r\n                </div>\r\n                \r\n          </div>\r\n\r\n\r\n\r\n        </form>\r\n        </div>\r\n\r\n\r\n        </>\r\n \r\n        ) \r\n    }\r\n};\r\n\r\n\r\nexport default SignIn","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n///import validate from 'validate.js';\r\n//import mockDataUser from '../UserList/datauser';\r\nimport md5 from 'md5'\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport { Facebook as FacebookIcon, Google as GoogleIcon } from 'icons';\r\n\r\nconst schema={\r\n  user_name: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 64\r\n    }\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 128\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    height: '100%'\r\n  },\r\n  grid: {\r\n    height: '100%'\r\n  },\r\n  quoteContainer: {\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  quote: {\r\n    backgroundColor: theme.palette.neutral,\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: 'url(/images/auth.jpg)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  },\r\n  quoteInner: {\r\n    textAlign: 'center',\r\n    flexBasis: '600px'\r\n  },\r\n  quoteText: {\r\n    color: theme.palette.white,\r\n    fontWeight: 300\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(3),\r\n    color: theme.palette.white\r\n  },\r\n  bio: {\r\n    color: theme.palette.white\r\n  },\r\n  contentContainer: {},\r\n  content: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  contentHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: theme.spacing(5),\r\n    paddingBototm: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n  logoImage: {\r\n    marginLeft: theme.spacing(4)\r\n  },\r\n  contentBody: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: 'center'\r\n    }\r\n  },\r\n  form: {\r\n    paddingLeft: 100,\r\n    paddingRight: 100,\r\n    paddingBottom: 125,\r\n    flexBasis: 700,\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2)\r\n    }\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  socialButtons: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  socialIcon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  sugestion: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  signInButton: {\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nconst Signout=props => {\r\n  const { history }=props;\r\n  const [users, setUsers]=useState([]);\r\n  const classes=useStyles();\r\n\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.clear();\r\n    history.push('/login');\r\n  }, [formState.values]);\r\n\r\n  const handleBack=() => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleChange=event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type==='checkbox'\r\n            ? event.target.checked\r\n            :event.target.value\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSignIn=event => {\r\n    //event.preventDefault();\r\n    //users\r\n    //alert(formState.values.password)\r\n\r\n    /**/\r\n\r\n    localStorage.clear();\r\n    history.push('/');\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nSignout.propTypes={\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withRouter(Signout);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport validate from 'validate.js';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  FormHelperText,\r\n  Checkbox,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst schema={\r\n  firstName: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 32\r\n    }\r\n  },\r\n  lastName: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 32\r\n    }\r\n  },\r\n  email: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    email: true,\r\n    length: {\r\n      maximum: 64\r\n    }\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 128\r\n    }\r\n  },\r\n  policy: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    checked: true\r\n  }\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    height: '100%'\r\n  },\r\n  grid: {\r\n    height: '100%'\r\n  },\r\n  quoteContainer: {\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  quote: {\r\n    backgroundColor: theme.palette.neutral,\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: 'url(/images/auth.jpg)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  },\r\n  quoteInner: {\r\n    textAlign: 'center',\r\n    flexBasis: '600px'\r\n  },\r\n  quoteText: {\r\n    color: theme.palette.white,\r\n    fontWeight: 300\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(3),\r\n    color: theme.palette.white\r\n  },\r\n  bio: {\r\n    color: theme.palette.white\r\n  },\r\n  contentContainer: {},\r\n  content: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  contentHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: theme.spacing(5),\r\n    paddingBototm: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n  logoImage: {\r\n    marginLeft: theme.spacing(4)\r\n  },\r\n  contentBody: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: 'center'\r\n    }\r\n  },\r\n  form: {\r\n    paddingLeft: 100,\r\n    paddingRight: 100,\r\n    paddingBottom: 125,\r\n    flexBasis: 700,\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2)\r\n    }\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  policy: {\r\n    marginTop: theme.spacing(1),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  policyCheckbox: {\r\n    marginLeft: '-14px'\r\n  },\r\n  signUpButton: {\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nconst SignUp=props => {\r\n  const { history }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  useEffect(() => {\r\n    const errors=validate(formState.values, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleChange=event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type==='checkbox'\r\n            ? event.target.checked\r\n            :event.target.value\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleBack=() => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleSignUp=event => {\r\n    event.preventDefault();\r\n    history.push('/');\r\n  };\r\n\r\n  const hasError=field =>\r\n    formState.touched[field]&&formState.errors[field]? true:false;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        className={classes.grid}\r\n        container\r\n      >\r\n        <Grid\r\n          className={classes.quoteContainer}\r\n          item\r\n          lg={5}\r\n        >\r\n          <div className={classes.quote}>\r\n            <div className={classes.quoteInner}>\r\n              <Typography\r\n                className={classes.quoteText}\r\n                variant=\"h1\"\r\n              >\r\n                Hella narwhal Cosby sweater McSweeney's, salvia kitsch before\r\n                they sold out High Life.\r\n              </Typography>\r\n              <div className={classes.person}>\r\n                <Typography\r\n                  className={classes.name}\r\n                  variant=\"body1\"\r\n                >\r\n                  Takamaru Ayako\r\n                </Typography>\r\n                <Typography\r\n                  className={classes.bio}\r\n                  variant=\"body2\"\r\n                >\r\n                  Manager at inVision\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          className={classes.content}\r\n          item\r\n          lg={7}\r\n          xs={12}\r\n        >\r\n          <div className={classes.content}>\r\n            <div className={classes.contentHeader}>\r\n              <IconButton onClick={handleBack}>\r\n                <ArrowBackIcon />\r\n              </IconButton>\r\n            </div>\r\n            <div className={classes.contentBody}>\r\n              <form\r\n                className={classes.form}\r\n                onSubmit={handleSignUp}\r\n              >\r\n                <Typography\r\n                  className={classes.title}\r\n                  variant=\"h2\"\r\n                >\r\n                  Create new account\r\n                </Typography>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  Use your email to create new account\r\n                </Typography>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('firstName')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('firstName')? formState.errors.firstName[0]:null\r\n                  }\r\n                  label=\"First name\"\r\n                  name=\"firstName\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.firstName||''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('lastName')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('lastName')? formState.errors.lastName[0]:null\r\n                  }\r\n                  label=\"Last name\"\r\n                  name=\"lastName\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.lastName||''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('email')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('email')? formState.errors.email[0]:null\r\n                  }\r\n                  label=\"Email address\"\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.email||''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('password')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('password')? formState.errors.password[0]:null\r\n                  }\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={formState.values.password||''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <div className={classes.policy}>\r\n                  <Checkbox\r\n                    checked={formState.values.policy||false}\r\n                    className={classes.policyCheckbox}\r\n                    color=\"primary\"\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography\r\n                    className={classes.policyText}\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    I have read the{' '}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                  </Typography>\r\n                </div>\r\n                {hasError('policy')&&(\r\n                  <FormHelperText error>\r\n                    {formState.errors.policy[0]}\r\n                  </FormHelperText>\r\n                )}\r\n                <Button\r\n                  className={classes.signUpButton}\r\n                  color=\"primary\"\r\n                  disabled={!formState.isValid}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Sign up now\r\n                </Button>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Have an account?{' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/login\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nSignUp.propTypes={\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withRouter(SignUp);\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddProv, urlEditProv, urlU, urlUbahPassword } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2';\r\nconst schema={\r\n  KodeDepdagri: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  nama_provinsi: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  IsActive: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    /* length: {\r\n       maximum: 1\r\n     }*/\r\n  },\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst ProfileAddModi=props => {\r\n  const { className, setData, getDataBackend,getMockData, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    const userName=localStorage.getItem('username');\r\n    let varJson = {\r\n      \"Password\": rowSelect.Password,\r\n      \"confirmPassword\": rowSelect.confirmPassword,\r\n      \"id\": rowSelect.id,\r\n      \"NamaLengkap\": rowSelect.NamaLengkap,\r\n      \"Alamat\": rowSelect.Alamat,\r\n    }\r\n    let url=urlUbahPassword;\r\n    // alert(url)\r\n    varJson.LastModifiedBy = userName;\r\n\r\n    //console.log(body);\r\n\r\n\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson,\r\n      )\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    const response=fetch(url, requestOptions)\r\n      .then(tester => {\r\n\r\n        return tester.json();\r\n      })/**/\r\n      .then(\r\n        localStorage.setItem(\"NamaLengkap\",rowSelect.NamaLengkap),\r\n        localStorage.setItem(\"Alamat\",rowSelect.Alamat),\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Memperbarui Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      ).then(window.location.reload())\r\n      .catch((e) => {\r\n\r\n        // alert(e)\r\n        // swal(\"Gagal Login!\", \"Gagal Login\", \"error\",  )\r\n\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n\r\n  const [open, setOpen]=React.useState(false);\r\nconst handleTutup = () => {\r\n  setOpen(false)\r\n}\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n             <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Alamat\"\r\n                margin=\"dense\"\r\n                name=\"Alamat\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('Alamat')? formState.errors.Alamat[0]:null\r\n                }\r\n\r\n                error={hasError('Alamat')}\r\n                defaultValue={rowSelect&&rowSelect.Alamat? rowSelect.Alamat:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"NamaLengkap\"\r\n                margin=\"dense\"\r\n                name=\"NamaLengkap\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('NamaLengkap')? formState.errors.NamaLengkap[0]:null\r\n                }\r\n\r\n                error={hasError('NamaLengkap')}\r\n                defaultValue={rowSelect&&rowSelect.NamaLengkap? rowSelect.NamaLengkap:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                margin=\"dense\"\r\n                name=\"Password\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('Password')? formState.errors.Password[0]:null\r\n                }\r\n\r\n                error={hasError('Password')}\r\n                defaultValue={rowSelect&&rowSelect.Password? rowSelect.Password:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Confirm Password\"\r\n                margin=\"dense\"\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                onChange={handleChange}\r\n                // helperText={\r\n                //   hasError('nama_provinsi')? formState.errors.nama_provinsi[0]:null\r\n                // }\r\n\r\n                // error={hasError('nama_provinsi')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.confirmPassword? rowSelect.confirmPassword:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={rowSelect.Password != rowSelect.confirmPassword}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProfileAddModi.propTypes={\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default ProfileAddModi;","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\r\nimport { urlGetVuser } from 'kumpulanUrl';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport LoyaltyIcon from '@material-ui/icons/Loyalty';\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport counterIcon from '@iconify/icons-mdi/counter';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\n// import '../../../../assets_sbmpp_bo/css/bootstrap.css';\r\n// import '../../assets/cssnonlogin/core.css';\r\n// import '../../../../assets_sbmpp_bo/css/components.css';\r\nimport '../../../../assets_sbmpp_bo/css/colors.css';\r\nimport '../../../../assets_sbmpp_bo/css/icons/icomoon/styles.css';\r\n\r\n\r\nconst isClient=typeof window==='object';\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n\r\n\r\n  },\r\n  content: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    fontWeight: 700\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.error.main,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  icon: {\r\n    height: 32,\r\n    width: 32\r\n  },\r\n  difference: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  differenceIcon: {\r\n    color: theme.palette.error.dark\r\n  },\r\n  differenceValue: {\r\n    color: theme.palette.error.dark,\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n//const isClient=typeof window==='object';\r\nfunction getSize() {\r\n  return {\r\n    width: isClient? window.innerWidth:undefined,\r\n    height: isClient? window.innerHeight:undefined\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\nexport default function VisitorUser (props)  {\r\n  const { className, dashboard,\r\n    totalVisitorMobile, totalDailyVisitorMobile, totalUserRegistration,\r\n    totalVisitorWeb, totalDailyVisitorWeb,\r\n    ...rest }=props;\r\n  const [windowSize, setWindowSize]=useState(getSize);\r\n  function handleResize() {\r\n    setWindowSize(getSize());\r\n  }\r\n\r\n  async function getVuser() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(vUsers);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetV=urlGetVuser\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetV, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVusers(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setProvinsis([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n  //alert(dashboard.totalVisitorMobile)\r\n  //console.log(dashboard.data.listAccessMenuMobile)\r\n  const classes=useStyles();\r\n\r\n  const [vUsers, setVusers]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [open, setOpen]=React.useState(false);\r\n\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  useEffect(() => {\r\n    getVuser();\r\n  }, [order,orderBy]);\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n        style={{\r\n          height: windowSize.width<=780? 400:59+\"%\",\r\n\r\n          //width: '100%'\r\n\r\n\r\n        }}\r\n      >\r\n\r\n\r\n        <CardContent style={{\r\n          //background: 'blue', color: 'white',\r\n          //     width: '100%'\r\n          //          background: 'white', color: '#000',\r\n          height: 20+'%',\r\n          border: '1',\r\n          paddingBottom: windowSize.width<=780? 110:37+'%',\r\n\r\n        }}\r\n        >\r\n          <Grid\r\n            container\r\n            justify=\"space-between\"\r\n            className=\"panel\"\r\n          >\r\n            <Grid item\r\n              lg={12}\r\n              sm={12}\r\n              xl={6}\r\n              xs={12}\r\n              //            style={{ verticalAlign: '_top',borderBottomColor:'#fff' }}\r\n              style={{\r\n                transparent: true,\r\n                //              borderBottom:\r\n                //              {\r\n                //                color:'#fff',\r\n                //              },\r\n                //height: '100%',\r\n                borderBottomColor: 'rgba(255, 255, 255, 0.3)',\r\n                verticalAlign: '_top', fontSize: '13px', fontFamily: [\r\n                  \"Roboto\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\"\r\n                ]\r\n              }}\r\n              className=\"panel-heading bg-teal-400\"\r\n\r\n            >\r\n              TOTAL AKSES\r\n          </Grid>\r\n            <Grid item\r\n              lg={6}\r\n              sm={6}\r\n              xl={6}\r\n              xs={6}\r\n              style={{\r\n                verticalAlign: '_top', fontSize: '13px', fontFamily: [\r\n                  \"Roboto\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\"\r\n                ]\r\n              }}\r\n              className=\"panel-heading bg-teal-400\"\r\n\r\n            > <h3 class=\"no-margin\"><b><i class=\"icon-mobile position-left\"></i> &nbsp;\r\n              {\r\n\r\n                totalVisitorMobile? totalVisitorMobile:'0'\r\n                //      dashboard.totalVisitorMobile\r\n              }</b>\r\n              </h3>\r\n            </Grid>\r\n            <Grid item\r\n              lg={6}\r\n              sm={6}\r\n              xl={6}\r\n              xs={6}\r\n              className=\"panel-heading bg-teal-400\"\r\n            >\r\n              <h3 class=\"no-margin\"><b><i class=\"icon-earth position-left\"></i> &nbsp;\r\n          {\r\n                  totalVisitorWeb? totalVisitorWeb:'0'//dashboard.totalUserRegistration\r\n                }</b></h3>\r\n\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n        <CardContent style={{\r\n          //background: 'blue', color: 'white',\r\n          //     width: '100%'\r\n          //          background: 'white', color: '#000',\r\n          height: '20%',\r\n          border: '1',\r\n          paddingBottom: windowSize.width<=780? 110:36+'%'\r\n        }}\r\n        >\r\n          <Grid\r\n            container\r\n            justify=\"space-between\"\r\n            className=\"panel\"\r\n          >\r\n            <Grid item\r\n              lg={12}\r\n              sm={12}\r\n              xl={6}\r\n              xs={12}\r\n              //            style={{ verticalAlign: '_top',borderBottomColor:'#fff' }}\r\n              style={{\r\n                transparent: true,\r\n                //              borderBottom:\r\n                //              {\r\n                //                color:'#fff',\r\n                //              },\r\n                //height: '100%',\r\n                borderBottomColor: 'rgba(255, 255, 255, 0.3)',\r\n                verticalAlign: '_top', fontSize: '13px', fontFamily: [\r\n                  \"Roboto\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\"\r\n                ]\r\n              }}\r\n              className=\"panel-heading bg-pink-400\"\r\n\r\n            >\r\n              JUMLAH AKSES HARI INI\r\n          </Grid>\r\n            <Grid item\r\n              lg={6}\r\n              sm={6}\r\n              xl={6}\r\n              xs={6}\r\n              style={{\r\n                verticalAlign: '_top', fontSize: '13px', fontFamily: [\r\n                  \"Roboto\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\"\r\n                ]\r\n              }}\r\n              className=\"panel-heading bg-pink-400\"\r\n\r\n            >\r\n              <h3 class=\"no-margin\"><b><i class=\"icon-mobile position-left\"></i> &nbsp;\r\n              {totalDailyVisitorMobile? totalDailyVisitorMobile:'0'//dashboard.totalDailyVisitorMobile\r\n                }</b></h3>\r\n            </Grid>\r\n            <Grid item\r\n              lg={6}\r\n              sm={6}\r\n              xl={6}\r\n              xs={6}\r\n              className=\"panel-heading bg-pink-400\"\r\n            >\r\n              <h3 class=\"no-margin\"><b><i class=\"icon-earth position-left\"></i> &nbsp;\r\n            {totalDailyVisitorWeb? totalDailyVisitorWeb:'0'//dashboard.totalUserRegistration\r\n                } </b></h3>\r\n\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n\r\n        <CardContent style={{\r\n          //background: 'blue', color: 'white',\r\n          //     width: '100%'\r\n          //          background: 'white', color: '#000',\r\n          height: '20%',\r\n          border: '1',\r\n          paddingBottom: windowSize.width<=780? 110:37+'%',\r\n          //marginBottom: '0px'\r\n\r\n\r\n\r\n        }}\r\n        >\r\n          <Grid\r\n            container\r\n            justify=\"space-between\"\r\n            className=\"panel\"\r\n          >\r\n            <Grid item\r\n              lg={12}\r\n              sm={12}\r\n              xl={6}\r\n              xs={12}\r\n              //            style={{ verticalAlign: '_top',borderBottomColor:'#fff' }}\r\n              style={{\r\n                transparent: true,\r\n                //              borderBottom:\r\n                //              {\r\n                //                color:'#fff',\r\n                //              },\r\n                height: '100%',\r\n                borderBottomColor: 'rgba(255, 255, 255, 0.3)',\r\n                verticalAlign: '_top', fontSize: '13px', fontFamily: [\r\n                  \"Roboto\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\"\r\n                ]\r\n              }}\r\n              className=\"panel-heading bg-blue-400\"\r\n\r\n            >\r\n              TOTAL PENDAFTARAN PENGGUNA\r\n          </Grid>\r\n            <Grid item\r\n              lg={12}\r\n              sm={12}\r\n              xl={12}\r\n              xs={12}\r\n              style={{\r\n                verticalAlign: '_top', fontSize: '13px', fontFamily: [\r\n                  \"Roboto\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\"\r\n                ]\r\n              }}\r\n              className=\"panel-heading bg-blue-400\"\r\n\r\n            >\r\n              <h3 class=\"no-margin\"><b><i class=\"icon-users4 position-left\"></i> &nbsp;{\r\n                totalUserRegistration? totalUserRegistration:'0'//dashboard.totalUserRegistration\r\n              }\r\n              </b>\r\n              </h3>\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nVisitorUser.propTypes={\r\n  className: PropTypes.string\r\n};\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport { urlDeleteKel } from 'kumpulanUrl';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { async } from 'validate.js';\r\n// import { array } from 'yargs';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst KelurahansTable =props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,\r\n    handleDelete,\r\n    textfind,\r\n    order, orderBy, SettingKelurahan,\r\n    provinsisExport, filteredItems, handleOpen, selectedKelurahans,\r\n    setSelectedKelurahans,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\nconst deleteKel = async (e,selectedKelurahans) => {\r\n  let url = urlDeleteKel;\r\n  let response = axios.delete(url + `/${selectedKelurahans.id_kelurahan}`)\r\n  console.log(selectedKelurahans.id_kelurahan)\r\n\r\n  if (response === 200) {\r\n    thisClickedFunda.closest(columns).remove();\r\n    console.log(response.data.data)\r\n  }\r\n  \r\n\r\n\r\n}\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Kode Depdagri',\r\n      selector: 'KodeDepdagri',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name:'Nama Provinsi',\r\n      selector:'nama_provinsi',\r\n      sortable:true,\r\n    },    {\r\n      name:'Nama Kabupaten',\r\n      selector:'nama_kabupaten',\r\n      sortable:true,\r\n    },\r\n    {\r\n      name:'Nama Kecamatan',\r\n      selector:'nama_kecamatan',\r\n      sortable:true,\r\n    },\r\n    {\r\n      name: 'Nama Kelurahan',\r\n      selector: 'nama_kelurahan',\r\n      sortable: true, \r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: 'IsActive',\r\n      sortable: true,\r\n      cell: row => row.IsActive==1? \"Aktiv\":\"Non Aktiv\"\r\n    },\r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Edit Kelurahan',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\" id=\"edit\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Kelurahan\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      name: 'Hapus Kelurahan',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\" id=\"delete\"\r\n          onClick={(e) => handleDelete(e, row, \"Hapus Kelurahan\")}  ><DeleteIcon /></Button>\r\n      ,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n        <Button className=\"btn btn-sm btn-primary\" id=\"add\" onClick={(e) => handleOpen(e,[], \"Tambah Kelurahan\")}>\r\n        <AddIcon />\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Kelurahan\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedKelurahans_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedKelurahans_var=provinsis.map(provinsi => id);\r\n    } else {\r\n      selectedKelurahans_var=[];\r\n    }\r\n\r\n    setSelectedKelurahans(selectedKelurahans_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedKelurahans.indexOf(id);\r\n    let newSelectedKelurahans=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedKelurahans=newSelectedKelurahans.concat(selectedKelurahans, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedKelurahans=newSelectedKelurahans.concat(selectedKelurahans.slice(1));\r\n    } else if (selectedIndex===selectedKelurahans.length-1) {\r\n      newSelectedKelurahans=newSelectedKelurahans.concat(selectedKelurahans.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedKelurahans=newSelectedKelurahans.concat(\r\n        selectedKelurahans.slice(0, selectedIndex),\r\n        selectedKelurahans.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedKelurahans(newSelectedKelurahans);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Kelurahan List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kelurahan\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKelurahansTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default KelurahansTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKel, urlEditKel, urlKab, urlKec, urlProv, urlShowKab,urlShowKec } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate, { async } from 'validate.js';\r\nimport Swal from 'sweetalert2'\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nconst schema = {\r\n  KodeDepdagri: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  nama_kelurahan: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  IsActive: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    /* length: {\r\n       maximum: 1\r\n     }*/\r\n  },\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst KelurahanAddModi = props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({});\r\n  const [getStatus, setStatus] = useState([]);\r\n  const [kabupaten, setKabupaten] = useState([]);\r\n  const [kecamatan, setKecamatan] = useState([]);\r\n  const [provinsi, setProvinsi] = useState([]);\r\n  const [getKeyId, setKeyId] = useState([]);\r\n\r\n  const status = [\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  } \r\n   const handleChangeKabupaten=event=> {\r\n    handleChange(event)\r\n    showKecamatan(event.target.value)\r\n  }\r\nasync function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKecamatan(id_kabupaten) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kecamatan =', data.data)\r\n        setKecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setKecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKec() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKecAll=urlKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKecAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n     \r\n        setKecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  async function getKab() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKabAll=urlKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKabAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv = urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProvinsi(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setProvinsi([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    getProv()\r\n    showKecamatan(rowSelect.id_kabupaten)\r\n    showKab(rowSelect.id_provinsi)\r\n    // getKab()\r\n    // getKec()\r\n\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors = validate(rowSelect, schema);\r\n    // console.log(errors)\r\n    // console.log(\"rowSelect\", rowSelect)\r\n    // console.log(\"schema\", schema)\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange = event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose = () => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave = (event) => {\r\n    const userName = localStorage.getItem('username');\r\n    let url = urlAddKel;\r\n    let varJson = {\r\n      \"KodeDepdagri\": rowSelect.KodeDepdagri,\r\n      \"id_kelurahan\": rowSelect.id_kelurahan,\r\n      \"id_kecamatan\": rowSelect.id_kecamatan,\r\n      \"nama_kelurahan\": rowSelect.nama_kelurahan,\r\n      \"IsActive\": rowSelect.IsActive,\r\n      \r\n    }\r\n    if (rowSelect.id_kelurahan === undefined) {\r\n      url = urlAddKel;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url = urlEditKel;\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n    // console.log(varJson)\r\n\r\n    //console.log(body);\r\n\r\n\r\n\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson\r\n      )\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n\r\n    const response=fetch(url, requestOptions)\r\n    .then(tester => {\r\n      return tester.json();\r\n    })/**/\r\n\r\n    .then(tester => {\r\n      // console.log(tester)\r\n      // alert(tester.message)\r\n      getDataBackend();\r\n      if (url == urlAddKel) {\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Menambah Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }if(url == urlEditKel){\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Memperbarui Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }\r\n      then(\r\n        handleClose()\r\n        )\r\n      // alert(\"Sukses\")\r\n      const data=tester;\r\n    })\r\n    .catch((e) => {\r\n        // alert(e.message)\r\n      return false;\r\n\r\n\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError = field => {\r\n    return formState && formState.errors && formState.errors[field] ? true : false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title={rowSelect.id_kelurahan== undefined ? \"Tambah Kelurahan\" : \"Ubah Kelurahan\"}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Kode Depdagri\"\r\n                margin=\"dense\"\r\n                name=\"KodeDepdagri\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('KodeDepdagri') ? formState.errors.KodeDepdagri[0] : null\r\n                }\r\n\r\n                error={hasError('KodeDepdagri')}\r\n                defaultValue={rowSelect && rowSelect.KodeDepdagri ? rowSelect.KodeDepdagri : ''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <Grid\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {provinsi.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChangeKabupaten}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kecamatan\"\r\n                margin=\"dense\"\r\n                select\r\n                name=\"id_kecamatan\"\r\n                onChange={handleChange}\r\n                value={rowSelect.id_kecamatan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kecamatan.map(option => (\r\n                  <option\r\n                    key={option.id_kecamatan}\r\n                    value={option.id_kecamatan}\r\n                  >\r\n                    {option.nama_kecamatan}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n              \r\n             \r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama Kelurahan\"\r\n                margin=\"dense\"\r\n                name=\"nama_kelurahan\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('nama_kelurahan') ? formState.errors.nama_kelurahan[0] : null\r\n                }\r\n\r\n                error={hasError('nama_kelurahan')}\r\n\r\n                defaultValue={rowSelect && rowSelect.nama_kelurahan ? rowSelect.nama_kelurahan : ''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select aktiv\"\r\n                margin=\"dense\"\r\n                name=\"IsActive\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect && rowSelect.IsActive ? rowSelect.IsActive : ''}\r\n                variant=\"outlined\"\r\n              >\r\n                {status.map(option => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKelurahanAddModi.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default KelurahanAddModi;","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { ProvinsisToolbar, KelurahansTable, KelurahanAddModi, ViewMap } from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport mockDataSettingKelurahan from './dataSettingkelurahan';\r\nimport { urlKel, urlAddKel, urlEditKel, urlDeleteKel} from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\nimport { async } from 'validate.js';\r\nimport { get } from 'underscore';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst KelurahanList=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getKel() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(kelurahans);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKel=urlKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetKel, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKelurahans(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setKelurahans([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const deleteKel = async (id_kelurahan) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id_kelurahan: id_kelurahan\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKelurahans(data.data);\r\n        setFilteredItems(data.data);\r\n        getKel()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setKelurahans([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingKelurahan[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setKelurahansExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingKelurahan[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#kelurahanExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingKelurahan[0].TitleModule).length)/2\r\n      doc.text(SettingKelurahan[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('kelurahan.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setKelurahanfind(e.target.value)\r\n      let kelurahans4=kelurahans.filter(function (entry) {\r\n        return entry&&entry.nama_kelurahan&&\r\n          ((entry.nama_kelurahan!==null? entry.nama_kelurahan:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(kelurahans4)? kelurahans4:[kelurahans4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(kelurahans);\r\n    }\r\n    setKelurahanfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Kabupaten Di Indonesia\";\r\n    const headers = [[\"KodeDepdagri\", \"Nama Provinsi\", \"Nama kabupaten\", \"Nama Kecamatan\", \"Nama Kelurahan\", \"Keterangan\", \"Dibuat oleh\", \"Dibuat tanggal\", \"Terakhir diedit tanggal\", \"Terakhir diedit oleh\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.KodeDepdagri, elt.nama_provinsi, elt.nama_kabupaten, elt.nama_kecamatan, elt.nama_kelurahan, elt.Keterangan, elt.CreatedBy, elt.Created, elt.LastModified, elt.LastModifiedBy]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"kec.pdf\")\r\n  }\r\n\r\n\r\n  const [kelurahans, setKelurahans]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowKelurahansSelect, setRowKelurahanSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedKelurahans, setSelectedKelurahans]=useState([]);\r\n  const [kelurahansExport, setKelurahansExport]=useState([]);\r\n  const [kelurahanfind, setKelurahanfind]=useState([]);\r\n\r\n  const SettingKelurahan=useState(mockDataSettingKelurahan);\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getKel();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedKelurahans({\r\n      ...setSelectedKelurahans,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmKelurahan, kdKelurahan, status, keyId) => {\r\n    setRowKelurahanSelect({\r\n      ...selectedKelurahans,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdKelurahan']: kdKelurahan,\r\n      ['nmKelurahan']: nmKelurahan,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowKelurahan, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowKelurahanSelect(rowKelurahan);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowKelurahanSelect(rowKelurahan);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e, rowKelurahansSelect)=>{\r\n    deleteKel(rowKelurahansSelect.id_kelurahan)\r\n    \r\n  }\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getKel}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowKelurahanSelect} rowSelect={rowKelurahansSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose}\r\n        ComponenAddModi={componenPopup}></ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Kelurahan</h5>\r\n      {/*}\r\n      <ProvinsisToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={kelurahanfind} deleteKelurahan={deleteKelurahan}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        kelurahans={kelurahans}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <KelurahansTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          kelurahans = {kelurahans}\r\n          onChange={onChangefind}\r\n          handleDelete={handleDelete}\r\n          SettingKelurahan={SettingKelurahan}\r\n          kelurahansExport={kelurahansExport}\r\n          filteredItems={filteredItems}\r\n          selectedKelurahans={selectedKelurahans} \r\n          handleOpen={handleOpen}\r\n          setSelectedKelurahans={setSelectedKelurahans}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n        {popupComponen(KelurahanAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default KelurahanList;","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst KecamatanTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,kecamatanfind,\r\n    order, orderBy,\r\n    kecamatanExport, filteredItems, handleOpen, selectedkecamatan,\r\n    setselectedkecamatan,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Kode Depdagri',\r\n      selector: 'KodeDepdagri',\r\n      sortable: true,\r\n    },    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'nama_provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kabupaten',\r\n      selector: 'nama_kabupaten',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kecamatan',\r\n      selector: 'nama_kecamatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: 'IsActive',\r\n      sortable: true,\r\n      cell: row => row.IsActive==1? \"Aktiv\":\"Non Aktiv\"\r\n    },\r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Edit Kecamatan',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Kecamatan\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      name: 'Hapus Kecamatan',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e, row, \"Hapus Kecamatan\")} ><DeleteIcon /></Button>\r\n      ,\r\n    }\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah Kecamatan\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Kecamatan\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkecamatan_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkecamatan_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkecamatan_var=[];\r\n    }\r\n\r\n    setselectedkecamatan(selectedkecamatan_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkecamatan.indexOf(id);\r\n    let newselectedkecamatan=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan.slice(1));\r\n    } else if (selectedIndex===selectedkecamatan.length-1) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(\r\n        selectedkecamatan.slice(0, selectedIndex),\r\n        selectedkecamatan.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkecamatan(newselectedkecamatan);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Kecamatan List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kecamatan\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKecamatanTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default KecamatanTable;","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKec, urlEditKec, urlKab, urlProv, urlShowKab } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2'\r\nconst schema={\r\n  KodeDepdagri: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  nama_kecamatan: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  IsActive: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    /* length: {\r\n       maximum: 1\r\n     }*/\r\n  },\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst KecamatanAddModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [kabupaten, setkabupaten]=useState([]);\r\n  const [prov, setProv]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setkabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setkabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKab() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKabAll=urlKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKabAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setkabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv=urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    // getKab()\r\n    getProv();\r\n    showKab(rowSelect.id_provinsi)\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    const userName=localStorage.getItem('username');\r\n    let url=urlAddKec;\r\n    let varJson = {\r\n      \"KodeDepdagri\": rowSelect.KodeDepdagri,\r\n      \"id_kecamatan\": rowSelect.id_kecamatan,\r\n      \"id_kabupaten\": rowSelect.id_kabupaten,\r\n      \"id_provinsi\": rowSelect.id_provinsi,\r\n      \"nama_kecamatan\": rowSelect.nama_kecamatan,\r\n      \"IsActive\": rowSelect.IsActive,\r\n    }\r\n    if (rowSelect.id_kecamatan===undefined) {\r\n      url=urlAddKec;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditKec;\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n\r\n    //console.log(body);\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson\r\n      )\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    const response=fetch(url, requestOptions)\r\n      .then(tester => {\r\n        return tester.json();\r\n      })/**/\r\n\r\n      .then(tester => {\r\n        // console.log(tester)\r\n        // alert(tester.message)\r\n        getDataBackend();\r\n        if (url == urlAddKec) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Menambah Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }if(url == urlEditKec){\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Memperbarui Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }\r\n        then(\r\n          handleClose()\r\n          )\r\n        // alert(\"Sukses\")\r\n        const data=tester;\r\n      })\r\n      .catch((e) => {\r\n          // alert(e.message)\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title={rowSelect.id_kecamatan == undefined ? \"Tambah Kecamatan\" : \"Ubah Kecamatan\"}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Kode Depdagri\"\r\n                margin=\"dense\"\r\n                name=\"KodeDepdagri\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('KodeDepdagri')? formState.errors.KodeDepdagri[0]:null\r\n                }\r\n\r\n                error={hasError('KodeDepdagri')}\r\n                defaultValue={rowSelect&&rowSelect.KodeDepdagri? rowSelect.KodeDepdagri:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama Kecamatan\"\r\n                margin=\"dense\"\r\n                name=\"nama_kecamatan\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('nama_kecamatan')? formState.errors.nama_kecamatan[0]:null\r\n                }\r\n\r\n                error={hasError('nama_kecamatan')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.nama_kecamatan? rowSelect.nama_kecamatan:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select aktiv\"\r\n                margin=\"dense\"\r\n                name=\"IsActive\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect&&rowSelect.IsActive? rowSelect.IsActive:''}\r\n                variant=\"outlined\"\r\n              >\r\n                {status.map(option => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKecamatanAddModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default KecamatanAddModi;","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { KecamatanTable, KecamatanAddModi } from '../KecamatanList/components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKec,urlDeleteKec } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst KecamatanList=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getKec() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(kecamatan);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKec=urlKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetKec, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkecamatan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkecamatan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const deleteKec = async (id_kecamatan) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id_kecamatan: id_kecamatan\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkecamatan(data.data);\r\n        setFilteredItems(data.data);\r\n        getKec()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkecamatan([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setkecamatanExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#kecamatanExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let kecamatan4=kecamatan.filter(function (entry) {\r\n        return entry&&entry.nama_kecamatan&&\r\n          ((entry.nama_kecamatan!==null? entry.nama_kecamatan:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(kecamatan4)? kecamatan4:[kecamatan4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(kecamatan);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Kabupaten Di Indonesia\";\r\n    const headers = [[\"KodeDepdagri\", \"Nama Provinsi\", \"Nama kabupaten\", \"Nama Kecamatan\", \"Keterangan\", \"Dibuat oleh\", \"Dibuat tanggal\", \"Terakhir diedit tanggal\", \"Terakhir diedit oleh\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.KodeDepdagri, elt.nama_provinsi, elt.nama_kabupaten,elt.nama_kecamatan, elt.Keterangan, elt.CreatedBy, elt.Created, elt.LastModified, elt.LastModifiedBy]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"kec.pdf\")\r\n  }\r\n\r\n\r\n  const [kecamatan, setkecamatan]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowkecamatanSelect, setRowkecamatanSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedkecamatan, setSelectedkecamatan]=useState([]);\r\n  const [kecamatanExport, setkecamatanExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getKec();\r\n    //   alert(setOpen) \r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedkecamatan({\r\n      ...setSelectedkecamatan,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowkecamatanSelect({\r\n      ...selectedkecamatan,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowkecamatanSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowkecamatanSelect) => {\r\n    deleteKec(rowkecamatanSelect.id_kecamatan)\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowkecamatanSelect(rowProvinsi);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getKec}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowkecamatanSelect} rowSelect={rowkecamatanSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Kecamatan</h5>\r\n      {/*}\r\n      <kecamatanToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        kecamatan={kecamatan}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <KecamatanTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          kecamatanExport={kecamatanExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedkecamatan={selectedkecamatan} \r\n          handleOpen={handleOpen}\r\n          setSelectedkecamatan={setSelectedkecamatan}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(KecamatanAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default KecamatanList;","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst KabupatenTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,kabupatenfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedkabupaten,\r\n    setselectedkabupaten,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Kode Depdagri',\r\n      selector: 'KodeDepdagri',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'nama_provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kabupaten',\r\n      selector: 'nama_kabupaten',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: 'IsActive',\r\n      sortable: true,\r\n      cell: row => row.IsActive==1? \"Aktiv\":\"Non Aktiv\"\r\n    },\r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Edit Kabupaten',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Kabupaten\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      name: 'Hapus Kabupaten',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e, row, \"Hapus Kabupaten\")} ><DeleteIcon /></Button>\r\n      ,\r\n    }\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah Kabupaten\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Kabupaten\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkabupaten_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkabupaten_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkabupaten_var=[];\r\n    }\r\n\r\n    setselectedkabupaten(selectedkabupaten_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkabupaten.indexOf(id);\r\n    let newselectedkabupaten=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(1));\r\n    } else if (selectedIndex===selectedkabupaten.length-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(\r\n        selectedkabupaten.slice(0, selectedIndex),\r\n        selectedkabupaten.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkabupaten(newselectedkabupaten);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Kabupaten List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kabupaten\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKabupatenTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default KabupatenTable;","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKab, urlEditKab, urlKab, urlProv } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport Swal from 'sweetalert2';\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nconst schema={\r\n  KodeDepdagri: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  nama_kabupaten: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  IsActive: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    /* length: {\r\n       maximum: 1\r\n     }*/\r\n  },\r\n  id_provinsi: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    /* length: {\r\n       maximum: 1\r\n     }*/\r\n  },\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst KabupatenAddModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [prov, setProv] = useState([])\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getProv()\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=() => {\r\n    const userName=localStorage.getItem('username');\r\n    let varJson = {\r\n      \"KodeDepdagri\": rowSelect.KodeDepdagri,\r\n      \"id_provinsi\": rowSelect.id_provinsi,\r\n      \"id_kabupaten\": rowSelect.id_kabupaten,\r\n      \"nama_kabupaten\": rowSelect.nama_kabupaten,\r\n      \"IsActive\": rowSelect.IsActive,\r\n    }\r\n    let url=urlAddKab;\r\n    if (rowSelect.id_kabupaten===undefined) {\r\n      url=urlAddKab;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditKab;\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n\r\n    //console.log(body);\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson,\r\n      )\r\n    }\r\n  \r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    const response=fetch(url, requestOptions)\r\n      .then(tester => {\r\n        return tester.json();\r\n      })/**/\r\n\r\n      .then(tester => {\r\n        // console.log(tester)\r\n        // alert(tester.message)\r\n        getDataBackend();\r\n        if (url == urlAddKab) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Menambah Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }if(url == urlEditKab){\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Memperbarui Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }\r\n        then(\r\n          handleClose()\r\n          )\r\n        // alert(\"Sukses\")\r\n        const data=tester;\r\n      })\r\n      .catch((e) => {\r\n\r\n        // swal(\"Gagal Login!\", \"Gagal Login\", \"error\", null, '200x200')\r\n\r\n        return false;\r\n\r\n\r\n      });\r\n    }\r\n\r\n    \r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title={rowSelect.id_kabupaten == undefined ? \"Tambah Kabupaten\" : \"Ubah Kabupaten\"}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Kode Depdagri\"\r\n                margin=\"dense\"\r\n                name=\"KodeDepdagri\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('KodeDepdagri')? formState.errors.KodeDepdagri[0]:null\r\n                }\r\n\r\n                error={hasError('KodeDepdagri')}\r\n                defaultValue={rowSelect&&rowSelect.KodeDepdagri? rowSelect.KodeDepdagri:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChange\r\n                \r\n                }\r\n                select\r\n\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map((option)=> (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"nama_kabupaten\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('nama_kabupaten')? formState.errors.nama_kabupaten[0]:null\r\n                }\r\n\r\n                error={hasError('nama_kabupaten')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.nama_kabupaten? rowSelect.nama_kabupaten:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select aktiv\"\r\n                margin=\"dense\"\r\n                name=\"IsActive\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect&&rowSelect.IsActive? rowSelect.IsActive:''}\r\n                variant=\"outlined\"\r\n              >\r\n                {status.map(option => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKabupatenAddModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default KabupatenAddModi;","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { KabupatenTable, KabupatenAddModi } from '../KabupatenList/components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlDeleteKab, urlKab,urlProv } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst KabupatenList=props => {\r\n\r\n  async function getKab() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(kabupaten);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKab=urlKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKab, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkabupaten(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const deleteKab = async (id_kabupaten) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id_kabupaten: id_kabupaten\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkabupaten(data.data);\r\n        setFilteredItems(data.data);\r\n        getKab()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteKabupaten=(e) => {\r\n    const selectedkabupaten_string=selectedkabupaten.join(\"<batas></batas>\");\r\n    let kabupaten3=kabupaten.filter(function (entry) {\r\n      return entry&&entry.id&&selectedkabupaten_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(kabupaten3)\r\n    setkabupaten(kabupaten3)\r\n    setkabupatenfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setkabupatenExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#kabupatenExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setkabupatenfind(e.target.value)\r\n      let kabupaten4=kabupaten.filter(function (entry) {\r\n        return entry&&entry.nama_kabupaten&&\r\n          ((entry.nama_kabupaten!==null? entry.nama_kabupaten:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(kabupaten4)? kabupaten4:[kabupaten4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(kabupaten);\r\n    }\r\n    setkabupatenfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Kabupaten Di Indonesia\";\r\n    const headers = [[\"KodeDepdagri\", \"Nama Provinsi\", \"Nama kabupaten\", \"Keterangan\", \"Dibuat oleh\", \"Dibuat tanggal\", \"Terakhir diedit tanggal\", \"Terakhir diedit oleh\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.KodeDepdagri, elt.nama_provinsi, elt.nama_kabupaten, elt.Keterangan, elt.CreatedBy, elt.Created, elt.LastModified, elt.LastModifiedBy]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"kab.pdf\")\r\n  }\r\n\r\n\r\n  const [kabupaten, setkabupaten]=useState([]);\r\n  // const [provinsiId, setProvinsiId]=useState(getKab());\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowkabupatenSelect, setRowkabupatenSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedkabupaten, setSelectedkabupaten]=useState([]);\r\n  const [kabupatenExport, setkabupatenExport]=useState([]);\r\n  const [kabupatenfind, setkabupatenfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getKab();\r\n    // console.log('prov',provinsiId)\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedkabupaten({\r\n      ...setSelectedkabupaten,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowkabupatenSelect({\r\n      ...selectedkabupaten,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowKabupaten, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowkabupatenSelect(rowKabupaten);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowkabupatenSelect) => {\r\n    deleteKab(rowkabupatenSelect.id_kabupaten)\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowkabupatenSelect(rowKabupaten);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getKab}\r\n        handleChange={handleChange} setData={setData} \r\n        open={open} setRowSelect={setRowkabupatenSelect} rowSelect={rowkabupatenSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }} className=\"font-poppins\">Kabupaten</h5>\r\n      {/*}\r\n      <kabupatenToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={kabupatenfind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        kabupaten={kabupaten}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <KabupatenTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          kabupatenExport={kabupatenExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          kabupatenfind={kabupatenfind}\r\n          filteredItems={filteredItems}\r\n          selectedkabupaten={selectedkabupaten} \r\n          kabupatenfind={kabupatenfind}\r\n          handleOpen={handleOpen}\r\n          setSelectedkabupaten={setSelectedkabupaten}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(KabupatenAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default KabupatenList;","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport axios from 'axios';\r\nimport { urlDeleteProv } from 'kumpulanUrl';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { async } from 'validate.js';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst VuserTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,Vuserfind,\r\n    order, orderBy, SettingVuser,\r\n    VuserExport, filteredItems, handleOpen, selectedVuser,\r\n    setSelectedVuser,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Vuser ID',\r\n      selector: 'id',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama User',\r\n      selector: 'UserName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Lengkap',\r\n      selector: 'NamaLengkap',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Email',\r\n      selector: 'Email',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Alamat',\r\n      selector: 'Alamat',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'NIK',\r\n      selector: 'NIK',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created At',\r\n      selector: 'CreatedDate',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Last Modified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jabatan',\r\n      selector: 'Jabatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Edit Vuser',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Vuser\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      name: 'Hapus Vuser',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e, row, \"Delete Vuser\")} ><DeleteIcon /></Button>\r\n      ,\r\n    },\r\n  ];\r\n  // const filteredItems=Vuser.filter(item => item.nama_Vuser&&item.nama_Vuser.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah Vuser\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Vuser\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedVuser_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedVuser_var=Vuser.map(Vuser => Vuser.id);\r\n    } else {\r\n      selectedVuser_var=[];\r\n    }\r\n\r\n    setSelectedVuser(selectedVuser_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedVuser.indexOf(id);\r\n    let newSelectedVuser=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser.slice(1));\r\n    } else if (selectedIndex===selectedVuser.length-1) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedVuser=newSelectedVuser.concat(\r\n        selectedVuser.slice(0, selectedIndex),\r\n        selectedVuser.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedVuser(newSelectedVuser);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=Vuser;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Vuser List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"UserName\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nVuserTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default VuserTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddVuser, urlEditVuser } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2';\r\nconst schema={\r\n  UserName: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  NamaLengkap: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  Jabatan: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  Password: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst VuserAddModi=props => {\r\n  const { className, setData, getDataBackend,getMockData, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    /*\r\n    if (rowSelect.Password==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    const userId=localStorage.getItem('user_id');\r\n    let url=urlAddVuser;\r\n    if (rowSelect.id===undefined) {\r\n      url=urlAddVuser;\r\n    } else {\r\n      url=urlEditVuser;\r\n    }\r\n\r\n    //console.log(body);\r\n\r\n\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"UserName\": rowSelect.UserName,\r\n        \"id\": rowSelect.id,\r\n        \"NamaLengkap\": rowSelect.NamaLengkap,\r\n        \"NIK\": rowSelect.NIK,\r\n        \"Alamat\": rowSelect.Alamat,\r\n        \"Jabatan\": rowSelect.Jabatan,\r\n        \"Password\": rowSelect.Password,\r\n        \"Email\": rowSelect.Email,\r\n        \"Title Email\": localStorage.getItem('Title Email'),\r\n        \"body\": localStorage.getItem('body'),\r\n        \"url\": localStorage.getItem('url'),\r\n      })\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    const response=fetch(url, requestOptions)\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n       handleClose();\r\n          return res.json();\r\n        }\r\n       \r\n      })/**/\r\n\r\n      .then(res => {\r\n        // console.log(res)\r\n        getDataBackend();\r\n        if (url == urlAddVuser) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Menambah Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }if(url == urlEditVuser){\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Memperbarui Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }\r\n\r\n\r\n        const data=res;\r\n      })\r\n      .catch((e) => {\r\n\r\n    \r\n        // swal(\"Gagal Login!\", \"Gagal Login\", \"error\",  )\r\n\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title= {title}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama Pengguna\"\r\n                margin=\"dense\"\r\n                name=\"UserName\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('UserName')? formState.errors.UserName[0]:null\r\n                }\r\n\r\n                error={hasError('UserName')}\r\n                defaultValue={rowSelect&&rowSelect.UserName? rowSelect.UserName:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nomor Induk\"\r\n                margin=\"dense\"\r\n                name=\"NIK\"\r\n                onChange={handleChange}\r\n                // helperText={\r\n                //   hasError('UserName')? formState.errors.UserName[0]:null\r\n                // }\r\n\r\n                // error={hasError('UserName')}\r\n                defaultValue={rowSelect&&rowSelect.NIK? rowSelect.NIK:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Alamat\"\r\n                margin=\"dense\"\r\n                name=\"Alamat\"\r\n                onChange={handleChange}\r\n                // helperText={\r\n                //   hasError('UserName')? formState.errors.UserName[0]:null\r\n                // }\r\n\r\n                // error={hasError('UserName')}\r\n                defaultValue={rowSelect&&rowSelect.Alamat? rowSelect.Alamat:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama Lengkap\"\r\n                margin=\"dense\"\r\n                name=\"NamaLengkap\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('NamaLengkap')? formState.errors.NamaLengkap[0]:null\r\n                }\r\n\r\n                error={hasError('NamaLengkap')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.NamaLengkap? rowSelect.NamaLengkap:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Jabatan\"\r\n                margin=\"dense\"\r\n                name=\"Jabatan\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('Jabatan')? formState.errors.Jabatan[0]:null\r\n                }\r\n\r\n                error={hasError('Jabatan')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.Jabatan? rowSelect.Jabatan:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n             item\r\n             md={6}\r\n             xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email\"\r\n                margin=\"dense\"\r\n                name=\"Email\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('Email')? formState.errors.Email[0]:null\r\n                }\r\n                error={hasError('Email')}\r\n                defaultValue={rowSelect&&rowSelect.Email? rowSelect.Email:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n                         \r\n            <Grid\r\n             item\r\n             md={6}\r\n             xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                margin=\"dense\"\r\n                name=\"Password\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('Password')? formState.errors.Password[0]:null\r\n                }\r\n              disabled={title == 'Ubah Vuser'}\r\n                error={hasError('Password')}\r\n                defaultValue={rowSelect&&rowSelect.Password? rowSelect.Password:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nVuserAddModi.propTypes={\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default VuserAddModi;","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { VuserToolbar, VuserTable, VuserAddModi, ViewMap } from './components';\r\nimport { ModalComponent } from 'components';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKab,urlGetVuser, urlEditVuser, urlDeleteUser } from '../../kumpulanUrl'\r\n\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\nimport { async } from 'validate.js';\r\nimport Swal from 'sweetalert2';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst getMockData=() =>{\r\n  mockData.map(mock => {\r\n    return(\r\n      <h4>{mock}</h4>\r\n\r\n    )\r\n  })\r\n  // console.log(mockData)\r\n\r\n  \r\n}\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst VuserList=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getVuser() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(Vuser);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetVuser=urlGetVuser\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetVuser, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVuser(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setVuser([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const deleteUser = async (id) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id: id\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteUser\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVuser(data.data);\r\n        setFilteredItems(data.data);\r\n        getVuser()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setVuser([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingVuser[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  \r\n\r\n  const deleteVuser=async (e, id) => {\r\n    const selectedVuser_string=selectedVuser.join(\"<batas></batas>\");\r\n    let Vuser3=Vuser.filter(function (entry) {\r\n      return entry&&entry.id&&selectedVuser_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n\r\n    let url=urlDeleteProv\r\n    if (url === 200) {\r\n      // thisClickedFunda.closest(\"tr\").remove();\r\n      // console.log(url.data.message)\r\n    }\r\n\r\n    setFilteredItems(Vuser3)\r\n    setVuser(Vuser3)\r\n    setVuserfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setVuserExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingVuser[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#VuserExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingVuser[0].TitleModule).length)/2\r\n      doc.text(SettingVuser[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('Vuser.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setVuserfind(e.target.value)\r\n      let Vuser4=Vuser.filter(function (entry) {\r\n        return entry&&entry.UserName&&\r\n          ((entry.UserName!==null? entry.UserName:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(Vuser4)? Vuser4:[Vuser4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(Vuser);\r\n    }\r\n    setVuserfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Admin Bkkbn\";\r\n    const headers = [[\"Vuser ID\", \"Nama User\", \"Nama Provinsi\", \"Nama Lengkap\", \"Email\", \"Alamat\", \"NIK\", \"Jabatan\", \"Dibuat tanggal\", \"Terakhir diedit tanggal\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.id, elt.UserName, elt.nama_provinsi, elt.NamaLengkap, elt.Email, elt.Alamat, elt.NIK, elt.Jabatan, elt.CreatedDate, elt.LastModified]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Vuser.pdf\")\r\n  }\r\n\r\n\r\n  const [Vuser, setVuser]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowVuserSelect, setRowVuserSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedVuser, setSelectedVuser]=useState([]);\r\n  const [VuserExport, setVuserExport]=useState([]);\r\n  const [Vuserfind, setVuserfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  // const SettingVuser=useState(mockDataSettingVuser);\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getVuser();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedVuser({\r\n      ...setSelectedVuser,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmVuser, kdVuser, status, keyId) => {\r\n    setRowVuserSelect({\r\n      ...selectedVuser,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdVuser']: kdVuser,\r\n      ['nmVuser']: nmVuser,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowVuser, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowVuserSelect(rowVuser);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowVuserSelect) => {\r\n    deleteUser(rowVuserSelect.id).then(Swal.fire({\r\n      position: 'center',\r\n      icon: 'success',\r\n      title: 'Data Berhasil Dihapus',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    }))\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowVuserSelect(rowVuser);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getVuser}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowVuserSelect} rowSelect={rowVuserSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Vuser</h5>\r\n      {/*}\r\n      <VuserToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={Vuserfind} deleteVuser={deleteVuser}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        Vuser={Vuser}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <VuserTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          getMockData={getMockData}\r\n          Vuser = {Vuser}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          deleteVuser={deleteVuser}\r\n          // SettingVuser={SettingVuser}\r\n          VuserExport={VuserExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteVuser={deleteVuser}\r\n          Vuserfind={Vuserfind}\r\n          filteredItems={filteredItems}\r\n          selectedVuser={selectedVuser} \r\n          handleOpen={handleOpen}\r\n          setSelectedVuser={setSelectedVuser}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(VuserAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default VuserList;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport axios from 'axios';\r\nimport { urlDeleteProv } from 'kumpulanUrl';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { async } from 'validate.js';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst KelompokDataTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,Vuserfind,\r\n    order, orderBy, SettingVuser,\r\n    VuserExport, filteredItems, handleOpen, selectedVuser,\r\n    setSelectedVuser,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns=[\r\n    // {\r\n    //   name: 'Vuser ID',\r\n    //   selector: 'id',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Nama Kelompok Data',\r\n      selector: 'nama_kelompok_data',\r\n      sortable: true,\r\n    },\r\n\r\n \r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Kelompok Data\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e,row)} ><DeleteIcon /></Button>\r\n      ,\r\n    },\r\n  ];\r\n  // const filteredItems=Vuser.filter(item => item.nama_Vuser&&item.nama_Vuser.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah Kelompok Data\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Kelompok Data\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedVuser_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedVuser_var=Vuser.map(Vuser => Vuser.id);\r\n    } else {\r\n      selectedVuser_var=[];\r\n    }\r\n\r\n    setSelectedVuser(selectedVuser_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedVuser.indexOf(id);\r\n    let newSelectedVuser=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser.slice(1));\r\n    } else if (selectedIndex===selectedVuser.length-1) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedVuser=newSelectedVuser.concat(\r\n        selectedVuser.slice(0, selectedIndex),\r\n        selectedVuser.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedVuser(newSelectedVuser);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=Vuser;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Kelompok Data List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"UserName\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKelompokDataTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default KelompokDataTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKelompokData, urlEditKelompokData } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2'\r\nconst schema={\r\n  nama_kelompok_data: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  /**/\r\n\r\n};\r\n// const Swal = require('sweetalert2')\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst KelompokDataAddModi=props => {\r\n  const { className, setData, getDataBackend,getMockData, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    /*\r\n    if (rowSelect.Password==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    const userName=localStorage.getItem('username');\r\n    let varJson = {\r\n      \"nama_kelompok_data\":rowSelect.nama_kelompok_data,\r\n      \"Id_kelompok_data\":rowSelect.Id_kelompok_data,\r\n    }\r\n    let url=urlAddKelompokData;\r\n    if (title=='Tambah Kelompok Data') {\r\n      url=urlAddKelompokData;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditKelompokData;\r\n      // console.log(\"ide =\",rowSelect.id_rt)\r\n\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n\r\n    // console.log(\"var json =\",varJson);\r\n\r\n\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson\r\n      )\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    // console.log(url)\r\n    const response=fetch(url, requestOptions)\r\n      .then(tester => {\r\n        if (tester.status === 200) {  \r\n       handleClose();\r\n          return tester.json();\r\n        }\r\n       \r\n      })/**/\r\n\r\n      .then(tester => {\r\n        // console.log(tester)\r\n        // alert(tester)\r\n      getDataBackend();if (url == urlAddKelompokData) {\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Menambah Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }if(url == urlEditKelompokData){\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Memperbarui Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }\r\n\r\n        // alert(\"Sukses\")\r\n        const data=tester;\r\n      })\r\n      .catch((e) => {\r\n        alert(e)\r\n        // swal(\"Gagal Login!\", \"Gagal Login\", \"error\",  )\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n        title={title}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama Kelompok Data\"\r\n                margin=\"dense\"\r\n                name=\"nama_kelompok_data\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('nama_kelompok_data')? formState.errors.nama_kelompok_data[0]:null\r\n                }\r\n\r\n                error={hasError('nama_kelompok_data')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.nama_kelompok_data? rowSelect.nama_kelompok_data:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKelompokDataAddModi.propTypes={\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default KelompokDataAddModi;","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { VuserToolbar, KelompokDataTable, KelompokDataAddModi, V, KelompokDataAddModiiewMap } from './components';\r\nimport { ModalComponent } from 'components';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKab,urlGetVuser,urlGetKelompokData, urlDeleteKelompokData } from '../../kumpulanUrl'\r\n\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\nimport { async } from 'validate.js';\r\nimport Swal from 'sweetalert2';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst getMockData=() =>{\r\n  mockData.map(mock => {\r\n    return(\r\n      <h4>{mock}</h4>\r\n\r\n    )\r\n  })\r\n  // console.log(mockData)\r\n\r\n  \r\n}\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst KelompokDataList=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getKelompokData() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(Vuser);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlGetKelompokData\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVuser(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setVuser([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  async function deleteKelompokData(Id_kelompok_data) {\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        Id_kelompok_data: Id_kelompok_data\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteKelompokData\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVuser(data.data);\r\n        setFilteredItems(data.data);\r\n        getKelompokData()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setVuser([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingVuser[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setVuserExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingVuser[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#VuserExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingVuser[0].TitleModule).length)/2\r\n      doc.text(SettingVuser[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('Vuser.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setVuserfind(e.target.value)\r\n      let Vuser4=Vuser.filter(function (entry) {\r\n        return entry&&entry.UserName&&\r\n          ((entry.UserName!==null? entry.UserName:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(Vuser4)? Vuser4:[Vuser4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(Vuser);\r\n    }\r\n    setVuserfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"kelompok Data\";\r\n    const headers = [[\"Nama Kelompok Data\", \"Dibuat oleh\", \"Dibuat tanggal\", \"Terakhir diedit tanggal\", \"Terakhir diedit oleh\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.nama_kelompok_data, elt.CreatedBy, elt.Created, elt.LastModified, elt.LastModifiedBy]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Kelompok.pdf\")\r\n  }\r\n\r\n\r\n  const [Vuser, setVuser]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowVuserSelect, setRowVuserSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedVuser, setSelectedVuser]=useState([]);\r\n  const [VuserExport, setVuserExport]=useState([]);\r\n  const [Vuserfind, setVuserfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  // const SettingVuser=useState(mockDataSettingVuser);\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getKelompokData();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedVuser({\r\n      ...setSelectedVuser,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmVuser, kdVuser, status, keyId) => {\r\n    setRowVuserSelect({\r\n      ...selectedVuser,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdVuser']: kdVuser,\r\n      ['nmVuser']: nmVuser,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowVuser, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowVuserSelect(rowVuser);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowVuserSelect) => {\r\n    deleteKelompokData(rowVuserSelect.Id_kelompok_data).then( Swal.fire( {position: 'center',\r\n    icon: 'success',\r\n    title: 'Sukses Menambah Data',\r\n    showConfirmButton: false,\r\n    timer: 1000}))\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowVuserSelect(rowVuser);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getKelompokData}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowVuserSelect} rowSelect={rowVuserSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Kelompok Data</h5>\r\n      {/*}\r\n      <VuserToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={Vuserfind} deleteVuser={deleteVuser}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        Vuser={Vuser}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <KelompokDataTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          getMockData={getMockData}\r\n          Vuser = {Vuser}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          // SettingVuser={SettingVuser}\r\n          VuserExport={VuserExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteVuser={deleteVuser}\r\n          Vuserfind={Vuserfind}\r\n          filteredItems={filteredItems}\r\n          selectedVuser={selectedVuser} \r\n          handleOpen={handleOpen}\r\n          setSelectedVuser={setSelectedVuser}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(KelompokDataAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default KelompokDataList;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport axios from 'axios';\r\nimport { urlDeleteProv } from 'kumpulanUrl';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { async } from 'validate.js';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst TargetKkTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,Vuserfind,\r\n    order, orderBy, SettingVuser,\r\n    VuserExport, filteredItems, handleOpen, selectedVuser,\r\n    setSelectedVuser,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Periode Sensus',\r\n      selector: 'Periode_Sensus',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'nama_provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kabupaten',\r\n      selector: 'nama_kabupaten',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kecamatan',\r\n      selector: 'nama_kecamatan',\r\n      sortable: true,\r\n    },    {\r\n      name: 'Nama Kelurahan',\r\n      selector: 'nama_kelurahan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Rw',\r\n      selector: 'nama_rw',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Rt',\r\n      selector: 'nama_rt',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Target KK',\r\n      selector: 'KK',\r\n      sortable: true,\r\n      \r\n    },\r\n \r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    \r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n        disabled={row.Periode_Sensus <= localStorage.getItem('Periode Sensus')}//={row.Periode_Sensus <= localStorage.getItem('Periode Sensus') ? \"true\" : \"false\"}\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Target Kk \") }  > {row.Periode_Sensus < parseInt(localStorage.getItem('Periode Sensus'))}<EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e,row)} ><DeleteIcon /></Button>\r\n      ,\r\n    },\r\n  ];\r\n  // const filteredItems=Vuser.filter(item => item.nama_Vuser&&item.nama_Vuser.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah Target Kk\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Vuser\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedVuser_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedVuser_var=Vuser.map(Vuser => Vuser.id);\r\n    } else {\r\n      selectedVuser_var=[];\r\n    }\r\n\r\n    setSelectedVuser(selectedVuser_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedVuser.indexOf(id);\r\n    let newSelectedVuser=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser.slice(1));\r\n    } else if (selectedIndex===selectedVuser.length-1) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedVuser=newSelectedVuser.concat(\r\n        selectedVuser.slice(0, selectedIndex),\r\n        selectedVuser.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedVuser(newSelectedVuser);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=Vuser;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Target KK\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"UserName\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTargetKkTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default TargetKkTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddTargetKk, \r\n  urlEditTargetKk, \r\nurlRw, urlKel, urlKec, urlKab, urlProv, urlShowKab, urlShowKec, urlShowKel, urlShowRw,urlShowRt\r\n\r\n} from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2';\r\nconst schema={\r\n  Target_KK: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    // length: {\r\n    //   maximum: 200\r\n    // }\r\n  },\r\n  /**/\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst TargetKkAddModi=props => {\r\n  const { className, setData, getDataBackend,getMockData, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [kelompokData,setKelompokData]=useState([]);\r\n  const [rw, setRw]=useState([]);\r\n  const [rt, setRt]=useState([]);\r\n  const [kabupaten, setKabupaten] = useState([]);\r\n  const [kecamatan, setKecamatan] = useState([]);\r\n  const [provinsi, setProvinsi] = useState([]);\r\n  const [kel, setKel]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  \r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  } \r\n  const handleChangeKabupaten=event=> {\r\n    handleChange(event)\r\n    showKecamatan(event.target.value)\r\n  }\r\n  const handleChangeKecamatan=event=> {\r\n    handleChange(event)\r\n    showKel(event.target.value)\r\n  }\r\n\r\n  const handleChangeKelurahan=event=> {\r\n    handleChange(event)\r\n    showRw(event.target.value)\r\n  }\r\n  const handleChangeRw=event=> {\r\n    handleChange(event)\r\n    showRt(event.target.value)\r\n  }\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKecamatan(id_kabupaten) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKec\r\n\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kecamatan =', data.data)\r\n        setKecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setKecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKel(id_kecamatan) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kecamatan\": id_kecamatan,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKel\r\n\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kelurahan =',data.data)\r\n        setKel(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setKel([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showRw(id_kelurahan) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kelurahan\": id_kelurahan,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowRw\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('Rw =',data.data)\r\n        setRw(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setRw([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showRt(id_rw) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_rw\": id_rw,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowRt\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('Rt =',data.data)\r\n        setRt(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setRt([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKel() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKel(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setKel([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKec() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKecAll=urlKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKecAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setKecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKab() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKabAll=urlKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKabAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv = urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProvinsi(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setProvinsi([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getRw() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlRw\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setRw(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setRw([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    getProv();\r\n    showKab(rowSelect.id_provinsi);\r\n    showKecamatan(rowSelect.id_kabupaten);\r\n    showKel(rowSelect.id_kecamatan);\r\n    showRw(rowSelect.id_kelurahan);\r\n    showRt(rowSelect.id_rw);\r\n\r\n    const errors=validate(rowSelect, schema);\r\n    // console.log(errors)\r\n    // console.log(\"rowSelect\", rowSelect)\r\n    // console.log(\"schema\", schema)\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n    if (title!='Tambah Target Kk' && rowSelect.id_rt_old===undefined) {\r\n      rowSelect.id_rt_old=rowSelect.id_rt;\r\n      rowSelect.Periode_Sensus_old=rowSelect.Periode_Sensus;\r\n      // console.log('rs = ',rowSelect)\r\n    }\r\n    //   alert(setOpen)\r\n  }, [rowSelect]);  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n\r\n  const handleSave=(event) => {\r\n    const userName=localStorage.getItem('username');\r\n    let varJson = {\r\n      \"Periode_Sensus\": rowSelect.Periode_Sensus,\r\n      \"Target_KK\": rowSelect.Target_KK,\r\n      \"id_rt\":rowSelect.id_rt,\r\n      \"id_rt_old\":rowSelect.id_rt_old,\r\n      \"Periode_Sensus_old\":rowSelect.Periode_Sensus_old,\r\n      \"id_provinsi\": rowSelect.id_provinsi,\r\n      \"id_kabupaten\": rowSelect.id_kabupaten,\r\n      \"id_kecamatan\": rowSelect.id_kecamatan,\r\n      \"id_kelurahan\": rowSelect.id_kelurahan,\r\n      \"id_rw\": rowSelect.id_rw,\r\n    }\r\n    let url \r\n    if (title=='Tambah Target Kk') {\r\n      url=urlAddTargetKk;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditTargetKk;\r\n      // console.log(\"ide =\",rowSelect.id_rt)\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n\r\n    // console.log(\"var json =\",varJson);\r\n\r\n\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson,\r\n      )\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    // console.log(url)\r\n    const response=fetch(url, requestOptions)\r\n      .then(tester => {\r\n        if (tester.status === 200) {  \r\n       handleClose();\r\n          return tester.json();\r\n        }\r\n       \r\n      })/**/\r\n\r\n      .then(tester => {\r\n        // console.log(tester)\r\n        // alert(tester)\r\n      getDataBackend();\r\n      if (url == urlAddTargetKk) {\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Menambah Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }if(url == urlEditTargetKk){\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Memperbarui Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }\r\n\r\n        // alert(\"Sukses\")\r\n        const data=tester;\r\n      })\r\n      .catch((e) => {\r\n        // alert(e)\r\n        // console.log(e)\r\n        // swal(\"Gagal Login!\", \"Gagal Login\", \"error\",  )\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n\r\n  }\r\n  const handling =()=>{\r\n    {\r\n      var tmp = [];\r\n      // alert(tmp) \r\n      // alert( localStorage.getItem(\"Periode Sensus\") - 5 )\r\n      var periode_sensus = parseInt(localStorage.getItem(\"Periode Sensus\"));\r\n      for (var option = periode_sensus; option <= periode_sensus + 5; option++)\r\n       {tmp.push({\"option\" : option});}\r\n      // console.log('temp =',tmp)\r\n      return tmp.map(option => (\r\n          <option value={option.option}>\r\n            {option.option}\r\n          </option>\r\n                   \r\n           ))}\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n        title={title}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Periode Sensus\"\r\n                margin=\"dense\"\r\n                name=\"Periode_Sensus\"\r\n                onChange={handleChange}\r\n                select\r\n                variant=\"outlined\"\r\n                value={rowSelect.Periode_Sensus}\r\n              >\r\n                {handling()}\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Target KK\"\r\n                margin=\"dense\"\r\n                name=\"Target_KK\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('Target_KK')? formState.errors.Target_KK[0]:null\r\n                }\r\n                error={hasError('Target_KK')}\r\n                defaultValue={rowSelect&&rowSelect.Target_KK? rowSelect.Target_KK:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {provinsi.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChangeKabupaten}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih kecamatan\"\r\n                margin=\"dense\"\r\n                select\r\n                name=\"id_kecamatan\"\r\n                onChange={handleChangeKecamatan}\r\n                value={rowSelect.id_kecamatan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kecamatan.map(option => (\r\n                  <option\r\n                    key={option.id_kecamatan}\r\n                    value={option.id_kecamatan}\r\n                  >\r\n                    {option.nama_kecamatan}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kelurahan\"\r\n                margin=\"dense\"\r\n                name=\"id_kelurahan\"\r\n                onChange={handleChangeKelurahan}\r\n                select\r\n\r\n                value={rowSelect.id_kelurahan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kel.map((option)=> (\r\n                  <option\r\n                    key={option.id_kelurahan}\r\n                    value={option.id_kelurahan}\r\n                  >\r\n                    {option.nama_kelurahan}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Rw\"\r\n                margin=\"dense\"\r\n                name=\"id_rw\"\r\n                onChange={handleChangeRw}\r\n                select\r\n\r\n                value={rowSelect.id_rw}\r\n                variant=\"outlined\"\r\n              >\r\n                {rw.map((option)=> (\r\n                  <option\r\n                    key={option.id_rw}\r\n                    value={option.id_rw}\r\n                  >\r\n                    {option.nama_rw}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Rt\"\r\n                margin=\"dense\"\r\n                name=\"id_rt\"\r\n                onChange={handleChange}\r\n                select\r\n\r\n                value={rowSelect.id_rt}\r\n                variant=\"outlined\"\r\n              >\r\n                {rt.map((option)=> (\r\n                  <option\r\n                    key={option.id_rt}\r\n                    value={option.id_rt}\r\n                  >\r\n                    {option.nama_rt}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTargetKkAddModi.propTypes={\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default TargetKkAddModi;","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { VuserToolbar, TargetKkTable, TargetKkAddModi, ViewMap } from './components';\r\nimport { ModalComponent } from 'components';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKab,urlGetVuser,urlGetTargetKk, urlDeleteTargetkk } from '../../kumpulanUrl'\r\n\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\nimport { async } from 'validate.js';\r\nimport Swal from 'sweetalert2';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst getMockData=() =>{\r\n  mockData.map(mock => {\r\n    return(\r\n      <h4>{mock}</h4>\r\n\r\n    )\r\n  })\r\n  // console.log(mockData)\r\n\r\n  \r\n}\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst VuserList=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getTargetKk() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(Vuser);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlGetTargetKk\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVuser(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setVuser([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  const deleteTargetKk = async (id_rt) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id_rt: id_rt\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteTargetkk\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVuser(data.data);\r\n        setFilteredItems(data.data);\r\n        getTargetKk()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setVuser([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingVuser[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  \r\n\r\n  const deleteVuser=async (e, id) => {\r\n    const selectedVuser_string=selectedVuser.join(\"<batas></batas>\");\r\n    let Vuser3=Vuser.filter(function (entry) {\r\n      return entry&&entry.id&&selectedVuser_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n\r\n    let url=urlDeleteProv\r\n    if (url === 200) {\r\n      // thisClickedFunda.closest(\"tr\").remove();\r\n      // console.log(url.data.message)\r\n    }\r\n\r\n    setFilteredItems(Vuser3)\r\n    setVuser(Vuser3)\r\n    setVuserfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setVuserExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingVuser[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#VuserExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingVuser[0].TitleModule).length)/2\r\n      doc.text(SettingVuser[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('Vuser.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setVuserfind(e.target.value)\r\n      let Vuser4=Vuser.filter(function (entry) {\r\n        return entry&&entry.UserName&&\r\n          ((entry.UserName!==null? entry.UserName:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(Vuser4)? Vuser4:[Vuser4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(Vuser);\r\n    }\r\n    setVuserfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"TargetKK Di Indonesia\";\r\n    const headers = [[\"Periode Sensus\", \"Nama Provinsi\", \"Nama kabupaten\", \"Nama Kecamatan\", \"Nama Kelurahan\", \"Nama Rw\", \"Nama Rt\", \"Target KK\", \"Dibuat oleh\", \"Dibuat tanggal\", \"Terakhir diedit tanggal\", \"Terakhir diedit oleh\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.Periode_Sensus, elt.nama_provinsi, elt.nama_kabupaten, elt.nama_kecamatan, elt.nama_kelurahan, elt.nama_rw, elt.nama_rt, elt.KK, elt.CreatedBy, elt.Created, elt.LastModified, elt.LastModifiedBy]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"rt.pdf\")\r\n  }\r\n\r\n\r\n  const [Vuser, setVuser]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowVuserSelect, setRowVuserSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedVuser, setSelectedVuser]=useState([]);\r\n  const [VuserExport, setVuserExport]=useState([]);\r\n  const [Vuserfind, setVuserfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  // const SettingVuser=useState(mockDataSettingVuser);\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getTargetKk();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedVuser({\r\n      ...setSelectedVuser,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmVuser, kdVuser, status, keyId) => {\r\n    setRowVuserSelect({\r\n      ...selectedVuser,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdVuser']: kdVuser,\r\n      ['nmVuser']: nmVuser,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowVuser, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    // alert(MessageButton)\r\n    setRowVuserSelect(rowVuser);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,RowVuserSelect) => {\r\n    deleteTargetKk(RowVuserSelect.id_rt).then( Swal.fire({\r\n      position: 'center',\r\n      icon: 'success',\r\n      title: 'Data Berhasil Dihapus',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    }))\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowVuserSelect(rowVuser);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getTargetKk}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowVuserSelect} rowSelect={rowVuserSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/*}\r\n      <VuserToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={Vuserfind} deleteVuser={deleteVuser}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        Vuser={Vuser}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <TargetKkTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          rowSelect={rowVuserSelect}\r\n          getMockData={getMockData}\r\n          Vuser = {Vuser}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          deleteVuser={deleteVuser}\r\n          // SettingVuser={SettingVuser}\r\n          VuserExport={VuserExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteVuser={deleteVuser}\r\n          Vuserfind={Vuserfind}\r\n          filteredItems={filteredItems}\r\n          selectedVuser={selectedVuser} \r\n          handleOpen={handleOpen}\r\n          setSelectedVuser={setSelectedVuser}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(TargetKkAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default VuserList;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst UserAccessSurveyTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,kabupatenfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedkabupaten,\r\n    setselectedkabupaten,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Nama User',\r\n      selector: 'NamaLengkap',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'ID Provinsi',\r\n      selector: 'id_provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'ID Kabupaten',\r\n      selector: 'id_kabupaten',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'ID Kecamatan',\r\n      selector: 'id_kecamatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'ID kelurahan',\r\n      selector: 'id_kelurahan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'ID Rw',\r\n      selector: 'id_rw',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'ID Rt',\r\n      selector: 'id_rt',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Periode Sensus',\r\n      selector: 'Periode_Sensus',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Password',\r\n      selector: 'Password',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Edit User Access Survey',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Kabupaten\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      name: 'Hapus User Access Survey',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e, row, \"Hapus Kabupaten\")} ><DeleteIcon /></Button>\r\n      ,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah User Access Survey\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search User Access Survey\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkabupaten_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkabupaten_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkabupaten_var=[];\r\n    }\r\n\r\n    setselectedkabupaten(selectedkabupaten_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkabupaten.indexOf(id);\r\n    let newselectedkabupaten=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(1));\r\n    } else if (selectedIndex===selectedkabupaten.length-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(\r\n        selectedkabupaten.slice(0, selectedIndex),\r\n        selectedkabupaten.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkabupaten(newselectedkabupaten);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"User Access Survey List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUserAccessSurveyTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default UserAccessSurveyTable;","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport {  \r\n  urlAddUserAccessSurvey, \r\n  urlEditKab, \r\n  urlEditUserAccessSurvey, \r\n  urlGetVuser, \r\n  urlProv, \r\n  urlShowRt,\r\n  urlShowKab,\r\n  urlShowKec,\r\n  urlShowKel,\r\n  urlShowRw\r\n } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nconst schema={\r\n  id_rt: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n  },\r\n  Periode_Sensus: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n  },\r\n  id_user: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n  },\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst UserAccessSurveyModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [getProv, setProv]=useState([]);\r\n  const [getKab, setKab]=useState([]);\r\n  const [getKec, setKec]=useState([]);\r\n  const [getKel, setKel]=useState([]);\r\n  const [getRw, setRw]=useState([]);\r\n  const [getRt, setRt]=useState([]);\r\n  const [getUser, setUser]=useState([]);\r\n\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setKab(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setKab([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKecamatan(id_kabupaten) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKec\r\n\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kecamatan =', data.data)\r\n        setKec(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setKec([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKel(id_kecamatan) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kecamatan\": id_kecamatan,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKel\r\n\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kelurahan =',data.data)\r\n        setKel(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setKel([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showRw(id_kelurahan) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kelurahan\": id_kelurahan,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowRw\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('Rw =',data.data)\r\n        setRw(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setRw([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showRt(id_rw) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_rw\": id_rw,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowRt\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('Rw =',data.data)\r\n        setRt(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setRt([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProvinsi() {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv = urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n      \r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getVuser() {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url = urlGetVuser\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setUser(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n      \r\n        setUser([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    getProvinsi()\r\n    getVuser()\r\n    showKab(rowSelect.id_provinsi);\r\n    showKecamatan(rowSelect.id_kabupaten);\r\n    showKel(rowSelect.id_kecamatan);\r\n    showRw(rowSelect.id_kelurahan);\r\n    showRt(rowSelect.id_rw);\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  } \r\n\r\n  const handleChangeKabupaten=event=> {\r\n    handleChange(event)\r\n    showKecamatan(event.target.value)\r\n  }\r\n\r\n  const handleChangeKecamatan=event=> {\r\n    handleChange(event)\r\n    showKel(event.target.value)\r\n  }\r\n\r\n  const handleChangeKelurahan=event=> {\r\n    handleChange(event)\r\n    showRw(event.target.value)\r\n  }\r\n\r\n  const handleChangeRw=event=> {\r\n    handleChange(event)\r\n    showRt(event.target.value)\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=() => {\r\n    const userName=localStorage.getItem('username');\r\n    let url;\r\n    let varJson = {\r\n      \"id\": rowSelect.id,\r\n      \"id_user\": rowSelect.id_user,\r\n      \"id_provinsi\": rowSelect.id_provinsi,\r\n      \"id_kabupaten\": rowSelect.id_kabupaten,\r\n      \"id_kecamatan\": rowSelect.id_kecamatan,\r\n      \"id_kelurahan\": rowSelect.id_kelurahan,\r\n      \"id_rw\": rowSelect.id_rw,\r\n      \"id_rt\": rowSelect.id_rt,\r\n      \"Periode_Sensus\": rowSelect.Periode_Sensus,\r\n    }\r\n    if (rowSelect.id===undefined) {\r\n      url=urlAddUserAccessSurvey;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditUserAccessSurvey;\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n\r\n    //console.log(body);\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson\r\n      )\r\n    }\r\n  \r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    const response=fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })/**/\r\n\r\n      .then(res => {\r\n        //console.log(res)\r\n        //console.log(res.data)\r\n        // alert(res.message)\r\n\r\n        swal(\"Berhasil Tambah data\", \"berhasil\", \"success\").then(\r\n          handleClose()\r\n          )\r\n        getDataBackend();\r\n        //alert(\"Sukses\")\r\n        const data=res;\r\n      })\r\n      .catch((e) => {\r\n\r\n        // swal(\"Gagal Login!\", \"Gagal Login\", \"error\", null, '200x200')\r\n\r\n        return false;\r\n\r\n\r\n      });\r\n    }\r\n\r\n    \r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n  const handling = () => {\r\n    {\r\n      var tmp = [];\r\n      // alert(tmp) \r\n      // alert( localStorage.getItem(\"Periode Sensus\") - 5 )\r\n      var periode_sensus = localStorage.getItem(\"Periode Sensus\");\r\n      for (var option = periode_sensus; option >= periode_sensus - 5; option--) { tmp.push({ \"option\": option }); }\r\n      // console.log('temp =', tmp)\r\n      return tmp.map(option => (\r\n        <option value={option.option}>\r\n          {option.option}\r\n        </option>\r\n\r\n      ))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title={rowSelect.id == undefined ? \"Tambah User Access Survey\" : \"Ubah User Access Survey\"}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n                <TextField\r\n                fullWidth\r\n                label=\"Pilih User\"\r\n                margin=\"dense\"\r\n                name=\"id_user\"\r\n                onChange={handleChange}\r\n                select\r\n\r\n                value={rowSelect.id_user}\r\n                variant=\"outlined\"\r\n              >\r\n                {getUser.map((option)=> (\r\n                  <option\r\n                    key={option.id}\r\n                    value={option.id}\r\n                  >\r\n                    {option.NamaLengkap}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                select\r\n\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {getProv.map((option)=> (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChangeKabupaten}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {getKab.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih kecamatan\"\r\n                margin=\"dense\"\r\n                select\r\n                name=\"id_kecamatan\"\r\n                onChange={handleChangeKecamatan}\r\n                value={rowSelect.id_kecamatan}\r\n                variant=\"outlined\"\r\n              >\r\n                {getKec.map(option => (\r\n                  <option\r\n                    key={option.id_kecamatan}\r\n                    value={option.id_kecamatan}\r\n                  >\r\n                    {option.nama_kecamatan}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kelurahan\"\r\n                margin=\"dense\"\r\n                name=\"id_kelurahan\"\r\n                onChange={handleChangeKelurahan}\r\n                select\r\n\r\n                value={rowSelect.id_kelurahan}\r\n                variant=\"outlined\"\r\n              >\r\n                {getKel.map((option)=> (\r\n                  <option\r\n                    key={option.id_kelurahan}\r\n                    value={option.id_kelurahan}\r\n                  >\r\n                    {option.nama_kelurahan}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Rw\"\r\n                margin=\"dense\"\r\n                name=\"id_rw\"\r\n                onChange={handleChangeRw}\r\n                select\r\n\r\n                value={rowSelect.id_rw}\r\n                variant=\"outlined\"\r\n              >\r\n                {getRw.map((option)=> (\r\n                  <option\r\n                    key={option.id_rw}\r\n                    value={option.id_rw}\r\n                  >\r\n                    {option.nama_rw}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Rt\"\r\n                margin=\"dense\"\r\n                name=\"id_rt\"\r\n                onChange={handleChange}\r\n                select\r\n\r\n                value={rowSelect.id_rt}\r\n                variant=\"outlined\"\r\n              >\r\n                {getRt.map((option)=> (\r\n                  <option\r\n                    key={option.id_rt}\r\n                    value={option.id_rt}\r\n                  >\r\n                    {option.nama_rt}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Periode Sensus\"\r\n                margin=\"dense\"\r\n                name=\"Periode_Sensus\"\r\n                onChange={handleChange}\r\n                select\r\n\r\n                value={rowSelect.Periode_Sensus}\r\n                variant=\"outlined\"\r\n              >\r\n               {handling()}\r\n\r\n              </TextField>\r\n            </Grid>\r\n            \r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUserAccessSurveyModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UserAccessSurveyModi;","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { UserAccessSurveyModi, UserAccessSurveyTable } from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlDeleteUserAccessSurvey, urlGetUserAccessSurvey } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst UserAccessSurveyList=props => {\r\n\r\n  async function getUAS() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(uas);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlGetUserAccessSurvey\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setUAS(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setUAS([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const deleteUAS = async (id) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id: id\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteUserAccessSurvey\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setUAS(data.data);\r\n        setFilteredItems(data.data);\r\n        getUAS()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setUAS([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteuas=(e) => {\r\n    const selecteduas_string=selecteduas.join(\"<batas></batas>\");\r\n    let uas3=uas.filter(function (entry) {\r\n      return entry&&entry.id&&selecteduas_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(uas3)\r\n    setUAS(uas3)\r\n    setUASfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setUASExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#uasExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setUASfind(e.target.value)\r\n      let uas4=uas.filter(function (entry) {\r\n        return entry&&entry.nama_uas&&\r\n          ((entry.nama_uas!==null? entry.nama_uas:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(uas4)? uas4:[uas4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(uas);\r\n    }\r\n    setUASfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [uas, setUAS]=useState([]);\r\n  // const [provinsiId, setProvinsiId]=useState(getUAS());\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowuasSelect, setRowuasSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selecteduas, setSelecteduas]=useState([]);\r\n  const [uasExport, setUASExport]=useState([]);\r\n  const [uasfind, setUASfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getUAS();\r\n    // console.log('prov',provinsiId)\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelecteduas({\r\n      ...setSelecteduas,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowuasSelect({\r\n      ...selecteduas,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowuas, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowuasSelect(rowuas);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowuasSelect) => {\r\n    deleteUAS(rowuasSelect.id)\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowuasSelect(rowuas);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getUAS}\r\n        handleChange={handleChange} setData={setData} \r\n        open={open} setRowSelect={setRowuasSelect} rowSelect={rowuasSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }} className=\"font-poppins\">uas</h5>\r\n      {/*}\r\n      <uasToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={uasfind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        uas={uas}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <UserAccessSurveyTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          uasExport={uasExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          uasfind={uasfind}\r\n          filteredItems={filteredItems}\r\n          selecteduas={selecteduas} \r\n          uasfind={uasfind}\r\n          handleOpen={handleOpen}\r\n          setSelecteduas={setSelecteduas}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(UserAccessSurveyModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default UserAccessSurveyList;","import React from 'react';\r\nimport { Switch, Redirect } from 'react-router-dom';\r\n\r\nimport { RouteWithLayout } from './components';\r\nimport {\r\n  Main as MainLayout,\r\n  Minimal as MinimalLayout,\r\n  MinimalUser as MinimalUserLayout,\r\n} from './layouts';\r\n\r\nimport {\r\n  Team as TeamView,\r\n  ContactUs as ContactUsView,\r\n  Portfolio as PortfolioView,\r\n  Services as ServicesView,\r\n  AboutUs as AboutUsView,\r\n  //Dashboard as DashboardView,\r\n  Home as HomeView,\r\n  MiaCluster as MiaClusterView,\r\n  MiaSubmittion as MiaSubmittionView,   \r\n  MiaReviewing as MiaReviewingView, \r\n  MiaJudging as MiaJudgingView,\r\n  MiaAward as MiaAwardView,\r\n  MiaDashboard as MiaDashboardView,\r\n\r\n  KabKotaList as KabKotaListView,\r\n  ProductList as ProductListView,\r\n  GroupList as GroupListView,\r\n  Typography as TypographyView,\r\n  Icons as IconsView,\r\n  VisitorUser as VisitorUsers,\r\n  Settings as SettingsView,\r\n  SignUp as SignUpView,\r\n  SignIn as SignInView,\r\n  Signout as SignoutView,\r\n  NotFound as NotFoundView,\r\n  KelurahanList as KelurahanListView,\r\n  KabupatenList as KabupatenListView,\r\n  LaporanKabupaten as LaporanKabupatenView,\r\n  KecamatanList as KecamatanListView,\r\n  ProvinsiList as ProvinsiListView,\r\n  RtList as RtListView,\r\n  RwList as RwListView,\r\n\r\n\r\n  Profile as ProfileView,\r\n\r\n\r\n\r\n} from './views';\r\n//import {Technology as DashboardView} from './views/Pages/Dashboard/solution';\r\n//import {Solution} from './views/Pages/Prework/solution';\r\nconst PreworkSolution = React.lazy(() => import('./views/Pages/Prework/solution'));\r\nconst RegistrationSolution = React.lazy(() => import('./views/Pages/Registration/solution'));\r\nconst DashboardSolution = React.lazy(() => import('./views/Pages/Dashboard/solution'));\r\nconst EvaluationSolution = React.lazy(() => import('./views/Pages/Evaluation/solution'));\r\nconst Execution = React.lazy(() => import('./views/Pages/Execution'));\r\nconst TrackSolution = React.lazy(() => import('./views/Pages/Track/solution'));\r\n\r\nconst Routes = () => {\r\n  \r\n//alert(localStorage.getItem(\"Username\"))\r\n  return (\r\n    <Switch>\r\n      {/* <Redirect\r\n        exact\r\n        from=\"/\"\r\n        to=\"/beranda\"\r\n      /> */}\r\n\r\n      {localStorage.getItem(\"username\")/*1===1/**/ ? <Redirect\r\n        exact\r\n        from=\"/\"\r\n        to=\"/home\"\r\n      /> : <Redirect\r\n        exact\r\n        from=\"/\"\r\n        to=\"/login\"\r\n      />}\r\n\r\n\r\n<RouteWithLayout\r\n        component={HomeView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/home\"\r\n      />\r\n\r\n\r\n\r\n\r\n\r\n      <RouteWithLayout\r\n        component={MiaClusterView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/mia/clustering\"\r\n      />\r\n      <RouteWithLayout\r\n        component={MiaSubmittionView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/mia/submission\"\r\n      />\r\n      <RouteWithLayout\r\n        component={MiaReviewingView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/mia/reviewing\"\r\n      />\r\n\r\n      <RouteWithLayout\r\n        component={MiaDashboardView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/mia/dashboard\"\r\n      />\r\n\r\n\r\n      <RouteWithLayout\r\n        component={MiaJudgingView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/mia/judging\"\r\n      />\r\n\r\n    <RouteWithLayout\r\n        component={MiaAwardView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/mia/award\"\r\n      />\r\n\r\n<RouteWithLayout\r\n        component={DashboardSolution}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/dashboardTechnology\"\r\n      />\r\n\r\n<RouteWithLayout\r\n        component={PreworkSolution}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/prework\"\r\n      />     \r\n\r\n      \r\n<RouteWithLayout\r\n        component={RegistrationSolution}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/registration\"\r\n      />\r\n \r\n <RouteWithLayout\r\n        component={EvaluationSolution}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/qualification\"\r\n      />\r\n\r\n<RouteWithLayout\r\n        component={Execution}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/execution\"\r\n      />\r\n\r\n<RouteWithLayout\r\n        component={TrackSolution}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/tracking\"\r\n      />\r\n\r\n      <RouteWithLayout\r\n        component={SignInView}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/login\"\r\n      />\r\n\r\n      {/* Ending */}\r\n\r\n      {/* <RouteWithLayout\r\n        component={SignInView}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/login\"\r\n      />\r\n      <RouteWithLayout\r\n        component={UserSignInView}\r\n        exact\r\n        layout={MinimalUserLayout}\r\n        path=\"/login-user\"\r\n      /> */}\r\n      <RouteWithLayout\r\n        component={SignoutView}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/logout\"\r\n      />\r\n      <RouteWithLayout\r\n        component={NotFoundView}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/not-found\"\r\n      />\r\n      <Redirect to=\"/not-found\" />\r\n    </Switch>\r\n\r\n  );\r\n};\r\n\r\nexport default Routes;","import React, { Component } from 'react';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Chart } from 'react-chartjs-2';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport validate from 'validate.js';\r\n\r\nimport { chartjs } from './helpers';\r\nimport theme from './theme';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport './assets/scss/index.scss';\r\nimport validators from './common/validators';\r\nimport Routes from './Routes';\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\nconst browserHistory=createBrowserHistory();\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw: chartjs.draw\r\n});\r\n\r\nvalidate.validators={\r\n  ...validate.validators,\r\n  ...validators\r\n};\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <Router history={browserHistory}>\r\n          <Routes />\r\n        </Router>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport {createStore} from 'redux'\r\nimport { Provider } from 'react-redux';\r\n\r\nconst globalState={\r\n    orgData:[],\r\n}\r\nconst rootReducer=(state=globalState,action)=>{\r\n    //return state;\r\n  \r\n    switch(action.type)\r\n    {\r\n            case 'UBAH_DATA' :\r\n                alert(action.type)\r\n                return{\r\n                    ... state,                   //\r\n                     orgData:action.newValue\r\n                     //salary:action.newValue\r\n \r\n                    \r\n                }\r\n                default :\r\n                return state;\r\n        \r\n    } \r\n}\r\n//    const storeRedux=createStore(rootReducer)\r\n    const storeRedux=createStore(rootReducer)\r\n\r\nReactDOM.render(<Provider store={storeRedux}><App /></Provider>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}